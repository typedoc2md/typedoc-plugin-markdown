{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "allOf": [
    {
      "$ref": "https://typedoc.org/schema.json"
    },
    {
      "type": "object",
      "properties": {
        "anchorPrefix": {
          "type": "string",
          "description": "[typedoc-plugin-markdown] Custom anchor prefix to add to anchor links."
        },
        "blockTagsPreserveOrder": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "[typedoc-plugin-markdown] Specifies comment block tags that should preserve their position.",
          "default": []
        },
        "classPropertiesFormat": {
          "type": "string",
          "enum": [
            "list",
            "table",
            "htmlTable"
          ],
          "description": "[typedoc-plugin-markdown] Sets the format of property groups for classes.",
          "default": "list"
        },
        "entryFileName": {
          "type": "string",
          "description": "[typedoc-plugin-markdown] The file name of the entry page.",
          "default": "README"
        },
        "entryModule": {
          "type": "string",
          "description": "[typedoc-plugin-markdown] The name of a module that should act as the root page for the documentation."
        },
        "enumMembersFormat": {
          "type": "string",
          "enum": [
            "list",
            "table",
            "htmlTable"
          ],
          "description": "[typedoc-plugin-markdown] Sets the format of enumeration members.",
          "default": "list"
        },
        "excludeGroups": {
          "type": "boolean",
          "deprecated": "This option has been renamed hideGroupHeadings to better reflect its purpose.",
          "description": "[typedoc-plugin-markdown] This option has been renamed hideGroupHeadings to better reflect its purpose."
        },
        "excludeScopesInPaths": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Exclude writing @ scope directories in paths."
        },
        "expandObjects": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Expand objects inside declarations."
        },
        "expandParameters": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Expand parameters in signature parentheses to display type information."
        },
        "fileExtension": {
          "type": "string",
          "description": "[typedoc-plugin-markdown] Specify the file extension for generated output files.",
          "default": ".md"
        },
        "flattenOutputFiles": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Flatten output files to a single directory."
        },
        "formatWithPrettier": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Apply additional output formatting with Prettier."
        },
        "hideBreadcrumbs": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Do not print breadcrumbs."
        },
        "hideGroupHeadings": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Excludes grouping by kind so all members are rendered at the same level."
        },
        "hidePageHeader": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Do not print page header."
        },
        "hidePageTitle": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Do not print page title."
        },
        "indexFormat": {
          "type": "string",
          "enum": [
            "list",
            "table",
            "htmlTable"
          ],
          "description": "[typedoc-plugin-markdown] Sets the format of index items.",
          "default": "list"
        },
        "interfacePropertiesFormat": {
          "type": "string",
          "enum": [
            "list",
            "table",
            "htmlTable"
          ],
          "description": "[typedoc-plugin-markdown] Sets the format of property groups for interfaces.",
          "default": "list"
        },
        "membersWithOwnFile": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Enum",
              "Variable",
              "Function",
              "Class",
              "Interface",
              "TypeAlias"
            ]
          },
          "description": "[typedoc-plugin-markdown] Determines which members are exported to their own file.",
          "default": [
            "Enum",
            "Variable",
            "Function",
            "Class",
            "Interface",
            "TypeAlias"
          ]
        },
        "mergeReadme": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Appends the documentation index page to the readme page."
        },
        "modulesFileName": {
          "type": "string",
          "description": "[typedoc-plugin-markdown] The file name of the separate modules / index page."
        },
        "navigationModel": {
          "type": "object",
          "properties": {
            "excludeGroups": {
              "type": "boolean"
            },
            "excludeCategories": {
              "type": "boolean"
            },
            "excludeFolders": {
              "type": "boolean"
            }
          },
          "deprecated": "This option has been deprecated in favour of TypeDoc `navigation` option.",
          "description": "[typedoc-plugin-markdown] This option has been deprecated in favour of TypeDoc `navigation` option.",
          "default": {
            "excludeGroups": false,
            "excludeCategories": false,
            "excludeFolders": false
          }
        },
        "outputFileStrategy": {
          "type": "string",
          "enum": [
            "members",
            "modules"
          ],
          "deprecated": "Deprecated in favour of `--router`.",
          "description": "[typedoc-plugin-markdown] Deprecated in favour of `--router`.",
          "default": "members"
        },
        "pageTitleTemplates": {
          "type": "object",
          "properties": {
            "index": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$comment": "(name: { projectName: string; version: string }) => string",
                  "type": "object",
                  "properties": {
                    "namedArgs": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "object",
                          "properties": {
                            "projectName": {
                              "type": "string"
                            },
                            "version": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "projectName",
                            "version"
                          ]
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "additionalProperties": false
                    }
                  }
                }
              ]
            },
            "member": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$comment": "(name: { name: string; kind: string; group: string }) => string",
                  "type": "object",
                  "properties": {
                    "namedArgs": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "group": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "kind",
                            "group"
                          ]
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "additionalProperties": false
                    }
                  }
                }
              ]
            },
            "module": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$comment": "(name: { name: string; kind: string }) => string",
                  "type": "object",
                  "properties": {
                    "namedArgs": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "kind"
                          ]
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "additionalProperties": false
                    }
                  }
                }
              ]
            }
          },
          "description": "[typedoc-plugin-markdown] Change specific text placeholders in the template.",
          "default": {
            "index": "{projectName} {version}",
            "member": "{kind}: {name}",
            "module": "{name}"
          }
        },
        "parametersFormat": {
          "type": "string",
          "enum": [
            "list",
            "table",
            "htmlTable"
          ],
          "description": "[typedoc-plugin-markdown] Sets the format of parameter and type parameter groups.",
          "default": "list"
        },
        "preserveAnchorCasing": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Preserve anchor casing when generating link to symbols."
        },
        "prettierConfigFile": {
          "type": "string",
          "description": "[typedoc-plugin-markdown] Specify a custom Prettier configuration file location."
        },
        "propertiesFormat": {
          "type": "string",
          "enum": [
            "list",
            "table",
            "htmlTable"
          ],
          "deprecated": "This option has been deprecated in favour of `--interfacePropertiesFormat` and `--classPropertiesFormat`.",
          "description": "[typedoc-plugin-markdown] This option has been deprecated in favour of `--interfacePropertiesFormat` and `--classPropertiesFormat`.",
          "default": "list"
        },
        "propertyMembersFormat": {
          "type": "string",
          "enum": [
            "list",
            "table",
            "htmlTable"
          ],
          "description": "[typedoc-plugin-markdown] Sets the format of style for property members for interfaces and classes.",
          "default": "list"
        },
        "publicPath": {
          "type": "string",
          "description": "[typedoc-plugin-markdown] Specify the base path for all urls."
        },
        "sanitizeComments": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Sanitize HTML and JSX inside JsDoc comments."
        },
        "tableColumnSettings": {
          "type": "object",
          "properties": {
            "hideDefaults": {
              "type": "boolean"
            },
            "hideInherited": {
              "type": "boolean"
            },
            "hideModifiers": {
              "type": "boolean"
            },
            "hideOverrides": {
              "type": "boolean"
            },
            "hideSources": {
              "type": "boolean"
            },
            "hideValues": {
              "type": "boolean"
            },
            "leftAlignHeaders": {
              "type": "boolean"
            }
          },
          "description": "[typedoc-plugin-markdown] Control how table columns are configured and displayed.",
          "default": {
            "hideDefaults": false,
            "hideInherited": false,
            "hideModifiers": false,
            "hideOverrides": false,
            "hideSources": false,
            "hideValues": false,
            "leftAlignHeaders": false
          }
        },
        "textContentMappings": {
          "type": "object",
          "properties": {
            "header.title": {
              "type": "string"
            },
            "breadcrumbs.home": {
              "type": "string"
            },
            "title.indexPage": {
              "type": "string"
            },
            "title.memberPage": {
              "type": "string"
            },
            "title.modulePage": {
              "type": "string"
            }
          },
          "deprecated": "This option has been deprecated in favour of `--pageTitleTemplates`.",
          "description": "[typedoc-plugin-markdown] This option has been deprecated in favour of `--pageTitleTemplates`.",
          "default": {
            "header.title": "{projectName} {version}",
            "breadcrumbs.home": "{projectName} {version}",
            "title.indexPage": "{projectName} {version}",
            "title.memberPage": "{kind}: {name}",
            "title.modulePage": "{name}"
          }
        },
        "typeAliasPropertiesFormat": {
          "type": "string",
          "enum": [
            "list",
            "table",
            "htmlTable"
          ],
          "description": "[typedoc-plugin-markdown] Sets the format of style for type alias properties.",
          "default": "list"
        },
        "typeDeclarationFormat": {
          "type": "string",
          "enum": [
            "list",
            "table",
            "htmlTable"
          ],
          "description": "[typedoc-plugin-markdown] Sets the format of style for type declaration members.",
          "default": "list"
        },
        "typeDeclarationVisibility": {
          "type": "string",
          "enum": [
            "compact",
            "verbose"
          ],
          "description": "[typedoc-plugin-markdown] Set the visibility level for type declaration documentation.",
          "default": "verbose"
        },
        "useCodeBlocks": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Wraps signatures and declarations in code blocks."
        },
        "useHTMLAnchors": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Add HTML anchors to page headings."
        },
        "useHTMLEncodedBrackets": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Use HTML encoded entities for angle brackets."
        }
      },
      "description": "Describes the options declared by the plugin.",
      "definitions": {}
    }
  ]
}