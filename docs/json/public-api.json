{
	"schemaVersion": "2.0",
	"id": 0,
	"name": "API",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"comment": {
		"summary": [
			{
				"kind": "text",
				"text": "The public API of typedoc-plugin-markdown exposes some classes and types that can be used to customize the output of the plugin."
			}
		]
	},
	"children": [
		{
			"id": 1,
			"name": "MarkdownPageEvent",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An event emitted before and after the markdown of a page is rendered."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 8,
					"name": "project",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The project the renderer is currently processing."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typedoc",
							"packagePath": "dist/lib/models/ProjectReflection.d.ts",
							"qualifiedName": "ProjectReflection"
						},
						"name": "ProjectReflection",
						"package": "typedoc"
					}
				},
				{
					"id": 9,
					"name": "filename",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filename the page will be written to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The url this page will be located at."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11,
					"name": "pageKind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of page this is."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typedoc",
							"packagePath": "dist/lib/output/router.d.ts",
							"qualifiedName": "PageKind"
						},
						"name": "PageKind",
						"package": "typedoc"
					}
				},
				{
					"id": 12,
					"name": "model",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The model that should be rendered on this page."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6,
						"name": "Model",
						"package": "typedoc-plugin-markdown",
						"qualifiedName": "MarkdownPageEvent.Model",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 13,
					"name": "contents",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The final html content of this page.\n\nShould be rendered by layout templates and can be modified by plugins."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "''"
				},
				{
					"id": 2,
					"name": "BEGIN",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Triggered before a document will be rendered."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Events"
									}
								]
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "beginPage"
					},
					"defaultValue": "'beginPage'"
				},
				{
					"id": 3,
					"name": "END",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Triggered after a document has been rendered, just before it is written to disc."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Events"
									}
								]
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "endPage"
					},
					"defaultValue": "'endPage'"
				},
				{
					"id": 4,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 5,
							"name": "MarkdownPageEvent",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"typeParameters": [
								{
									"id": 6,
									"name": "Model",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/output/router.d.ts",
											"qualifiedName": "RouterTarget"
										},
										"name": "RouterTarget",
										"package": "typedoc"
									},
									"default": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/output/router.d.ts",
											"qualifiedName": "RouterTarget"
										},
										"name": "RouterTarget",
										"package": "typedoc"
									},
									"varianceModifier": "out"
								}
							],
							"parameters": [
								{
									"id": 7,
									"name": "model",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 6,
										"name": "Model",
										"package": "typedoc-plugin-markdown",
										"qualifiedName": "MarkdownPageEvent.Model",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "reference",
										"target": 6,
										"name": "Model",
										"package": "typedoc-plugin-markdown",
										"qualifiedName": "MarkdownPageEvent.Model",
										"refersToTypeParameter": true
									}
								],
								"name": "MarkdownPageEvent",
								"package": "typedoc-plugin-markdown"
							}
						}
					]
				},
				{
					"id": 22,
					"name": "preWriteAsyncJobs",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 23,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"signatures": [
									{
										"id": 24,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"parameters": [
											{
												"id": 25,
												"name": "page",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "reference",
													"target": 1,
													"name": "MarkdownPageEvent",
													"package": "typedoc-plugin-markdown"
												}
											}
										],
										"type": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.es5.d.ts",
												"qualifiedName": "Promise"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "void"
												}
											],
											"name": "Promise",
											"package": "typescript"
										}
									}
								]
							}
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 26,
					"name": "isReflectionEvent",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 27,
							"name": "isReflectionEvent",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "predicate",
								"name": "this",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 1,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"packageName": "typedoc",
												"packagePath": "dist/lib/models/Reflection.d.ts",
												"qualifiedName": "Reflection"
											},
											"name": "Reflection",
											"package": "typedoc"
										}
									],
									"name": "MarkdownPageEvent",
									"package": "typedoc-plugin-markdown"
								}
							}
						}
					]
				},
				{
					"id": 14,
					"name": "frontmatter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The frontmatter of this page represented as a key value object. This property can be utilised by other plugins."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Events",
					"children": [
						2,
						3
					]
				},
				{
					"title": "Constructors",
					"children": [
						4
					]
				},
				{
					"title": "Methods",
					"children": [
						26
					]
				},
				{
					"title": "Properties",
					"children": [
						8,
						9,
						10,
						11,
						12,
						13,
						22,
						14
					]
				}
			],
			"typeParameters": [
				{
					"id": 28,
					"name": "Model",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typedoc",
							"packagePath": "dist/lib/output/router.d.ts",
							"qualifiedName": "RouterTarget"
						},
						"name": "RouterTarget",
						"package": "typedoc"
					},
					"default": {
						"type": "reference",
						"target": {
							"packageName": "typedoc",
							"packagePath": "dist/lib/output/router.d.ts",
							"qualifiedName": "RouterTarget"
						},
						"name": "RouterTarget",
						"package": "typedoc"
					},
					"varianceModifier": "out"
				}
			]
		},
		{
			"id": 29,
			"name": "MarkdownRendererEvent",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An event emitted at the beginning and end of the rendering process."
					}
				],
				"blockTags": [
					{
						"tag": "@group",
						"content": [
							{
								"kind": "text",
								"text": "Events"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 37,
					"name": "project",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The project the renderer is currently processing."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typedoc",
							"packagePath": "dist/lib/models/ProjectReflection.d.ts",
							"qualifiedName": "ProjectReflection"
						},
						"name": "ProjectReflection",
						"package": "typedoc"
					}
				},
				{
					"id": 38,
					"name": "outputDirectory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The path of the directory the documentation should be written to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 39,
					"name": "pages",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of all pages that will be generated."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"packageName": "typedoc",
								"packagePath": "dist/lib/output/router.d.ts",
								"qualifiedName": "PageDefinition"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"packageName": "typedoc",
										"packagePath": "dist/lib/output/router.d.ts",
										"qualifiedName": "RouterTarget"
									},
									"name": "RouterTarget",
									"package": "typedoc"
								}
							],
							"name": "PageDefinition",
							"package": "typedoc"
						}
					}
				},
				{
					"id": 30,
					"name": "BEGIN",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Triggered before the renderer starts rendering a project."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Events"
									}
								]
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "beginRender"
					},
					"defaultValue": "'beginRender'"
				},
				{
					"id": 31,
					"name": "END",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Triggered after the renderer has written all documents."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Events"
									}
								]
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "endRender"
					},
					"defaultValue": "'endRender'"
				},
				{
					"id": 40,
					"name": "navigation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The navigation structure of the project that can be utilised by plugins."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 755,
						"name": "NavigationJSON",
						"package": "typedoc-plugin-markdown"
					}
				}
			],
			"groups": [
				{
					"title": "Events",
					"children": [
						30,
						31
					]
				},
				{
					"title": "Properties",
					"children": [
						37,
						38,
						39,
						40
					]
				}
			]
		},
		{
			"id": 41,
			"name": "MemberRouter",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 42,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 43,
							"name": "MemberRouter",
							"variant": "signature",
							"kind": 16384,
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 44,
									"name": "application",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/application.d.ts",
											"qualifiedName": "Application"
										},
										"name": "Application",
										"package": "typedoc",
										"externalUrl": "https://typedoc.org/api/classes/Application.html"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 41,
								"name": "MemberRouter",
								"package": "typedoc-plugin-markdown"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MarkdownRouter.constructor",
								"package": "typedoc-plugin-markdown"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.constructor",
						"package": "typedoc-plugin-markdown"
					}
				},
				{
					"id": 76,
					"name": "extension",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.extension"
					}
				},
				{
					"id": 77,
					"name": "outputFileStrategy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "members"
							},
							{
								"type": "literal",
								"value": "modules"
							}
						]
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.outputFileStrategy"
					}
				},
				{
					"id": 78,
					"name": "entryModule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.entryModule"
					}
				},
				{
					"id": 79,
					"name": "ignoreScopes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.ignoreScopes"
					}
				},
				{
					"id": 80,
					"name": "modulesFileName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.modulesFileName"
					}
				},
				{
					"id": 81,
					"name": "entryFileName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.entryFileName"
					}
				},
				{
					"id": 82,
					"name": "isPackages",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.isPackages"
					}
				},
				{
					"id": 83,
					"name": "membersWithOwnFile",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": "Variable"
								},
								{
									"type": "literal",
									"value": "Function"
								},
								{
									"type": "literal",
									"value": "Class"
								},
								{
									"type": "literal",
									"value": "Interface"
								},
								{
									"type": "literal",
									"value": "Enum"
								},
								{
									"type": "literal",
									"value": "TypeAlias"
								}
							]
						}
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.membersWithOwnFile"
					}
				},
				{
					"id": 84,
					"name": "mergeReadme",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.mergeReadme"
					}
				},
				{
					"id": 85,
					"name": "anchorPrefix",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.anchorPrefix"
					}
				},
				{
					"id": 86,
					"name": "directories",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typedoc",
									"packagePath": "dist/lib/models/kind.d.ts",
									"qualifiedName": "ReflectionKind"
								},
								"name": "ReflectionKind",
								"package": "typedoc"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Map",
						"package": "typescript"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.directories"
					}
				},
				{
					"id": 87,
					"name": "kindsToString",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typedoc",
									"packagePath": "dist/lib/models/kind.d.ts",
									"qualifiedName": "ReflectionKind"
								},
								"name": "ReflectionKind",
								"package": "typedoc"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Map",
						"package": "typescript"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.kindsToString"
					}
				},
				{
					"id": 88,
					"name": "buildPages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 89,
							"name": "buildPages",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"parameters": [
								{
									"id": 90,
									"name": "project",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/models/ProjectReflection.d.ts",
											"qualifiedName": "ProjectReflection"
										},
										"name": "ProjectReflection",
										"package": "typedoc"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"packageName": "typedoc",
										"packagePath": "dist/lib/output/router.d.ts",
										"qualifiedName": "PageDefinition"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"packageName": "typedoc",
												"packagePath": "dist/lib/output/router.d.ts",
												"qualifiedName": "RouterTarget"
											},
											"name": "RouterTarget",
											"package": "typedoc"
										}
									],
									"name": "PageDefinition",
									"package": "typedoc"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MarkdownRouter.buildPages",
								"package": "typedoc-plugin-markdown"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.buildPages",
						"package": "typedoc-plugin-markdown"
					}
				},
				{
					"id": 91,
					"name": "getAnchor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 92,
							"name": "getAnchor",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"parameters": [
								{
									"id": 93,
									"name": "target",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/output/router.d.ts",
											"qualifiedName": "RouterTarget"
										},
										"name": "RouterTarget",
										"package": "typedoc"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MarkdownRouter.getAnchor",
								"package": "typedoc-plugin-markdown"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.getAnchor",
						"package": "typedoc-plugin-markdown"
					}
				},
				{
					"id": 94,
					"name": "getIdealBaseNameFlattened",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 95,
							"name": "getIdealBaseNameFlattened",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"parameters": [
								{
									"id": 96,
									"name": "reflection",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/models/Reflection.d.ts",
											"qualifiedName": "Reflection"
										},
										"name": "Reflection",
										"package": "typedoc"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MarkdownRouter.getIdealBaseNameFlattened"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.getIdealBaseNameFlattened"
					}
				},
				{
					"id": 97,
					"name": "getReflectionAlias",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 98,
							"name": "getReflectionAlias",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"parameters": [
								{
									"id": 99,
									"name": "reflection",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/models/Reflection.d.ts",
											"qualifiedName": "Reflection"
										},
										"name": "Reflection",
										"package": "typedoc"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MarkdownRouter.getReflectionAlias"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.getReflectionAlias"
					}
				},
				{
					"id": 100,
					"name": "getModulesFileName",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 101,
							"name": "getModulesFileName",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"parameters": [
								{
									"id": 102,
									"name": "reflection",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/models/Reflection.d.ts",
											"qualifiedName": "Reflection"
										},
										"name": "Reflection",
										"package": "typedoc"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MarkdownRouter.getModulesFileName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.getModulesFileName"
					}
				},
				{
					"id": 45,
					"name": "buildChildPages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 46,
							"name": "buildChildPages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 47,
									"name": "reflection",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/models/Reflection.d.ts",
											"qualifiedName": "Reflection"
										},
										"name": "Reflection",
										"package": "typedoc"
									}
								},
								{
									"id": 48,
									"name": "outPages",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "typedoc",
												"packagePath": "dist/lib/output/router.d.ts",
												"qualifiedName": "PageDefinition"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"packageName": "typedoc",
														"packagePath": "dist/lib/output/router.d.ts",
														"qualifiedName": "RouterTarget"
													},
													"name": "RouterTarget",
													"package": "typedoc"
												}
											],
											"name": "PageDefinition",
											"package": "typedoc"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "MarkdownRouter.buildChildPages"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.buildChildPages"
					}
				},
				{
					"id": 49,
					"name": "getIdealBaseName",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 50,
							"name": "getIdealBaseName",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Should return the base-relative desired file name for a router target.\nThis name may not be used exactly as TypeDoc will detect conflicts\nand automatically introduce a unique identifier to the URL to resolve\nthem."
									}
								]
							},
							"parameters": [
								{
									"id": 51,
									"name": "reflection",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/models/Reflection.d.ts",
											"qualifiedName": "Reflection"
										},
										"name": "Reflection",
										"package": "typedoc"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "MarkdownRouter.getIdealBaseName"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.getIdealBaseName"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						42
					]
				},
				{
					"title": "Methods",
					"children": [
						88,
						91,
						94,
						97,
						100,
						45,
						49
					]
				},
				{
					"title": "Properties",
					"children": [
						76,
						77,
						78,
						79,
						80,
						81,
						82,
						83,
						84,
						85,
						86,
						87
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"packageName": "typedoc-plugin-markdown",
						"packagePath": "src/router/markdown-router.ts",
						"qualifiedName": "MarkdownRouter"
					},
					"name": "MarkdownRouter",
					"package": "typedoc-plugin-markdown"
				}
			]
		},
		{
			"id": 103,
			"name": "ModuleRouter",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 104,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 105,
							"name": "ModuleRouter",
							"variant": "signature",
							"kind": 16384,
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 106,
									"name": "application",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/application.d.ts",
											"qualifiedName": "Application"
										},
										"name": "Application",
										"package": "typedoc",
										"externalUrl": "https://typedoc.org/api/classes/Application.html"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 103,
								"name": "ModuleRouter",
								"package": "typedoc-plugin-markdown"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MarkdownRouter.constructor",
								"package": "typedoc-plugin-markdown"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.constructor",
						"package": "typedoc-plugin-markdown"
					}
				},
				{
					"id": 147,
					"name": "extension",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.extension"
					}
				},
				{
					"id": 148,
					"name": "outputFileStrategy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "members"
							},
							{
								"type": "literal",
								"value": "modules"
							}
						]
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.outputFileStrategy"
					}
				},
				{
					"id": 149,
					"name": "entryModule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.entryModule"
					}
				},
				{
					"id": 150,
					"name": "ignoreScopes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.ignoreScopes"
					}
				},
				{
					"id": 151,
					"name": "modulesFileName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.modulesFileName"
					}
				},
				{
					"id": 152,
					"name": "entryFileName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.entryFileName"
					}
				},
				{
					"id": 153,
					"name": "isPackages",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.isPackages"
					}
				},
				{
					"id": 154,
					"name": "membersWithOwnFile",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": "Variable"
								},
								{
									"type": "literal",
									"value": "Function"
								},
								{
									"type": "literal",
									"value": "Class"
								},
								{
									"type": "literal",
									"value": "Interface"
								},
								{
									"type": "literal",
									"value": "Enum"
								},
								{
									"type": "literal",
									"value": "TypeAlias"
								}
							]
						}
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.membersWithOwnFile"
					}
				},
				{
					"id": 155,
					"name": "mergeReadme",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.mergeReadme"
					}
				},
				{
					"id": 156,
					"name": "anchorPrefix",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.anchorPrefix"
					}
				},
				{
					"id": 157,
					"name": "directories",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typedoc",
									"packagePath": "dist/lib/models/kind.d.ts",
									"qualifiedName": "ReflectionKind"
								},
								"name": "ReflectionKind",
								"package": "typedoc"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Map",
						"package": "typescript"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.directories"
					}
				},
				{
					"id": 158,
					"name": "kindsToString",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typedoc",
									"packagePath": "dist/lib/models/kind.d.ts",
									"qualifiedName": "ReflectionKind"
								},
								"name": "ReflectionKind",
								"package": "typedoc"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Map",
						"package": "typescript"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.kindsToString"
					}
				},
				{
					"id": 159,
					"name": "buildPages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 160,
							"name": "buildPages",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"parameters": [
								{
									"id": 161,
									"name": "project",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/models/ProjectReflection.d.ts",
											"qualifiedName": "ProjectReflection"
										},
										"name": "ProjectReflection",
										"package": "typedoc"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"packageName": "typedoc",
										"packagePath": "dist/lib/output/router.d.ts",
										"qualifiedName": "PageDefinition"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"packageName": "typedoc",
												"packagePath": "dist/lib/output/router.d.ts",
												"qualifiedName": "RouterTarget"
											},
											"name": "RouterTarget",
											"package": "typedoc"
										}
									],
									"name": "PageDefinition",
									"package": "typedoc"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MarkdownRouter.buildPages",
								"package": "typedoc-plugin-markdown"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.buildPages",
						"package": "typedoc-plugin-markdown"
					}
				},
				{
					"id": 162,
					"name": "getAnchor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 163,
							"name": "getAnchor",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"parameters": [
								{
									"id": 164,
									"name": "target",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/output/router.d.ts",
											"qualifiedName": "RouterTarget"
										},
										"name": "RouterTarget",
										"package": "typedoc"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MarkdownRouter.getAnchor",
								"package": "typedoc-plugin-markdown"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.getAnchor",
						"package": "typedoc-plugin-markdown"
					}
				},
				{
					"id": 165,
					"name": "getIdealBaseNameFlattened",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 166,
							"name": "getIdealBaseNameFlattened",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"parameters": [
								{
									"id": 167,
									"name": "reflection",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/models/Reflection.d.ts",
											"qualifiedName": "Reflection"
										},
										"name": "Reflection",
										"package": "typedoc"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MarkdownRouter.getIdealBaseNameFlattened"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.getIdealBaseNameFlattened"
					}
				},
				{
					"id": 168,
					"name": "getReflectionAlias",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 169,
							"name": "getReflectionAlias",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"parameters": [
								{
									"id": 170,
									"name": "reflection",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/models/Reflection.d.ts",
											"qualifiedName": "Reflection"
										},
										"name": "Reflection",
										"package": "typedoc"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MarkdownRouter.getReflectionAlias"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.getReflectionAlias"
					}
				},
				{
					"id": 171,
					"name": "getModulesFileName",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"signatures": [
						{
							"id": 172,
							"name": "getModulesFileName",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"parameters": [
								{
									"id": 173,
									"name": "reflection",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/models/Reflection.d.ts",
											"qualifiedName": "Reflection"
										},
										"name": "Reflection",
										"package": "typedoc"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MarkdownRouter.getModulesFileName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.getModulesFileName"
					}
				},
				{
					"id": 107,
					"name": "buildChildPages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 108,
							"name": "buildChildPages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 109,
									"name": "reflection",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/models/Reflection.d.ts",
											"qualifiedName": "Reflection"
										},
										"name": "Reflection",
										"package": "typedoc"
									}
								},
								{
									"id": 110,
									"name": "outPages",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"packageName": "typedoc",
												"packagePath": "dist/lib/output/router.d.ts",
												"qualifiedName": "PageDefinition"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"packageName": "typedoc",
														"packagePath": "dist/lib/output/router.d.ts",
														"qualifiedName": "RouterTarget"
													},
													"name": "RouterTarget",
													"package": "typedoc"
												}
											],
											"name": "PageDefinition",
											"package": "typedoc"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "MarkdownRouter.buildChildPages"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.buildChildPages"
					}
				},
				{
					"id": 111,
					"name": "getIdealBaseName",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 112,
							"name": "getIdealBaseName",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Should return the base-relative desired file name for a router target.\nThis name may not be used exactly as TypeDoc will detect conflicts\nand automatically introduce a unique identifier to the URL to resolve\nthem."
									}
								]
							},
							"parameters": [
								{
									"id": 113,
									"name": "reflection",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/models/Reflection.d.ts",
											"qualifiedName": "Reflection"
										},
										"name": "Reflection",
										"package": "typedoc"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "MarkdownRouter.getIdealBaseName"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "MarkdownRouter.getIdealBaseName"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						104
					]
				},
				{
					"title": "Methods",
					"children": [
						159,
						162,
						165,
						168,
						171,
						107,
						111
					]
				},
				{
					"title": "Properties",
					"children": [
						147,
						148,
						149,
						150,
						151,
						152,
						153,
						154,
						155,
						156,
						157,
						158
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"packageName": "typedoc-plugin-markdown",
						"packagePath": "src/router/markdown-router.ts",
						"qualifiedName": "MarkdownRouter"
					},
					"name": "MarkdownRouter",
					"package": "typedoc-plugin-markdown"
				}
			]
		},
		{
			"id": 200,
			"name": "MarkdownThemeContext",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The theme context class that is provided as context on the rendering of every page.\n\nIt is heavily influenced by the equivalent [DefaultThemeRenderContext](https://typedoc.org/api/classes/DefaultThemeRenderContext.html) from the default theme.\n\nThis class can be used to customize the theme output by extending the class and overriding the templates, partials and helpers."
					}
				],
				"blockTags": [
					{
						"tag": "@groupDescription",
						"content": [
							{
								"kind": "text",
								"text": "Properties\n\nProperties are passed into the constructor and are used to provide context to the theme."
							}
						]
					},
					{
						"tag": "@groupDescription",
						"content": [
							{
								"kind": "text",
								"text": "Methods\n\nGeneral context aware helper methods not bound to any specific models that can be used by the theme resources."
							}
						]
					},
					{
						"tag": "@groupDescription",
						"content": [
							{
								"kind": "text",
								"text": "Resources\n\nTheme resources are the main building blocks for the theme context. They are split into three namespaces: "
							},
							{
								"kind": "code",
								"text": "`templates`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`partials`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`helpers`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 206,
					"name": "router",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The markdown router instance."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typedoc",
							"packagePath": "dist/lib/output/router.d.ts",
							"qualifiedName": "Router"
						},
						"name": "Router",
						"package": "typedoc"
					}
				},
				{
					"id": 201,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 202,
							"name": "MarkdownThemeContext",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 203,
									"name": "theme",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The theme instance."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 174,
										"name": "MarkdownTheme",
										"package": "typedoc-plugin-markdown"
									}
								},
								{
									"id": 204,
									"name": "page",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The current page event."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typedoc",
													"packagePath": "dist/lib/models/Reflection.d.ts",
													"qualifiedName": "Reflection"
												},
												"name": "Reflection",
												"package": "typedoc"
											}
										],
										"name": "MarkdownPageEvent",
										"package": "typedoc-plugin-markdown"
									}
								},
								{
									"id": 205,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The options provided to the application."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/utils/options/options.d.ts",
											"qualifiedName": "Options"
										},
										"name": "Options",
										"package": "typedoc"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 200,
								"name": "MarkdownThemeContext",
								"package": "typedoc-plugin-markdown"
							}
						}
					]
				},
				{
					"id": 208,
					"name": "theme",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The theme instance."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 174,
						"name": "MarkdownTheme",
						"package": "typedoc-plugin-markdown"
					}
				},
				{
					"id": 209,
					"name": "page",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The current page event."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"packageName": "typedoc",
									"packagePath": "dist/lib/models/Reflection.d.ts",
									"qualifiedName": "Reflection"
								},
								"name": "Reflection",
								"package": "typedoc"
							}
						],
						"name": "MarkdownPageEvent",
						"package": "typedoc-plugin-markdown"
					}
				},
				{
					"id": 210,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The options provided to the application."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typedoc",
							"packagePath": "dist/lib/utils/options/options.d.ts",
							"qualifiedName": "Options"
						},
						"name": "Options",
						"package": "typedoc"
					}
				},
				{
					"id": 211,
					"name": "templates",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Then "
							},
							{
								"kind": "code",
								"text": "`templates`"
							},
							{
								"kind": "text",
								"text": " namespace holds the main templates for the theme and are mapped to single pages and configured in the MarkdownTheme.\n\nAll templates return a string that is passed back to the renderer. Internally templates call partials and helpers."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Resources"
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 212,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 213,
									"name": "document",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 214,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 215,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 216,
															"name": "page",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "typedoc",
																			"packagePath": "dist/lib/models/DocumentReflection.d.ts",
																			"qualifiedName": "DocumentReflection"
																		},
																		"name": "DocumentReflection",
																		"package": "typedoc"
																	}
																],
																"name": "MarkdownPageEvent",
																"package": "typedoc-plugin-markdown"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 217,
									"name": "hierarchy",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 218,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 219,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 220,
															"name": "page",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "typedoc",
																			"packagePath": "dist/lib/models/ProjectReflection.d.ts",
																			"qualifiedName": "ProjectReflection"
																		},
																		"name": "ProjectReflection",
																		"package": "typedoc"
																	}
																],
																"name": "MarkdownPageEvent",
																"package": "typedoc-plugin-markdown"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 221,
									"name": "index",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 222,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 223,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 224,
															"name": "page",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "typedoc",
																			"packagePath": "dist/lib/models/ProjectReflection.d.ts",
																			"qualifiedName": "ProjectReflection"
																		},
																		"name": "ProjectReflection",
																		"package": "typedoc"
																	}
																],
																"name": "MarkdownPageEvent",
																"package": "typedoc-plugin-markdown"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 225,
									"name": "reflection",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 226,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 227,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 228,
															"name": "page",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "typedoc",
																			"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																			"qualifiedName": "DeclarationReflection"
																		},
																		"name": "DeclarationReflection",
																		"package": "typedoc"
																	}
																],
																"name": "MarkdownPageEvent",
																"package": "typedoc-plugin-markdown"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										213,
										217,
										221,
										225
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 229,
					"name": "partials",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`partials`"
							},
							{
								"kind": "text",
								"text": " namespace holds the partials for the theme and are used by templates to map speficic models to page output.\n\nPlease note that partials::\n\n- Take a "
							},
							{
								"kind": "code",
								"text": "`model`"
							},
							{
								"kind": "text",
								"text": " param (that references a specific TypeDoc model) and an "
							},
							{
								"kind": "code",
								"text": "`options`"
							},
							{
								"kind": "text",
								"text": " param if required.\n- Can call other partials and helpers.\n- Must return a string.\n\nPartials are categorised by their use:\n\n- Page Partials: Partials that render core page elements such as header and breadcrumbs.\n- Container Partials: Partials that are used to render reflection groups and categories.\n- Member Partials: Partials that render specific parts of reflections.\n- Comment Partials: Partials that render comments.\n- Type Partials: Partials that render specific TypeDoc model types."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Resources"
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 230,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 231,
									"name": "comment",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 232,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 233,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 234,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/Comment.d.ts",
																	"qualifiedName": "Comment"
																},
																"name": "Comment",
																"package": "typedoc"
															}
														},
														{
															"id": 235,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 236,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 237,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 238,
																			"name": "showSummary",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 239,
																			"name": "showTags",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 240,
																			"name": "showReturns",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 241,
																			"name": "isTableColumn",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				237,
																				238,
																				239,
																				240,
																				241
																			]
																		}
																	]
																}
															},
															"defaultValue": "{}"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 242,
									"name": "body",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 243,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 244,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 245,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/ContainerReflection.d.ts",
																	"qualifiedName": "ContainerReflection"
																},
																"name": "ContainerReflection",
																"package": "typedoc"
															}
														},
														{
															"id": 246,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 247,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 248,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				248
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 249,
									"name": "categories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 250,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 251,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 252,
															"name": "models",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typedoc",
																		"packagePath": "dist/lib/models/ReflectionCategory.d.ts",
																		"qualifiedName": "ReflectionCategory"
																	},
																	"name": "ReflectionCategory",
																	"package": "typedoc"
																}
															}
														},
														{
															"id": 253,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 254,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 255,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				255
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 256,
									"name": "groups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 257,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 258,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 259,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/ContainerReflection.d.ts",
																	"qualifiedName": "ContainerReflection"
																},
																"name": "ContainerReflection",
																"package": "typedoc"
															}
														},
														{
															"id": 260,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 261,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 262,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 263,
																			"name": "kind",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": {
																					"packageName": "typedoc",
																					"packagePath": "dist/lib/models/kind.d.ts",
																					"qualifiedName": "ReflectionKind"
																				},
																				"name": "ReflectionKind",
																				"package": "typedoc"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				262,
																				263
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 264,
									"name": "members",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 265,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 266,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 267,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typedoc",
																		"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																		"qualifiedName": "DeclarationReflection"
																	},
																	"name": "DeclarationReflection",
																	"package": "typedoc"
																}
															}
														},
														{
															"id": 268,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 269,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 270,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 271,
																			"name": "groupTitle",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				270,
																				271
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 272,
									"name": "accessor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 273,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 274,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 275,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																	"qualifiedName": "DeclarationReflection"
																},
																"name": "DeclarationReflection",
																"package": "typedoc"
															}
														},
														{
															"id": 276,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 277,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 278,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				278
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 279,
									"name": "constructor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 280,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 281,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 282,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																	"qualifiedName": "DeclarationReflection"
																},
																"name": "DeclarationReflection",
																"package": "typedoc"
															}
														},
														{
															"id": 283,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 284,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 285,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				285
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 286,
									"name": "memberContainer",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 287,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 288,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 289,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																	"qualifiedName": "DeclarationReflection"
																},
																"name": "DeclarationReflection",
																"package": "typedoc"
															}
														},
														{
															"id": 290,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 291,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 292,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 293,
																			"name": "nested",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 294,
																			"name": "groupTitle",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				292,
																				293,
																				294
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 295,
									"name": "declaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 296,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 297,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 298,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																	"qualifiedName": "DeclarationReflection"
																},
																"name": "DeclarationReflection",
																"package": "typedoc"
															}
														},
														{
															"id": 299,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 300,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 301,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 302,
																			"name": "nested",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				301,
																				302
																			]
																		}
																	]
																}
															},
															"defaultValue": "..."
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 303,
									"name": "declarationTitle",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 304,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 305,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 306,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																	"qualifiedName": "DeclarationReflection"
																},
																"name": "DeclarationReflection",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 307,
									"name": "documents",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 308,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 309,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 310,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "typedoc",
																			"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																			"qualifiedName": "DeclarationReflection"
																		},
																		"name": "DeclarationReflection",
																		"package": "typedoc"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "typedoc",
																			"packagePath": "dist/lib/models/ProjectReflection.d.ts",
																			"qualifiedName": "ProjectReflection"
																		},
																		"name": "ProjectReflection",
																		"package": "typedoc"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "typedoc",
																			"packagePath": "dist/lib/models/ContainerReflection.d.ts",
																			"qualifiedName": "ContainerReflection"
																		},
																		"name": "ContainerReflection",
																		"package": "typedoc"
																	}
																]
															}
														},
														{
															"id": 311,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 312,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 313,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				313
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 314,
									"name": "enumMembersTable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 315,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 316,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 317,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typedoc",
																		"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																		"qualifiedName": "DeclarationReflection"
																	},
																	"name": "DeclarationReflection",
																	"package": "typedoc"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 318,
									"name": "groupIndex",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 319,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 320,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 321,
															"name": "group",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "typedoc",
																			"packagePath": "dist/lib/models/ReflectionCategory.d.ts",
																			"qualifiedName": "ReflectionCategory"
																		},
																		"name": "ReflectionCategory",
																		"package": "typedoc"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "typedoc",
																			"packagePath": "dist/lib/models/ReflectionGroup.d.ts",
																			"qualifiedName": "ReflectionGroup"
																		},
																		"name": "ReflectionGroup",
																		"package": "typedoc"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 322,
									"name": "hierarchy",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 323,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 324,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 325,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																	"qualifiedName": "DeclarationHierarchy"
																},
																"name": "DeclarationHierarchy",
																"package": "typedoc"
															}
														},
														{
															"id": 326,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 327,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 328,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				328
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 329,
									"name": "indexSignature",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 330,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 331,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 332,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/SignatureReflection.d.ts",
																	"qualifiedName": "SignatureReflection"
																},
																"name": "SignatureReflection",
																"package": "typedoc"
															}
														},
														{
															"id": 333,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 334,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 335,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				335
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 336,
									"name": "inheritance",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 337,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 338,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 339,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "typedoc",
																			"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																			"qualifiedName": "DeclarationReflection"
																		},
																		"name": "DeclarationReflection",
																		"package": "typedoc"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "typedoc",
																			"packagePath": "dist/lib/models/SignatureReflection.d.ts",
																			"qualifiedName": "SignatureReflection"
																		},
																		"name": "SignatureReflection",
																		"package": "typedoc"
																	}
																]
															}
														},
														{
															"id": 340,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 341,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 342,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				342
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 343,
									"name": "memberTitle",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 344,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 345,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 346,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																	"qualifiedName": "DeclarationReflection"
																},
																"name": "DeclarationReflection",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 347,
									"name": "memberWithGroups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Renders a top-level member that contains group and child members such as Classes, Interfaces and Enums."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 348,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 349,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 350,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																	"qualifiedName": "DeclarationReflection"
																},
																"name": "DeclarationReflection",
																"package": "typedoc"
															}
														},
														{
															"id": 351,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 352,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 353,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				353
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 354,
									"name": "parametersList",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 355,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 356,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 357,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typedoc",
																		"packagePath": "dist/lib/models/ParameterReflection.d.ts",
																		"qualifiedName": "ParameterReflection"
																	},
																	"name": "ParameterReflection",
																	"package": "typedoc"
																}
															}
														},
														{
															"id": 358,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 359,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 360,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				360
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 361,
									"name": "parametersTable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 362,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 363,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 364,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typedoc",
																		"packagePath": "dist/lib/models/ParameterReflection.d.ts",
																		"qualifiedName": "ParameterReflection"
																	},
																	"name": "ParameterReflection",
																	"package": "typedoc"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 365,
									"name": "propertiesTable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Renders a collection of properties in a table.\n\nThere is no association list partial for properties as these are handled as a standard list of members."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 366,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 367,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 368,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typedoc",
																		"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																		"qualifiedName": "DeclarationReflection"
																	},
																	"name": "DeclarationReflection",
																	"package": "typedoc"
																}
															}
														},
														{
															"id": 369,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 370,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 371,
																			"name": "isEventProps",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 372,
																			"name": "kind",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": {
																					"packageName": "typedoc",
																					"packagePath": "dist/lib/models/kind.d.ts",
																					"qualifiedName": "ReflectionKind"
																				},
																				"name": "ReflectionKind",
																				"package": "typedoc"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				371,
																				372
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 373,
									"name": "referenceMember",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 374,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 375,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 376,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/ReferenceReflection.d.ts",
																	"qualifiedName": "ReferenceReflection"
																},
																"name": "ReferenceReflection",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 377,
									"name": "signature",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 378,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 379,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 380,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/SignatureReflection.d.ts",
																	"qualifiedName": "SignatureReflection"
																},
																"name": "SignatureReflection",
																"package": "typedoc"
															}
														},
														{
															"id": 381,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 382,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 383,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 384,
																			"name": "nested",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 385,
																			"name": "accessor",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 386,
																			"name": "multipleSignatures",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 387,
																			"name": "hideTitle",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				383,
																				384,
																				385,
																				386,
																				387
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 388,
									"name": "signatureParameters",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 389,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 390,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 391,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typedoc",
																		"packagePath": "dist/lib/models/ParameterReflection.d.ts",
																		"qualifiedName": "ParameterReflection"
																	},
																	"name": "ParameterReflection",
																	"package": "typedoc"
																}
															}
														},
														{
															"id": 392,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 393,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 394,
																			"name": "forceExpandParameters",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				394
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 395,
									"name": "signatureReturns",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 396,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 397,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 398,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/SignatureReflection.d.ts",
																	"qualifiedName": "SignatureReflection"
																},
																"name": "SignatureReflection",
																"package": "typedoc"
															}
														},
														{
															"id": 399,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 400,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 401,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				401
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 402,
									"name": "signatureTitle",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 403,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 404,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 405,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/SignatureReflection.d.ts",
																	"qualifiedName": "SignatureReflection"
																},
																"name": "SignatureReflection",
																"package": "typedoc"
															}
														},
														{
															"id": 406,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 407,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 408,
																			"name": "accessor",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 409,
																			"name": "includeType",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				408,
																				409
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 410,
									"name": "signatures",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 411,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 412,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 413,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																	"qualifiedName": "DeclarationReflection"
																},
																"name": "DeclarationReflection",
																"package": "typedoc"
															}
														},
														{
															"id": 414,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 415,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 416,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 417,
																			"name": "nested",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				416,
																				417
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 418,
									"name": "sources",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 419,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 420,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 421,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "typedoc",
																			"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																			"qualifiedName": "DeclarationReflection"
																		},
																		"name": "DeclarationReflection",
																		"package": "typedoc"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "typedoc",
																			"packagePath": "dist/lib/models/SignatureReflection.d.ts",
																			"qualifiedName": "SignatureReflection"
																		},
																		"name": "SignatureReflection",
																		"package": "typedoc"
																	}
																]
															}
														},
														{
															"id": 422,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 423,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 424,
																			"name": "hideLabel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				424
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 425,
									"name": "member",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 426,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 427,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 428,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																	"qualifiedName": "DeclarationReflection"
																},
																"name": "DeclarationReflection",
																"package": "typedoc"
															}
														},
														{
															"id": 429,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 430,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 431,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 432,
																			"name": "nested",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				431,
																				432
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 433,
									"name": "typeAndParent",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 434,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 435,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 436,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "typedoc",
																			"packagePath": "dist/lib/models/types.d.ts",
																			"qualifiedName": "ReferenceType"
																		},
																		"name": "ReferenceType",
																		"package": "typedoc"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "typedoc",
																			"packagePath": "dist/lib/models/types.d.ts",
																			"qualifiedName": "ArrayType"
																		},
																		"name": "ArrayType",
																		"package": "typedoc"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 437,
									"name": "typeArguments",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 438,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 439,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 440,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typedoc",
																		"packagePath": "dist/lib/models/types.d.ts",
																		"qualifiedName": "SomeType"
																	},
																	"name": "SomeType",
																	"package": "typedoc"
																}
															}
														},
														{
															"id": 441,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 442,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 443,
																			"name": "forceCollapse",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				443
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 444,
									"name": "typeDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 445,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 446,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 447,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																	"qualifiedName": "DeclarationReflection"
																},
																"name": "DeclarationReflection",
																"package": "typedoc"
															}
														},
														{
															"id": 448,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 449,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 450,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 451,
																			"name": "allowSource",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				450,
																				451
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 452,
									"name": "typeDeclarationContainer",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 453,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 454,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 455,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																	"qualifiedName": "DeclarationReflection"
																},
																"name": "DeclarationReflection",
																"package": "typedoc"
															}
														},
														{
															"id": 456,
															"name": "typeDeclaration",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																	"qualifiedName": "DeclarationReflection"
																},
																"name": "DeclarationReflection",
																"package": "typedoc"
															}
														},
														{
															"id": 457,
															"name": "opts",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 458,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 459,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		},
																		{
																			"id": 460,
																			"name": "nested",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				459,
																				460
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 461,
									"name": "typeDeclarationList",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 462,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 463,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 464,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typedoc",
																		"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																		"qualifiedName": "DeclarationReflection"
																	},
																	"name": "DeclarationReflection",
																	"package": "typedoc"
																}
															}
														},
														{
															"id": 465,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 466,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 467,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				467
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 468,
									"name": "typeDeclarationTable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 469,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 470,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 471,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typedoc",
																		"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																		"qualifiedName": "DeclarationReflection"
																	},
																	"name": "DeclarationReflection",
																	"package": "typedoc"
																}
															}
														},
														{
															"id": 472,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 473,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 474,
																			"name": "kind",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "reference",
																				"target": {
																					"packageName": "typedoc",
																					"packagePath": "dist/lib/models/kind.d.ts",
																					"qualifiedName": "ReflectionKind"
																				},
																				"name": "ReflectionKind",
																				"package": "typedoc"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				474
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 475,
									"name": "typeDeclarationUnionContainer",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 476,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 477,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 478,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																	"qualifiedName": "DeclarationReflection"
																},
																"name": "DeclarationReflection",
																"package": "typedoc"
															}
														},
														{
															"id": 479,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 480,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 481,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				481
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 482,
									"name": "typeParametersList",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 483,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 484,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 485,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typedoc",
																		"packagePath": "dist/lib/models/TypeParameterReflection.d.ts",
																		"qualifiedName": "TypeParameterReflection"
																	},
																	"name": "TypeParameterReflection",
																	"package": "typedoc"
																}
															}
														},
														{
															"id": 486,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 487,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 488,
																			"name": "headingLevel",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				488
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 489,
									"name": "typeParametersTable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 490,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 491,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 492,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typedoc",
																		"packagePath": "dist/lib/models/TypeParameterReflection.d.ts",
																		"qualifiedName": "TypeParameterReflection"
																	},
																	"name": "TypeParameterReflection",
																	"package": "typedoc"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 493,
									"name": "breadcrumbs",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 494,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 495,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 496,
									"name": "footer",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 497,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 498,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 499,
									"name": "header",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 500,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 501,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 502,
									"name": "packagesIndex",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 503,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 504,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 505,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/ProjectReflection.d.ts",
																	"qualifiedName": "ProjectReflection"
																},
																"name": "ProjectReflection",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 506,
									"name": "pageTitle",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 507,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 508,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 509,
									"name": "arrayType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 510,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 511,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 512,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "ArrayType"
																},
																"name": "ArrayType",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 513,
									"name": "conditionalType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 514,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 515,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 516,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "ConditionalType"
																},
																"name": "ConditionalType",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 517,
									"name": "indexAccessType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 518,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 519,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 520,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "IndexedAccessType"
																},
																"name": "IndexedAccessType",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 521,
									"name": "inferredType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 522,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 523,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 524,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "InferredType"
																},
																"name": "InferredType",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 525,
									"name": "intersectionType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 526,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 527,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 528,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "IntersectionType"
																},
																"name": "IntersectionType",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 529,
									"name": "intrinsicType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 530,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 531,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 532,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "IntrinsicType"
																},
																"name": "IntrinsicType",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 533,
									"name": "literalType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 534,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 535,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 536,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "LiteralType"
																},
																"name": "LiteralType",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 537,
									"name": "namedTupleType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 538,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 539,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 540,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "NamedTupleMember"
																},
																"name": "NamedTupleMember",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 541,
									"name": "optionalType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 542,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 543,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 544,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "OptionalType"
																},
																"name": "OptionalType",
																"package": "typedoc"
															}
														},
														{
															"id": 545,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 546,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 547,
																			"name": "forceCollapse",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				547
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 548,
									"name": "queryType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 549,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 550,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 551,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "QueryType"
																},
																"name": "QueryType",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 552,
									"name": "referenceType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 553,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 554,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 555,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "ReferenceType"
																},
																"name": "ReferenceType",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 556,
									"name": "declarationType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 557,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 558,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 559,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																	"qualifiedName": "DeclarationReflection"
																},
																"name": "DeclarationReflection",
																"package": "typedoc"
															}
														},
														{
															"id": 560,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 561,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 562,
																			"name": "forceCollapse",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				562
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 563,
									"name": "functionType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 564,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 565,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 566,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typedoc",
																		"packagePath": "dist/lib/models/SignatureReflection.d.ts",
																		"qualifiedName": "SignatureReflection"
																	},
																	"name": "SignatureReflection",
																	"package": "typedoc"
																}
															}
														},
														{
															"id": 567,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 568,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 569,
																			"name": "forceParameterType",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 570,
																			"name": "typeSeparator",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				569,
																				570
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 571,
									"name": "reflectionType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 572,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 573,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 574,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "ReflectionType"
																},
																"name": "ReflectionType",
																"package": "typedoc"
															}
														},
														{
															"id": 575,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 576,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 577,
																			"name": "forceCollapse",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				577
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 578,
									"name": "someType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 579,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 580,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 581,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "SomeType"
																},
																"name": "SomeType",
																"package": "typedoc"
															}
														},
														{
															"id": 582,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 583,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 584,
																			"name": "forceCollapse",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				584
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 585,
									"name": "tupleType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 586,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 587,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 588,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "TupleType"
																},
																"name": "TupleType",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 589,
									"name": "typeOperatorType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 590,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 591,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 592,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "TypeOperatorType"
																},
																"name": "TypeOperatorType",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 593,
									"name": "unionType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 594,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 595,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 596,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "UnionType"
																},
																"name": "UnionType",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 597,
									"name": "unknownType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 598,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 599,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 600,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "UnknownType"
																},
																"name": "UnknownType",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										231,
										242,
										249,
										256,
										264,
										272,
										279,
										286,
										295,
										303,
										307,
										314,
										318,
										322,
										329,
										336,
										343,
										347,
										354,
										361,
										365,
										373,
										377,
										388,
										395,
										402,
										410,
										418,
										425,
										433,
										437,
										444,
										452,
										461,
										468,
										475,
										482,
										489,
										493,
										496,
										499,
										502,
										506,
										509,
										513,
										517,
										521,
										525,
										529,
										533,
										537,
										541,
										548,
										552,
										556,
										563,
										571,
										578,
										585,
										589,
										593,
										597
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 601,
					"name": "helpers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`helpers`"
							},
							{
								"kind": "text",
								"text": " namespace holds the helpers for the theme and are smaller utility functions that return snippets or text or other data transformations.\n\nPlease note that partials:\n\n- Take a "
							},
							{
								"kind": "code",
								"text": "`model`"
							},
							{
								"kind": "text",
								"text": " param (that references a specific TypeDoc model) and an "
							},
							{
								"kind": "code",
								"text": "`options`"
							},
							{
								"kind": "text",
								"text": " param if required.\n- Can reference other helpers but should not reference partials.\n- Can return strings or other models."
							}
						],
						"blockTags": [
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Resources"
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 602,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 603,
									"name": "getAngleBracket",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 604,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 605,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 606,
															"name": "bracket",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "<"
																	},
																	{
																		"type": "literal",
																		"value": ">"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 607,
									"name": "getCommentParts",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 608,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 609,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 610,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typedoc",
																		"packagePath": "dist/lib/models/Comment.d.ts",
																		"qualifiedName": "CommentDisplayPart"
																	},
																	"name": "CommentDisplayPart",
																	"package": "typedoc"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 611,
									"name": "getDeclarationType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 612,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 613,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 614,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																	"qualifiedName": "DeclarationReflection"
																},
																"name": "DeclarationReflection",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "SomeType"
																},
																"name": "SomeType",
																"package": "typedoc"
															}
														]
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 615,
									"name": "getDescriptionForComment",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 616,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 617,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 618,
															"name": "comment",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/Comment.d.ts",
																	"qualifiedName": "Comment"
																},
																"name": "Comment",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 619,
									"name": "getFlattenedDeclarations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 620,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 621,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 622,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"packageName": "typedoc",
																		"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																		"qualifiedName": "DeclarationReflection"
																	},
																	"name": "DeclarationReflection",
																	"package": "typedoc"
																}
															}
														},
														{
															"id": 623,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 624,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 625,
																			"name": "includeSignatures",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				625
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"packageName": "typedoc",
																"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																"qualifiedName": "DeclarationReflection"
															},
															"name": "DeclarationReflection",
															"package": "typedoc"
														}
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 626,
									"name": "getHierarchyType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 627,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 628,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 629,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "SomeType"
																},
																"name": "SomeType",
																"package": "typedoc"
															}
														},
														{
															"id": 630,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 631,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 632,
																			"name": "isTarget",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				632
																			]
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 633,
									"name": "getKeyword",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 634,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 635,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 636,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/kind.d.ts",
																	"qualifiedName": "ReflectionKind"
																},
																"name": "ReflectionKind",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 637,
									"name": "getModifier",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 638,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 639,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 640,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																	"qualifiedName": "DeclarationReflection"
																},
																"name": "DeclarationReflection",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 641,
									"name": "getParameterDefaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 642,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 643,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 644,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/ParameterReflection.d.ts",
																	"qualifiedName": "ParameterReflection"
																},
																"name": "ParameterReflection",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 645,
									"name": "getProjectName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 646,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 647,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 648,
															"name": "stringWithPlaceholders",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 649,
															"name": "page",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "typedoc",
																			"packagePath": "dist/lib/models/Reflection.d.ts",
																			"qualifiedName": "Reflection"
																		},
																		"name": "Reflection",
																		"package": "typedoc"
																	}
																],
																"name": "MarkdownPageEvent",
																"package": "typedoc-plugin-markdown"
															}
														},
														{
															"id": 650,
															"name": "includeVersion",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "true"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 651,
									"name": "getPropertyDefaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 652,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 653,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 654,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																	"qualifiedName": "DeclarationReflection"
																},
																"name": "DeclarationReflection",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 655,
									"name": "getReflectionFlags",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 656,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 657,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 658,
															"name": "reflectionFlags",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/Reflection.d.ts",
																	"qualifiedName": "ReflectionFlags"
																},
																"name": "ReflectionFlags",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 659,
									"name": "getReturnType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 660,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 661,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 662,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "SomeType"
																},
																"name": "SomeType",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 663,
									"name": "hasSignatures",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 664,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 665,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 666,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																	"qualifiedName": "DeclarationReflection"
																},
																"name": "DeclarationReflection",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 667,
									"name": "hasUsefulTypeDetails",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 668,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 669,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 670,
															"name": "type",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/types.d.ts",
																	"qualifiedName": "SomeType"
																},
																"name": "SomeType",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 671,
									"name": "isGroupKind",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 672,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 673,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 674,
															"name": "model",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "typedoc",
																			"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
																			"qualifiedName": "DeclarationReflection"
																		},
																		"name": "DeclarationReflection",
																		"package": "typedoc"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "typedoc",
																			"packagePath": "dist/lib/models/SignatureReflection.d.ts",
																			"qualifiedName": "SignatureReflection"
																		},
																		"name": "SignatureReflection",
																		"package": "typedoc"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 675,
									"name": "useTableFormat",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 676,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 677,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 678,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "parameters"
																	},
																	{
																		"type": "literal",
																		"value": "properties"
																	},
																	{
																		"type": "literal",
																		"value": "enums"
																	},
																	{
																		"type": "literal",
																		"value": "typeDeclarations"
																	},
																	{
																		"type": "literal",
																		"value": "propertyMembers"
																	}
																]
															}
														},
														{
															"id": 679,
															"name": "reflectionKind",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typedoc",
																	"packagePath": "dist/lib/models/kind.d.ts",
																	"qualifiedName": "ReflectionKind"
																},
																"name": "ReflectionKind",
																"package": "typedoc"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										603,
										607,
										611,
										615,
										619,
										626,
										633,
										637,
										641,
										645,
										651,
										655,
										659,
										663,
										667,
										671,
										675
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 680,
					"name": "getPackageMetaData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 681,
							"name": "getPackageMetaData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the package meta data for a given package name when entrypointStrategy is set to "
									},
									{
										"kind": "code",
										"text": "`packages`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"parameters": [
								{
									"id": 682,
									"name": "packageName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The package name as per "
											},
											{
												"kind": "code",
												"text": "`name`"
											},
											{
												"kind": "text",
												"text": " field from "
											},
											{
												"kind": "code",
												"text": "`package.json`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typedoc-plugin-markdown",
											"packagePath": "src/types/theme.ts",
											"qualifiedName": "PackageMetaData"
										},
										"name": "PackageMetaData",
										"package": "typedoc-plugin-markdown"
									}
								]
							}
						}
					]
				},
				{
					"id": 683,
					"name": "getPackagesCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 684,
							"name": "getPackagesCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Return the number of packages in the project."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 685,
					"name": "relativeURL",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 686,
							"name": "relativeURL",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a url relative to the current page."
									}
								]
							},
							"parameters": [
								{
									"id": 687,
									"name": "url",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 688,
					"name": "urlTo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 689,
							"name": "urlTo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the relative url of a given reflection."
									}
								]
							},
							"parameters": [
								{
									"id": 690,
									"name": "reflection",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/models/Reflection.d.ts",
											"qualifiedName": "Reflection"
										},
										"name": "Reflection",
										"package": "typedoc"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 691,
					"name": "hook",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook into the TypeDoc rendering system."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 692,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 693,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Emits an event to all currently subscribed listeners."
											}
										]
									},
									"typeParameters": [
										{
											"id": 694,
											"name": "K",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"target": 742,
													"name": "MarkdownRendererHooks",
													"package": "typedoc-plugin-markdown"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 695,
											"name": "event",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the event to emit."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 694,
												"name": "K",
												"package": "typedoc",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 696,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "any arguments required for the event."
													}
												]
											},
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 694,
													"name": "K",
													"package": "typedoc",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 742,
													"name": "MarkdownRendererHooks",
													"package": "typedoc-plugin-markdown"
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						}
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						201
					]
				},
				{
					"title": "Methods",
					"description": [
						{
							"kind": "text",
							"text": "\nGeneral context aware helper methods not bound to any specific models that can be used by the theme resources."
						}
					],
					"children": [
						680,
						683,
						685,
						688
					]
				},
				{
					"title": "Properties",
					"description": [
						{
							"kind": "text",
							"text": "\nProperties are passed into the constructor and are used to provide context to the theme."
						}
					],
					"children": [
						206,
						208,
						209,
						210,
						691
					]
				},
				{
					"title": "Resources",
					"description": [
						{
							"kind": "text",
							"text": "\nTheme resources are the main building blocks for the theme context. They are split into three namespaces: "
						},
						{
							"kind": "code",
							"text": "`templates`"
						},
						{
							"kind": "text",
							"text": ", "
						},
						{
							"kind": "code",
							"text": "`partials`"
						},
						{
							"kind": "text",
							"text": " and "
						},
						{
							"kind": "code",
							"text": "`helpers`"
						},
						{
							"kind": "text",
							"text": "."
						}
					],
					"children": [
						211,
						229,
						601
					]
				}
			]
		},
		{
			"id": 174,
			"name": "MarkdownTheme",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main theme class for the plugin.\n\nThe class controls how TypeDoc models are mapped to files and templates and extends TypeDoc's base Theme class.\n\nYou would typically only be interested in overriding the the theme's render context instance.\n\nThe API follows the implementation of [TypeDoc's custom theming](https://github.com/TypeStrong/typedoc/blob/master/internal-docs/custom-themes.md) with some minor adjustments."
					}
				]
			},
			"children": [
				{
					"id": 178,
					"name": "router",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typedoc",
							"packagePath": "dist/lib/output/router.d.ts",
							"qualifiedName": "Router"
						},
						"name": "Router",
						"package": "typedoc"
					}
				},
				{
					"id": 175,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 176,
							"name": "MarkdownTheme",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 177,
									"name": "renderer",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/output/renderer.d.ts",
											"qualifiedName": "Renderer"
										},
										"name": "Renderer",
										"package": "typedoc",
										"externalUrl": "https://typedoc.org/api/classes/Renderer.html"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 174,
								"name": "MarkdownTheme",
								"package": "typedoc-plugin-markdown"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Theme.constructor",
								"package": "typedoc"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Theme.constructor",
						"package": "typedoc"
					}
				},
				{
					"id": 179,
					"name": "render",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 180,
							"name": "render",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders a template and page model to a string."
									}
								]
							},
							"parameters": [
								{
									"id": 181,
									"name": "page",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1,
										"name": "MarkdownPageEvent",
										"package": "typedoc-plugin-markdown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Theme.render"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Theme.render"
					}
				},
				{
					"id": 182,
					"name": "getNavigation",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 183,
							"name": "getNavigation",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 184,
									"name": "project",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typedoc",
											"packagePath": "dist/lib/models/ProjectReflection.d.ts",
											"qualifiedName": "ProjectReflection"
										},
										"name": "ProjectReflection",
										"package": "typedoc"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 749,
									"name": "NavigationItem",
									"package": "typedoc-plugin-markdown"
								}
							}
						}
					]
				},
				{
					"id": 185,
					"name": "getRenderContext",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 186,
							"name": "getRenderContext",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 187,
									"name": "page",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typedoc",
													"packagePath": "dist/lib/models/Reflection.d.ts",
													"qualifiedName": "Reflection"
												},
												"name": "Reflection",
												"package": "typedoc"
											}
										],
										"name": "MarkdownPageEvent",
										"package": "typedoc-plugin-markdown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 200,
								"name": "MarkdownThemeContext",
								"package": "typedoc-plugin-markdown"
							}
						}
					]
				},
				{
					"id": 188,
					"name": "indexTemplate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 189,
							"name": "indexTemplate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 190,
									"name": "page",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typedoc",
													"packagePath": "dist/lib/models/ProjectReflection.d.ts",
													"qualifiedName": "ProjectReflection"
												},
												"name": "ProjectReflection",
												"package": "typedoc"
											}
										],
										"name": "MarkdownPageEvent",
										"package": "typedoc-plugin-markdown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 191,
					"name": "reflectionTemplate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 192,
							"name": "reflectionTemplate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 193,
									"name": "page",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typedoc",
													"packagePath": "dist/lib/models/DeclarationReflection.d.ts",
													"qualifiedName": "DeclarationReflection"
												},
												"name": "DeclarationReflection",
												"package": "typedoc"
											}
										],
										"name": "MarkdownPageEvent",
										"package": "typedoc-plugin-markdown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 194,
					"name": "documentTemplate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 195,
							"name": "documentTemplate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 196,
									"name": "page",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typedoc",
													"packagePath": "dist/lib/models/DocumentReflection.d.ts",
													"qualifiedName": "DocumentReflection"
												},
												"name": "DocumentReflection",
												"package": "typedoc"
											}
										],
										"name": "MarkdownPageEvent",
										"package": "typedoc-plugin-markdown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 197,
					"name": "hierarchyTemplate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 198,
							"name": "hierarchyTemplate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 199,
									"name": "page",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "typedoc",
													"packagePath": "dist/lib/models/ProjectReflection.d.ts",
													"qualifiedName": "ProjectReflection"
												},
												"name": "ProjectReflection",
												"package": "typedoc"
											}
										],
										"name": "MarkdownPageEvent",
										"package": "typedoc-plugin-markdown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						175
					]
				},
				{
					"title": "Methods",
					"children": [
						179,
						182,
						185,
						188,
						191,
						194,
						197
					]
				},
				{
					"title": "Properties",
					"children": [
						178
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"packageName": "typedoc",
						"packagePath": "dist/lib/output/theme.d.ts",
						"qualifiedName": "Theme"
					},
					"name": "Theme",
					"package": "typedoc"
				}
			]
		},
		{
			"id": 697,
			"name": "MarkdownApplication",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Type definition for a TypeDoc "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Application",
						"target": "https://typedoc.org/api/classes/Application.html"
					},
					{
						"kind": "text",
						"text": " instance patched by "
					},
					{
						"kind": "code",
						"text": "`typedoc-plugin-markdown`"
					},
					{
						"kind": "text",
						"text": "\nto use a "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "MarkdownRenderer",
						"target": 699
					},
					{
						"kind": "text",
						"text": ".\n\nThis interface has no runtime implementation. It exists to align TypeScript typings\nwith the runtime modifications made by the Markdown plugin (overriding the default renderer).\n\nTo create an unmodified application instance, use the TypeDoc "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Application",
						"target": "https://typedoc.org/api/classes/Application.html"
					},
					{
						"kind": "text",
						"text": " class directly."
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "text",
								"text": "https://typedoc.org/documents/Overview.html#node-module"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 698,
					"name": "renderer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The renderer used to generate the documentation output."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 699,
						"name": "MarkdownRenderer",
						"package": "typedoc-plugin-markdown"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Application.renderer"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						698
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"packageName": "typedoc",
						"packagePath": "dist/lib/application.d.ts",
						"qualifiedName": "Application"
					},
					"name": "Application",
					"package": "typedoc",
					"externalUrl": "https://typedoc.org/api/classes/Application.html"
				}
			]
		},
		{
			"id": 742,
			"name": "MarkdownRendererHooks",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes the hooks available to inject output in the markdown theme."
					}
				]
			},
			"children": [
				{
					"id": 743,
					"name": "page.begin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Applied at the start of the markdown output."
							}
						]
					},
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": 200,
								"name": "MarkdownThemeContext",
								"package": "typedoc-plugin-markdown"
							}
						]
					}
				},
				{
					"id": 744,
					"name": "page.end",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Applied at the end of the markdown output."
							}
						]
					},
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": 200,
								"name": "MarkdownThemeContext",
								"package": "typedoc-plugin-markdown"
							}
						]
					}
				},
				{
					"id": 745,
					"name": "index.page.begin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Applied at the start of the markdown output on the index page."
							}
						]
					},
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": 200,
								"name": "MarkdownThemeContext",
								"package": "typedoc-plugin-markdown"
							}
						]
					}
				},
				{
					"id": 746,
					"name": "index.page.end",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Applied at the end of the markdown output on the index page."
							}
						]
					},
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": 200,
								"name": "MarkdownThemeContext",
								"package": "typedoc-plugin-markdown"
							}
						]
					}
				},
				{
					"id": 747,
					"name": "content.begin",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Applied before the main markdown content is rendered."
							}
						]
					},
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": 200,
								"name": "MarkdownThemeContext",
								"package": "typedoc-plugin-markdown"
							}
						]
					}
				},
				{
					"id": 748,
					"name": "content.end",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Applied after the main markdown content is rendered."
							}
						]
					},
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": 200,
								"name": "MarkdownThemeContext",
								"package": "typedoc-plugin-markdown"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						743,
						744,
						745,
						746,
						747,
						748
					]
				}
			]
		},
		{
			"id": 699,
			"name": "MarkdownRenderer",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The MarkdownRenderer extends TypeDoc's "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Renderer",
						"target": "https://typedoc.org/api/classes/Renderer.html"
					},
					{
						"kind": "text",
						"text": " instance with custom hooks and async jobs."
					}
				]
			},
			"children": [
				{
					"id": 700,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 701,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\napp.renderer.on(MarkdownPageEvent.BEGIN, (renderer) => {});\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 702,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Triggered before or after a document will be rendered."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "beginPage"
											},
											{
												"type": "literal",
												"value": "endPage"
											}
										]
									}
								},
								{
									"id": 703,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Receives the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "MarkdownPageEvent",
												"target": 1
											},
											{
												"kind": "text",
												"text": " object as an argument."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 704,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 705,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 706,
															"name": "page",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1,
																"name": "MarkdownPageEvent",
																"package": "typedoc-plugin-markdown"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Renderer.on",
								"package": "typedoc"
							}
						},
						{
							"id": 707,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\napp.renderer.on(MarkdownRendererEvent.BEGIN, (renderer) => {});\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 708,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Triggered before or after rendering the project."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "beginRender"
											},
											{
												"type": "literal",
												"value": "endRender"
											}
										]
									}
								},
								{
									"id": 709,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Receives the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "MarkdownRendererEvent",
												"target": 29
											},
											{
												"kind": "text",
												"text": " object as an argument."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 710,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 711,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 712,
															"name": "page",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 29,
																"name": "MarkdownRendererEvent",
																"package": "typedoc-plugin-markdown"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Renderer.on",
								"package": "typedoc"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Renderer.on",
						"package": "typedoc"
					}
				},
				{
					"id": 713,
					"name": "defineTheme",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Define a new theme that can be used to render output."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 714,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 715,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 716,
											"name": "name",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the theme."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 717,
											"name": "theme",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The theme class to use."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 718,
													"name": "__type",
													"variant": "declaration",
													"kind": 512,
													"flags": {},
													"signatures": [
														{
															"id": 719,
															"name": "theme",
															"variant": "signature",
															"kind": 16384,
															"flags": {},
															"parameters": [
																{
																	"id": 720,
																	"name": "renderer",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "typedoc",
																			"packagePath": "dist/lib/output/renderer.d.ts",
																			"qualifiedName": "Renderer"
																		},
																		"name": "Renderer",
																		"package": "typedoc",
																		"externalUrl": "https://typedoc.org/api/classes/Renderer.html"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": 174,
																"name": "MarkdownTheme",
																"package": "typedoc-plugin-markdown"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Renderer.defineTheme",
						"package": "typedoc"
					}
				},
				{
					"id": 721,
					"name": "markdownHooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Dedicated markdown hooks to add to the renderer.\n\nSee "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "MarkdownRendererHooks",
								"target": 742
							},
							{
								"kind": "text",
								"text": " for a description of each available hook, and when it will be called."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typedoc",
							"packagePath": "dist/lib/utils-common/hooks.d.ts",
							"qualifiedName": "EventHooks"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 742,
								"name": "MarkdownRendererHooks",
								"package": "typedoc-plugin-markdown"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "EventHooks",
						"package": "typedoc"
					}
				},
				{
					"id": 722,
					"name": "preMarkdownRenderAsyncJobs",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of async jobs which must be completed before rendering markdown output."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 723,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"signatures": [
									{
										"id": 724,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"parameters": [
											{
												"id": 725,
												"name": "output",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "reference",
													"target": 29,
													"name": "MarkdownRendererEvent",
													"package": "typedoc-plugin-markdown"
												}
											}
										],
										"type": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.es5.d.ts",
												"qualifiedName": "Promise"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "void"
												}
											],
											"name": "Promise",
											"package": "typescript"
										}
									}
								]
							}
						}
					}
				},
				{
					"id": 726,
					"name": "postMarkdownRenderAsyncJobs",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of async jobs which must be completed after rendering markdown output, but before generation is considered successful."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 727,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"signatures": [
									{
										"id": 728,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"parameters": [
											{
												"id": 729,
												"name": "output",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "reference",
													"target": 29,
													"name": "MarkdownRendererEvent",
													"package": "typedoc-plugin-markdown"
												}
											}
										],
										"type": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.es5.d.ts",
												"qualifiedName": "Promise"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "void"
												}
											],
											"name": "Promise",
											"package": "typescript"
										}
									}
								]
							}
						}
					}
				},
				{
					"id": 730,
					"name": "preRenderAsyncJobs",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "preRenderAsyncJobs - note these jobs are used by default html - use "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "preMarkdownRenderAsyncJobs",
								"target": 722
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 731,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"signatures": [
									{
										"id": 732,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"parameters": [
											{
												"id": 733,
												"name": "output",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "reference",
													"target": 29,
													"name": "MarkdownRendererEvent",
													"package": "typedoc-plugin-markdown"
												}
											}
										],
										"type": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.es5.d.ts",
												"qualifiedName": "Promise"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "void"
												}
											],
											"name": "Promise",
											"package": "typescript"
										}
									}
								]
							}
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Renderer.preRenderAsyncJobs",
						"package": "typedoc"
					}
				},
				{
					"id": 734,
					"name": "postRenderAsyncJobs",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "postRenderAsyncJobs - note these jobs are used by default html - use "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "postMarkdownRenderAsyncJobs",
								"target": 726
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 735,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"signatures": [
									{
										"id": 736,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"parameters": [
											{
												"id": 737,
												"name": "output",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "reference",
													"target": 29,
													"name": "MarkdownRendererEvent",
													"package": "typedoc-plugin-markdown"
												}
											}
										],
										"type": {
											"type": "reference",
											"target": {
												"packageName": "typescript",
												"packagePath": "lib/lib.es5.d.ts",
												"qualifiedName": "Promise"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "void"
												}
											],
											"name": "Promise",
											"package": "typescript"
										}
									}
								]
							}
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Renderer.postRenderAsyncJobs",
						"package": "typedoc"
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						700
					]
				},
				{
					"title": "Properties",
					"children": [
						713,
						721,
						722,
						726,
						730,
						734
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"packageName": "typedoc",
						"packagePath": "dist/lib/output/renderer.d.ts",
						"qualifiedName": "Renderer"
					},
					"name": "Renderer",
					"package": "typedoc",
					"externalUrl": "https://typedoc.org/api/classes/Renderer.html"
				}
			]
		},
		{
			"id": 756,
			"name": "PluginOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes the options declared by the plugin."
					}
				]
			},
			"children": [
				{
					"id": 757,
					"name": "anchorPrefix",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom anchor prefix to add to anchor links."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 758,
					"name": "blockTagsPreserveOrder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies comment block tags that should preserve their position."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 759,
					"name": "classPropertiesFormat",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the format of property groups for classes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "table"
							},
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "htmlTable"
							}
						]
					}
				},
				{
					"id": 760,
					"name": "customAnchorsFormat",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The format of custom anchors."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "curlyBrace"
							},
							{
								"type": "literal",
								"value": "escapedCurlyBrace"
							},
							{
								"type": "literal",
								"value": "squareBracket"
							}
						]
					}
				},
				{
					"id": 761,
					"name": "entryFileName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file name of the entry page."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 762,
					"name": "entryModule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This functionality has been deprecated in favour of the"
									}
								]
							},
							{
								"tag": "@mergeModuleWith",
								"content": [
									{
										"kind": "text",
										"text": "tag."
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 763,
					"name": "enumMembersFormat",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the format of enumeration members."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "table"
							},
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "htmlTable"
							}
						]
					}
				},
				{
					"id": 764,
					"name": "excludeGroups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This option has been renamed hideGroupHeadings to better reflect its purpose."
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 765,
					"name": "excludeScopesInPaths",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Exclude writing @ scope directories in paths."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 766,
					"name": "expandObjects",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Expand objects inside declarations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 767,
					"name": "expandParameters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Expand parameters in signature parentheses to display type information."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 768,
					"name": "fileExtension",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specify the file extension for generated output files."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 769,
					"name": "flattenOutputFiles",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flatten output files to a single directory."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 770,
					"name": "formatWithPrettier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Apply additional output formatting with Prettier."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 771,
					"name": "hideBreadcrumbs",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hide the page breadcrumbs."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 772,
					"name": "hideGroupHeadings",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Excludes grouping by kind so all members are rendered at the same level."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 773,
					"name": "hidePageHeader",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hide the page header."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 774,
					"name": "hidePageTitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hide the page title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 775,
					"name": "indexFormat",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the format of index items."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "table"
							},
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "htmlTable"
							}
						]
					}
				},
				{
					"id": 776,
					"name": "interfacePropertiesFormat",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the format of property groups for interfaces."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "table"
							},
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "htmlTable"
							}
						]
					}
				},
				{
					"id": 777,
					"name": "membersWithOwnFile",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines which members are exported to their own file."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": "Variable"
								},
								{
									"type": "literal",
									"value": "Function"
								},
								{
									"type": "literal",
									"value": "Class"
								},
								{
									"type": "literal",
									"value": "Interface"
								},
								{
									"type": "literal",
									"value": "Enum"
								},
								{
									"type": "literal",
									"value": "TypeAlias"
								}
							]
						}
					}
				},
				{
					"id": 778,
					"name": "mergeReadme",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Appends the documentation index page to the readme page."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 779,
					"name": "modulesFileName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file name of the separate modules / index page."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 780,
					"name": "navigationJson",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the file path where the navigation JSON will be written."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 781,
					"name": "navigationModel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This option has been deprecated in favour of TypeDoc "
									},
									{
										"kind": "code",
										"text": "`navigation`"
									},
									{
										"kind": "text",
										"text": " option."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 782,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 783,
									"name": "excludeGroups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 784,
									"name": "excludeCategories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 785,
									"name": "excludeFolders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										783,
										784,
										785
									]
								}
							]
						}
					}
				},
				{
					"id": 786,
					"name": "outputFileStrategy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "Deprecated in favour of "
									},
									{
										"kind": "code",
										"text": "`--router`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "members"
							},
							{
								"type": "literal",
								"value": "modules"
							}
						]
					}
				},
				{
					"id": 787,
					"name": "pageTitleTemplates",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Configure page title output with placeholders."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 788,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 789,
									"name": "index",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 790,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 791,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 792,
																	"name": "name",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 793,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 794,
																					"name": "projectName",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 795,
																					"name": "version",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						794,
																						795
																					]
																				}
																			]
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 796,
									"name": "member",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 797,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 798,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 799,
																	"name": "name",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 800,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 801,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 802,
																					"name": "rawName",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 803,
																					"name": "kind",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 804,
																					"name": "isDeprecated",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					}
																				},
																				{
																					"id": 805,
																					"name": "group",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 806,
																					"name": "codeKeyword",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 807,
																					"name": "keyword",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						801,
																						802,
																						803,
																						804,
																						805,
																						806,
																						807
																					]
																				}
																			]
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 808,
									"name": "module",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 809,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 810,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 811,
																	"name": "name",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 812,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 813,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 814,
																					"name": "rawName",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 815,
																					"name": "kind",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 816,
																					"name": "isDeprecated",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						813,
																						814,
																						815,
																						816
																					]
																				}
																			]
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										789,
										796,
										808
									]
								}
							]
						}
					}
				},
				{
					"id": 817,
					"name": "parametersFormat",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the format of parameter and type parameter groups."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "table"
							},
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "htmlTable"
							}
						]
					}
				},
				{
					"id": 818,
					"name": "preserveAnchorCasing",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Preserve anchor casing when generating link to symbols."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 819,
					"name": "prettierConfigFile",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specify a custom Prettier configuration file location."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 820,
					"name": "propertiesFormat",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This option has been deprecated in favour of "
									},
									{
										"kind": "code",
										"text": "`--interfacePropertiesFormat`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`--classPropertiesFormat`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "table"
							},
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "htmlTable"
							}
						]
					}
				},
				{
					"id": 821,
					"name": "propertyMembersFormat",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the format of style for property members for interfaces and classes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "table"
							},
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "htmlTable"
							}
						]
					}
				},
				{
					"id": 822,
					"name": "publicPath",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specify the base path for all urls."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 823,
					"name": "sanitizeComments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sanitize HTML and JSX inside JsDoc comments."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 824,
					"name": "strikeDeprecatedPageTitles",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls whether to strikethrough page titles of deprecated items."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 825,
					"name": "tableColumnSettings",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Control how table columns are configured and displayed."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 826,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 827,
									"name": "hideDefaults",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 828,
									"name": "hideInherited",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 829,
									"name": "hideModifiers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 830,
									"name": "hideOverrides",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 831,
									"name": "hideSources",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 832,
									"name": "hideValues",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 833,
									"name": "leftAlignHeaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										827,
										828,
										829,
										830,
										831,
										832,
										833
									]
								}
							]
						}
					}
				},
				{
					"id": 834,
					"name": "textContentMappings",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This option has been deprecated in favour of "
									},
									{
										"kind": "code",
										"text": "`--pageTitleTemplates`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 835,
					"name": "typeAliasPropertiesFormat",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the format of style for type alias properties."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "table"
							},
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "htmlTable"
							}
						]
					}
				},
				{
					"id": 836,
					"name": "typeDeclarationFormat",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the format of style for type declaration members."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "table"
							},
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "htmlTable"
							}
						]
					}
				},
				{
					"id": 837,
					"name": "typeDeclarationVisibility",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set the visibility level for type declaration documentation."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "compact"
							},
							{
								"type": "literal",
								"value": "verbose"
							}
						]
					}
				},
				{
					"id": 838,
					"name": "useCodeBlocks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Wraps signatures and declarations in code blocks."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 839,
					"name": "useCustomAnchors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Add custom anchors like "
							},
							{
								"kind": "code",
								"text": "`{#custom-id}`"
							},
							{
								"kind": "text",
								"text": " to headings."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 840,
					"name": "useHTMLAnchors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Add HTML anchors to page headings."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 841,
					"name": "useHTMLEncodedBrackets",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Use HTML encoded entities for angle brackets."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						757,
						758,
						759,
						760,
						761,
						762,
						763,
						764,
						765,
						766,
						767,
						768,
						769,
						770,
						771,
						772,
						773,
						774,
						775,
						776,
						777,
						778,
						779,
						780,
						781,
						786,
						787,
						817,
						818,
						819,
						820,
						821,
						822,
						823,
						824,
						825,
						834,
						835,
						836,
						837,
						838,
						839,
						840,
						841
					]
				}
			]
		},
		{
			"id": 755,
			"name": "NavigationJSON",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The JSON representation of the navigation structure."
					}
				]
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "reference",
					"target": 749,
					"name": "NavigationItem",
					"package": "typedoc-plugin-markdown"
				}
			}
		},
		{
			"id": 749,
			"name": "NavigationItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The model used to define each navigation item."
					}
				]
			},
			"children": [
				{
					"id": 750,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the navigation item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 751,
					"name": "path",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The path to the associated generated markdown file."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 752,
					"name": "kind",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The kind of the reflection."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typedoc",
							"packagePath": "dist/lib/models/kind.d.ts",
							"qualifiedName": "ReflectionKind"
						},
						"name": "ReflectionKind",
						"package": "typedoc"
					}
				},
				{
					"id": 753,
					"name": "isDeprecated",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag indicating whether the item is deprecated."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 754,
					"name": "children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Child navigation items if applicable."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 749,
							"name": "NavigationItem",
							"package": "typedoc-plugin-markdown"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						750,
						751,
						752,
						753,
						754
					]
				}
			]
		}
	],
	"groups": [
		{
			"title": "Events",
			"children": [
				1,
				29
			]
		},
		{
			"title": "Interfaces",
			"children": [
				697,
				742,
				699,
				756,
				749
			]
		},
		{
			"title": "Classes",
			"children": [
				41,
				103,
				200,
				174
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				755
			]
		}
	],
	"packageName": "typedoc-plugin-markdown",
	"symbolIdMap": {
		"0": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/public-api.ts",
			"qualifiedName": ""
		},
		"1": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "MarkdownPageEvent"
		},
		"2": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "MarkdownPageEvent.BEGIN"
		},
		"3": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "MarkdownPageEvent.END"
		},
		"4": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "MarkdownPageEvent.__constructor"
		},
		"5": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "MarkdownPageEvent"
		},
		"6": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "MarkdownPageEvent.Model"
		},
		"7": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "model"
		},
		"8": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "MarkdownPageEvent.project"
		},
		"9": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "MarkdownPageEvent.filename"
		},
		"10": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "MarkdownPageEvent.url"
		},
		"11": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "MarkdownPageEvent.pageKind"
		},
		"12": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "MarkdownPageEvent.model"
		},
		"13": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "MarkdownPageEvent.contents"
		},
		"14": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "MarkdownPageEvent.frontmatter"
		},
		"22": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "MarkdownPageEvent.preWriteAsyncJobs"
		},
		"23": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "__type"
		},
		"24": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "__type"
		},
		"25": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "page"
		},
		"26": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "MarkdownPageEvent.isReflectionEvent"
		},
		"27": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "MarkdownPageEvent.isReflectionEvent"
		},
		"28": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-page-event.ts",
			"qualifiedName": "MarkdownPageEvent.Model"
		},
		"29": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-renderer-event.ts",
			"qualifiedName": "MarkdownRendererEvent"
		},
		"30": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-renderer-event.ts",
			"qualifiedName": "MarkdownRendererEvent.BEGIN"
		},
		"31": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-renderer-event.ts",
			"qualifiedName": "MarkdownRendererEvent.END"
		},
		"37": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-renderer-event.ts",
			"qualifiedName": "MarkdownRendererEvent.project"
		},
		"38": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-renderer-event.ts",
			"qualifiedName": "MarkdownRendererEvent.outputDirectory"
		},
		"39": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-renderer-event.ts",
			"qualifiedName": "MarkdownRendererEvent.pages"
		},
		"40": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/events/markdown-renderer-event.ts",
			"qualifiedName": "MarkdownRendererEvent.navigation"
		},
		"41": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/member-router.ts",
			"qualifiedName": "MemberRouter"
		},
		"42": {
			"packageName": "typedoc",
			"packagePath": "dist/lib/output/router.d.ts",
			"qualifiedName": "BaseRouter.__constructor"
		},
		"43": {
			"packageName": "typedoc",
			"packagePath": "dist/lib/output/router.d.ts",
			"qualifiedName": "MemberRouter"
		},
		"44": {
			"packageName": "typedoc",
			"packagePath": "dist/lib/output/router.d.ts",
			"qualifiedName": "application"
		},
		"45": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/member-router.ts",
			"qualifiedName": "MemberRouter.buildChildPages"
		},
		"46": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/member-router.ts",
			"qualifiedName": "MemberRouter.buildChildPages"
		},
		"47": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/member-router.ts",
			"qualifiedName": "reflection"
		},
		"48": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/member-router.ts",
			"qualifiedName": "outPages"
		},
		"49": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/member-router.ts",
			"qualifiedName": "MemberRouter.getIdealBaseName"
		},
		"50": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/member-router.ts",
			"qualifiedName": "MemberRouter.getIdealBaseName"
		},
		"51": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/member-router.ts",
			"qualifiedName": "reflection"
		},
		"76": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.extension"
		},
		"77": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.outputFileStrategy"
		},
		"78": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.entryModule"
		},
		"79": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.ignoreScopes"
		},
		"80": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.modulesFileName"
		},
		"81": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.entryFileName"
		},
		"82": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.isPackages"
		},
		"83": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.membersWithOwnFile"
		},
		"84": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.mergeReadme"
		},
		"85": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.anchorPrefix"
		},
		"86": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.directories"
		},
		"87": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.kindsToString"
		},
		"88": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.buildPages"
		},
		"89": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.buildPages"
		},
		"90": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "project"
		},
		"91": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.getAnchor"
		},
		"92": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.getAnchor"
		},
		"93": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "target"
		},
		"94": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.getIdealBaseNameFlattened"
		},
		"95": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.getIdealBaseNameFlattened"
		},
		"96": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "reflection"
		},
		"97": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.getReflectionAlias"
		},
		"98": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.getReflectionAlias"
		},
		"99": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "reflection"
		},
		"100": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.getModulesFileName"
		},
		"101": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.getModulesFileName"
		},
		"102": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "reflection"
		},
		"103": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/module-router.ts",
			"qualifiedName": "ModuleRouter"
		},
		"104": {
			"packageName": "typedoc",
			"packagePath": "dist/lib/output/router.d.ts",
			"qualifiedName": "BaseRouter.__constructor"
		},
		"105": {
			"packageName": "typedoc",
			"packagePath": "dist/lib/output/router.d.ts",
			"qualifiedName": "ModuleRouter"
		},
		"106": {
			"packageName": "typedoc",
			"packagePath": "dist/lib/output/router.d.ts",
			"qualifiedName": "application"
		},
		"107": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/module-router.ts",
			"qualifiedName": "ModuleRouter.buildChildPages"
		},
		"108": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/module-router.ts",
			"qualifiedName": "ModuleRouter.buildChildPages"
		},
		"109": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/module-router.ts",
			"qualifiedName": "reflection"
		},
		"110": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/module-router.ts",
			"qualifiedName": "outPages"
		},
		"111": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/module-router.ts",
			"qualifiedName": "ModuleRouter.getIdealBaseName"
		},
		"112": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/module-router.ts",
			"qualifiedName": "ModuleRouter.getIdealBaseName"
		},
		"113": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/module-router.ts",
			"qualifiedName": "reflection"
		},
		"147": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.extension"
		},
		"148": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.outputFileStrategy"
		},
		"149": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.entryModule"
		},
		"150": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.ignoreScopes"
		},
		"151": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.modulesFileName"
		},
		"152": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.entryFileName"
		},
		"153": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.isPackages"
		},
		"154": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.membersWithOwnFile"
		},
		"155": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.mergeReadme"
		},
		"156": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.anchorPrefix"
		},
		"157": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.directories"
		},
		"158": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.kindsToString"
		},
		"159": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.buildPages"
		},
		"160": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.buildPages"
		},
		"161": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "project"
		},
		"162": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.getAnchor"
		},
		"163": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.getAnchor"
		},
		"164": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "target"
		},
		"165": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.getIdealBaseNameFlattened"
		},
		"166": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.getIdealBaseNameFlattened"
		},
		"167": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "reflection"
		},
		"168": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.getReflectionAlias"
		},
		"169": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.getReflectionAlias"
		},
		"170": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "reflection"
		},
		"171": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.getModulesFileName"
		},
		"172": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "MarkdownRouter.getModulesFileName"
		},
		"173": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/router/markdown-router.ts",
			"qualifiedName": "reflection"
		},
		"174": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "MarkdownTheme"
		},
		"175": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "MarkdownTheme.__constructor"
		},
		"176": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "MarkdownTheme"
		},
		"177": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "renderer"
		},
		"178": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "MarkdownTheme.router"
		},
		"179": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "MarkdownTheme.render"
		},
		"180": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "MarkdownTheme.render"
		},
		"181": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "page"
		},
		"182": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "MarkdownTheme.getNavigation"
		},
		"183": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "MarkdownTheme.getNavigation"
		},
		"184": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "project"
		},
		"185": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "MarkdownTheme.getRenderContext"
		},
		"186": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "MarkdownTheme.getRenderContext"
		},
		"187": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "page"
		},
		"188": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "MarkdownTheme.indexTemplate"
		},
		"189": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "MarkdownTheme.indexTemplate"
		},
		"190": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "page"
		},
		"191": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "MarkdownTheme.reflectionTemplate"
		},
		"192": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "MarkdownTheme.reflectionTemplate"
		},
		"193": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "page"
		},
		"194": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "MarkdownTheme.documentTemplate"
		},
		"195": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "MarkdownTheme.documentTemplate"
		},
		"196": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "page"
		},
		"197": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "MarkdownTheme.hierarchyTemplate"
		},
		"198": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "MarkdownTheme.hierarchyTemplate"
		},
		"199": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme.ts",
			"qualifiedName": "page"
		},
		"200": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "MarkdownThemeContext"
		},
		"201": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "MarkdownThemeContext.__constructor"
		},
		"202": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "MarkdownThemeContext"
		},
		"203": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "theme"
		},
		"204": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "page"
		},
		"205": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "options"
		},
		"206": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "MarkdownThemeContext.router"
		},
		"208": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "MarkdownThemeContext.theme"
		},
		"209": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "MarkdownThemeContext.page"
		},
		"210": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "MarkdownThemeContext.options"
		},
		"211": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "MarkdownThemeContext.templates"
		},
		"212": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object"
		},
		"213": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.document"
		},
		"214": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"215": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"216": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "page"
		},
		"217": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.hierarchy"
		},
		"218": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"219": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"220": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "page"
		},
		"221": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.index"
		},
		"222": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"223": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"224": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "page"
		},
		"225": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.reflection"
		},
		"226": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"227": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"228": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "page"
		},
		"229": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "MarkdownThemeContext.partials"
		},
		"230": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object"
		},
		"231": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.comment"
		},
		"232": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"233": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"234": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"235": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"236": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"237": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"238": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.showSummary"
		},
		"239": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.showTags"
		},
		"240": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.showReturns"
		},
		"241": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.isTableColumn"
		},
		"242": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.body"
		},
		"243": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"244": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"245": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"246": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"247": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"248": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"249": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.categories"
		},
		"250": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"251": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"252": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "models"
		},
		"253": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"254": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"255": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"256": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.groups"
		},
		"257": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"258": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"259": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"260": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"261": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"262": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"263": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.kind"
		},
		"264": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.members"
		},
		"265": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"266": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"267": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"268": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"269": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"270": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"271": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.groupTitle"
		},
		"272": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.accessor"
		},
		"273": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"274": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"275": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"276": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"277": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"278": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"279": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.constructor"
		},
		"280": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"281": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"282": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"283": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"284": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"285": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"286": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.memberContainer"
		},
		"287": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"288": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"289": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"290": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"291": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"292": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"293": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.nested"
		},
		"294": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.groupTitle"
		},
		"295": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.declaration"
		},
		"296": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"297": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"298": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"299": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"300": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"301": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"302": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.nested"
		},
		"303": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.declarationTitle"
		},
		"304": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"305": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"306": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"307": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.documents"
		},
		"308": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"309": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"310": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"311": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"312": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"313": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"314": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.enumMembersTable"
		},
		"315": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"316": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"317": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"318": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.groupIndex"
		},
		"319": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"320": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"321": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "group"
		},
		"322": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.hierarchy"
		},
		"323": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"324": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"325": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"326": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"327": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"328": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"329": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.indexSignature"
		},
		"330": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"331": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"332": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"333": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"334": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"335": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"336": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.inheritance"
		},
		"337": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"338": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"339": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"340": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"341": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"342": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"343": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.memberTitle"
		},
		"344": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"345": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"346": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"347": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.memberWithGroups"
		},
		"348": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"349": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"350": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"351": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"352": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"353": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"354": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.parametersList"
		},
		"355": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"356": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"357": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"358": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"359": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"360": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"361": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.parametersTable"
		},
		"362": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"363": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"364": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"365": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.propertiesTable"
		},
		"366": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"367": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"368": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"369": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"370": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"371": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.isEventProps"
		},
		"372": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.kind"
		},
		"373": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.referenceMember"
		},
		"374": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"375": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"376": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"377": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.signature"
		},
		"378": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"379": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"380": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"381": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"382": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"383": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"384": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.nested"
		},
		"385": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.accessor"
		},
		"386": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.multipleSignatures"
		},
		"387": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.hideTitle"
		},
		"388": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.signatureParameters"
		},
		"389": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"390": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"391": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"392": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"393": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"394": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.forceExpandParameters"
		},
		"395": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.signatureReturns"
		},
		"396": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"397": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"398": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"399": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"400": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"401": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"402": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.signatureTitle"
		},
		"403": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"404": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"405": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"406": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"407": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"408": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.accessor"
		},
		"409": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.includeType"
		},
		"410": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.signatures"
		},
		"411": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"412": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"413": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"414": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"415": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"416": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"417": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.nested"
		},
		"418": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.sources"
		},
		"419": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"420": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"421": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"422": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"423": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"424": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.hideLabel"
		},
		"425": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.member"
		},
		"426": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"427": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"428": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"429": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"430": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"431": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"432": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.nested"
		},
		"433": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.typeAndParent"
		},
		"434": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"435": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"436": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"437": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.typeArguments"
		},
		"438": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"439": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"440": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"441": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"442": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"443": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.forceCollapse"
		},
		"444": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.typeDeclaration"
		},
		"445": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"446": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"447": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"448": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"449": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"450": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"451": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.allowSource"
		},
		"452": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.typeDeclarationContainer"
		},
		"453": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"454": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"455": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"456": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "typeDeclaration"
		},
		"457": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "opts"
		},
		"458": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"459": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"460": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.nested"
		},
		"461": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.typeDeclarationList"
		},
		"462": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"463": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"464": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"465": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"466": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"467": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"468": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.typeDeclarationTable"
		},
		"469": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"470": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"471": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"472": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"473": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"474": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.kind"
		},
		"475": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.typeDeclarationUnionContainer"
		},
		"476": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"477": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"478": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"479": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"480": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"481": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"482": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.typeParametersList"
		},
		"483": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"484": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"485": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"486": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"487": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"488": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.headingLevel"
		},
		"489": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.typeParametersTable"
		},
		"490": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"491": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"492": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"493": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.breadcrumbs"
		},
		"494": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"495": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"496": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.footer"
		},
		"497": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"498": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"499": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.header"
		},
		"500": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"501": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"502": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.packagesIndex"
		},
		"503": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"504": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"505": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"506": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.pageTitle"
		},
		"507": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"508": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"509": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.arrayType"
		},
		"510": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"511": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"512": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"513": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.conditionalType"
		},
		"514": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"515": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"516": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"517": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.indexAccessType"
		},
		"518": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"519": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"520": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"521": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.inferredType"
		},
		"522": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"523": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"524": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"525": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.intersectionType"
		},
		"526": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"527": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"528": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"529": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.intrinsicType"
		},
		"530": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"531": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"532": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"533": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.literalType"
		},
		"534": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"535": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"536": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"537": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.namedTupleType"
		},
		"538": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"539": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"540": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"541": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.optionalType"
		},
		"542": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"543": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"544": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"545": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"546": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"547": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.forceCollapse"
		},
		"548": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.queryType"
		},
		"549": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"550": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"551": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"552": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.referenceType"
		},
		"553": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"554": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"555": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"556": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.declarationType"
		},
		"557": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"558": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"559": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"560": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"561": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"562": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.forceCollapse"
		},
		"563": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.functionType"
		},
		"564": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"565": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"566": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"567": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"568": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"569": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.forceParameterType"
		},
		"570": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.typeSeparator"
		},
		"571": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.reflectionType"
		},
		"572": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"573": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"574": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"575": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"576": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"577": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.forceCollapse"
		},
		"578": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.someType"
		},
		"579": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"580": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"581": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"582": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"583": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"584": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.forceCollapse"
		},
		"585": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.tupleType"
		},
		"586": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"587": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"588": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"589": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.typeOperatorType"
		},
		"590": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"591": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"592": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"593": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.unionType"
		},
		"594": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"595": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"596": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"597": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.unknownType"
		},
		"598": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"599": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"600": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"601": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "MarkdownThemeContext.helpers"
		},
		"602": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object"
		},
		"603": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.getAngleBracket"
		},
		"604": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"605": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"606": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "bracket"
		},
		"607": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.getCommentParts"
		},
		"608": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"609": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"610": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"611": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.getDeclarationType"
		},
		"612": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"613": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"614": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"615": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.getDescriptionForComment"
		},
		"616": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"617": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"618": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "comment"
		},
		"619": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.getFlattenedDeclarations"
		},
		"620": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"621": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"622": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"623": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"624": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"625": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.includeSignatures"
		},
		"626": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.getHierarchyType"
		},
		"627": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"628": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"629": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"630": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "options"
		},
		"631": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type"
		},
		"632": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__type.isTarget"
		},
		"633": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.getKeyword"
		},
		"634": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"635": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"636": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"637": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.getModifier"
		},
		"638": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"639": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"640": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"641": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.getParameterDefaultValue"
		},
		"642": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"643": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"644": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"645": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.getProjectName"
		},
		"646": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"647": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"648": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "stringWithPlaceholders"
		},
		"649": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "page"
		},
		"650": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "includeVersion"
		},
		"651": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.getPropertyDefaultValue"
		},
		"652": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"653": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"654": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"655": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.getReflectionFlags"
		},
		"656": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"657": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"658": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "reflectionFlags"
		},
		"659": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.getReturnType"
		},
		"660": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"661": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"662": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"663": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.hasSignatures"
		},
		"664": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"665": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"666": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"667": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.hasUsefulTypeDetails"
		},
		"668": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"669": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"670": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "type"
		},
		"671": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.isGroupKind"
		},
		"672": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"673": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"674": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "model"
		},
		"675": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__object.useTableFormat"
		},
		"676": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"677": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "__function"
		},
		"678": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "key"
		},
		"679": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/context/resources.ts",
			"qualifiedName": "reflectionKind"
		},
		"680": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "MarkdownThemeContext.getPackageMetaData"
		},
		"681": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "MarkdownThemeContext.getPackageMetaData"
		},
		"682": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "packageName"
		},
		"683": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "MarkdownThemeContext.getPackagesCount"
		},
		"684": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "MarkdownThemeContext.getPackagesCount"
		},
		"685": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "MarkdownThemeContext.relativeURL"
		},
		"686": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "MarkdownThemeContext.relativeURL"
		},
		"687": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "url"
		},
		"688": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "MarkdownThemeContext.urlTo"
		},
		"689": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "MarkdownThemeContext.urlTo"
		},
		"690": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "reflection"
		},
		"691": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/theme/markdown-theme-context.ts",
			"qualifiedName": "MarkdownThemeContext.hook"
		},
		"692": {
			"packageName": "typedoc",
			"packagePath": "dist/lib/utils-common/hooks.d.ts",
			"qualifiedName": "EventHooks.emit"
		},
		"693": {
			"packageName": "typedoc",
			"packagePath": "dist/lib/utils-common/hooks.d.ts",
			"qualifiedName": "EventHooks.emit"
		},
		"694": {
			"packageName": "typedoc",
			"packagePath": "dist/lib/utils-common/hooks.d.ts",
			"qualifiedName": "K"
		},
		"695": {
			"packageName": "typedoc",
			"packagePath": "dist/lib/utils-common/hooks.d.ts",
			"qualifiedName": "event"
		},
		"696": {
			"packageName": "typedoc",
			"packagePath": "dist/lib/utils-common/hooks.d.ts",
			"qualifiedName": "args"
		},
		"697": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-application.ts",
			"qualifiedName": "MarkdownApplication"
		},
		"698": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-application.ts",
			"qualifiedName": "MarkdownApplication.renderer"
		},
		"699": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "MarkdownRenderer"
		},
		"700": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "MarkdownRenderer.on"
		},
		"701": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "MarkdownRenderer.on"
		},
		"702": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "event"
		},
		"703": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "callback"
		},
		"704": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "__type"
		},
		"705": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "__type"
		},
		"706": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "page"
		},
		"707": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "MarkdownRenderer.on"
		},
		"708": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "event"
		},
		"709": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "callback"
		},
		"710": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "__type"
		},
		"711": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "__type"
		},
		"712": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "page"
		},
		"713": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "MarkdownRenderer.defineTheme"
		},
		"714": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "__type"
		},
		"715": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "__type"
		},
		"716": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "name"
		},
		"717": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "theme"
		},
		"718": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "__type"
		},
		"719": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "__type"
		},
		"720": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "renderer"
		},
		"721": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "MarkdownRenderer.markdownHooks"
		},
		"722": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "MarkdownRenderer.preMarkdownRenderAsyncJobs"
		},
		"723": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "__type"
		},
		"724": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "__type"
		},
		"725": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "output"
		},
		"726": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "MarkdownRenderer.postMarkdownRenderAsyncJobs"
		},
		"727": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "__type"
		},
		"728": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "__type"
		},
		"729": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "output"
		},
		"730": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "MarkdownRenderer.preRenderAsyncJobs"
		},
		"731": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "__type"
		},
		"732": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "__type"
		},
		"733": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "output"
		},
		"734": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "MarkdownRenderer.postRenderAsyncJobs"
		},
		"735": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "__type"
		},
		"736": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "__type"
		},
		"737": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer.ts",
			"qualifiedName": "output"
		},
		"742": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer-hooks.ts",
			"qualifiedName": "MarkdownRendererHooks"
		},
		"743": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer-hooks.ts",
			"qualifiedName": "MarkdownRendererHooks.page.begin"
		},
		"744": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer-hooks.ts",
			"qualifiedName": "MarkdownRendererHooks.page.end"
		},
		"745": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer-hooks.ts",
			"qualifiedName": "MarkdownRendererHooks.index.page.begin"
		},
		"746": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer-hooks.ts",
			"qualifiedName": "MarkdownRendererHooks.index.page.end"
		},
		"747": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer-hooks.ts",
			"qualifiedName": "MarkdownRendererHooks.content.begin"
		},
		"748": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/markdown-renderer-hooks.ts",
			"qualifiedName": "MarkdownRendererHooks.content.end"
		},
		"749": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/theme.ts",
			"qualifiedName": "NavigationItem"
		},
		"750": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/theme.ts",
			"qualifiedName": "NavigationItem.title"
		},
		"751": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/theme.ts",
			"qualifiedName": "NavigationItem.path"
		},
		"752": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/theme.ts",
			"qualifiedName": "NavigationItem.kind"
		},
		"753": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/theme.ts",
			"qualifiedName": "NavigationItem.isDeprecated"
		},
		"754": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/theme.ts",
			"qualifiedName": "NavigationItem.children"
		},
		"755": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/theme.ts",
			"qualifiedName": "NavigationJSON"
		},
		"756": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions"
		},
		"757": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.anchorPrefix"
		},
		"758": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.blockTagsPreserveOrder"
		},
		"759": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.classPropertiesFormat"
		},
		"760": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.customAnchorsFormat"
		},
		"761": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.entryFileName"
		},
		"762": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.entryModule"
		},
		"763": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.enumMembersFormat"
		},
		"764": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.excludeGroups"
		},
		"765": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.excludeScopesInPaths"
		},
		"766": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.expandObjects"
		},
		"767": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.expandParameters"
		},
		"768": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.fileExtension"
		},
		"769": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.flattenOutputFiles"
		},
		"770": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.formatWithPrettier"
		},
		"771": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.hideBreadcrumbs"
		},
		"772": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.hideGroupHeadings"
		},
		"773": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.hidePageHeader"
		},
		"774": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.hidePageTitle"
		},
		"775": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.indexFormat"
		},
		"776": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.interfacePropertiesFormat"
		},
		"777": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.membersWithOwnFile"
		},
		"778": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.mergeReadme"
		},
		"779": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.modulesFileName"
		},
		"780": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.navigationJson"
		},
		"781": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.navigationModel"
		},
		"782": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type"
		},
		"783": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.excludeGroups"
		},
		"784": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.excludeCategories"
		},
		"785": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.excludeFolders"
		},
		"786": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.outputFileStrategy"
		},
		"787": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.pageTitleTemplates"
		},
		"788": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type"
		},
		"789": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.index"
		},
		"790": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type"
		},
		"791": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type"
		},
		"792": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "name"
		},
		"793": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type"
		},
		"794": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.projectName"
		},
		"795": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.version"
		},
		"796": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.member"
		},
		"797": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type"
		},
		"798": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type"
		},
		"799": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "name"
		},
		"800": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type"
		},
		"801": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.name"
		},
		"802": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.rawName"
		},
		"803": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.kind"
		},
		"804": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.isDeprecated"
		},
		"805": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.group"
		},
		"806": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.codeKeyword"
		},
		"807": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.keyword"
		},
		"808": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.module"
		},
		"809": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type"
		},
		"810": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type"
		},
		"811": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "name"
		},
		"812": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type"
		},
		"813": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.name"
		},
		"814": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.rawName"
		},
		"815": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.kind"
		},
		"816": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.isDeprecated"
		},
		"817": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.parametersFormat"
		},
		"818": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.preserveAnchorCasing"
		},
		"819": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.prettierConfigFile"
		},
		"820": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.propertiesFormat"
		},
		"821": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.propertyMembersFormat"
		},
		"822": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.publicPath"
		},
		"823": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.sanitizeComments"
		},
		"824": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.strikeDeprecatedPageTitles"
		},
		"825": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.tableColumnSettings"
		},
		"826": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type"
		},
		"827": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.hideDefaults"
		},
		"828": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.hideInherited"
		},
		"829": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.hideModifiers"
		},
		"830": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.hideOverrides"
		},
		"831": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.hideSources"
		},
		"832": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.hideValues"
		},
		"833": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "__type.leftAlignHeaders"
		},
		"834": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.textContentMappings"
		},
		"835": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.typeAliasPropertiesFormat"
		},
		"836": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.typeDeclarationFormat"
		},
		"837": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.typeDeclarationVisibility"
		},
		"838": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.useCodeBlocks"
		},
		"839": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.useCustomAnchors"
		},
		"840": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.useHTMLAnchors"
		},
		"841": {
			"packageName": "typedoc-plugin-markdown",
			"packagePath": "src/types/options.ts",
			"qualifiedName": "PluginOptions.useHTMLEncodedBrackets"
		}
	},
	"files": {
		"entries": {
			"1": "src/public-api.ts"
		},
		"reflections": {
			"1": 0
		}
	}
}
