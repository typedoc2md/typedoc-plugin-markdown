// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Remark should parse globals page 1`] = `
"# typedoc-plugin-remark

## CustomTOC

* [Variables](#variables)
  * [someVariable](#somevariable)
* [Functions](#functions)
  * [some\\_function()](#some_function)

## Variables

### someVariable

> \`const\` **someVariable**: \`true\` = \`true\`

## Functions

### some\\_function()

> **some\\_function**(\`param\`): \`void\`

#### Parameters

<table>
<thead>
<tr>
<th>Parameter</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

\`param\`

</td>
<td>

\`string\`

</td>
<td>

Default text content for \`@category\` tag.

</td>
</tr>
</tbody>
</table>

#### Returns

\`void\`
"
`;

exports[`Remark should parse globals page without toc 1`] = `
"# typedoc-plugin-remark

## Variables

### someVariable

> \`const\` **someVariable**: \`true\` = \`true\`

## Functions

### some\\_function()

> **some\\_function**(\`param\`): \`void\`

#### Parameters

<table>
<thead>
<tr>
<th>Parameter</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

\`param\`

</td>
<td>

\`string\`

</td>
<td>

Default text content for \`@category\` tag.

</td>
</tr>
</tbody>
</table>

#### Returns

\`void\`
"
`;

exports[`Remark should parse mdx 1`] = `
"---
title: "test"
---

# Function: some\\_function()

> **some\\_function**(\`param\`): \`void\`

## Parameters

<table>
  <thead>
    <tr>
      <th>Parameter</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>

  <tbody>
    <tr>
      <td>
        \`param\`
      </td>

      <td>
        \`string\`
      </td>

      <td>
        Default text content for \`@category\` tag.
      </td>
    </tr>
  </tbody>
</table>

## Returns

\`void\`
"
`;

exports[`Remark should parse members class page 1`] = `
"---
title: "test"
---

# Class: SomeClass\\<T>

* list item 1

## Contents

* [Type Parameters](#type-parameters)
* [Constructors](#constructors)
  * [new SomeClass()](#new-someclass)
* [Properties](#properties)
  * [someProp](#someprop)

## Type Parameters

<table>
<thead>
<tr>
<th>Type Parameter</th>
</tr>
</thead>
<tbody>
<tr>
<td>

\`T\`

</td>
</tr>
</tbody>
</table>

## Constructors

### new SomeClass()

> **new SomeClass**<\`T\`>(): \`SomeClass\`<\`T\`>

#### Returns

\`SomeClass\`<\`T\`>

## Properties

### someProp

> **someProp**: \`string\`
"
`;

exports[`Remark should parse members index 1`] = `
"# typedoc-plugin-remark

## Modules

* [module-1](module-1/README.md)
* [module-2](module-2/README.md)
"
`;

exports[`Remark should parse members module page 1`] = `
"---
title: "test"
---

# module-1

Comments form module comments

Thanks [**@tgrey**](https://github.com/tgrey) please see issue [#1](https://github.com/typedoc2md/typedoc-plugin-markdown/issues/1).

\`\`\`js
const x = 1
\`\`\`

## Classes

* [SomeClass](classes/SomeClass.md)

## Interfaces

* [SomeInterface](interfaces/SomeInterface.md)

## Functions

* [some\\_function](functions/some_function.md)
"
`;

exports[`Remark should parse modules module page 1`] = `
"---
title: "test"
---

# module-1

Comments form module comments

Thanks [**@tgrey**](https://github.com/tgrey) please see issue [#1](https://github.com/typedoc2md/typedoc-plugin-markdown/issues/1).

~~~js playground
const x = 1
~~~

## Contents

+ [Classes](#classes)
  + [SomeClass\\<T>](#someclasst)
+ [Interfaces](#interfaces)
  + [SomeInterface\\<T>](#someinterfacet)
+ [Functions](#functions)
  + [some\\_function()](#some_function)

## Classes

### SomeClass\\<T>

+ list item 1

#### Type Parameters

<table>
<thead>
<tr>
<th>Type Parameter</th>
</tr>
</thead>
<tbody>
<tr>
<td>

\`T\`

</td>
</tr>
</tbody>
</table>

#### Constructors

##### new SomeClass()

> **new SomeClass**<\`T\`>(): [\`SomeClass\`](#someclass)<\`T\`>

###### Returns

[\`SomeClass\`](#someclass)<\`T\`>

#### Properties

##### someProp

> **someProp**: \`string\`

## Interfaces

### SomeInterface\\<T>

#### Type Parameters

<table>
<thead>
<tr>
<th>Type Parameter</th>
</tr>
</thead>
<tbody>
<tr>
<td>

\`T\`

</td>
</tr>
</tbody>
</table>

#### Properties

##### anotherProp

> **anotherProp**: \`T\`

##### somePromise

> **somePromise**: \`Promise\`<\`T\`>

##### someProp

> **someProp**: \`string\`

## Functions

### some\\_function()

> **some\\_function**(\`param\`): \`void\`

#### Parameters

<table>
<thead>
<tr>
<th>Parameter</th>
<th>Type</th>
</tr>
</thead>
<tbody>
<tr>
<td>

\`param\`

</td>
<td>

\`string\` | \`boolean\`

</td>
</tr>
</tbody>
</table>

#### Returns

\`void\`
"
`;
