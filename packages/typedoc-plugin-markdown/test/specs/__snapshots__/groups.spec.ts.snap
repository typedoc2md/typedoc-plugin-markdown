// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Groups should compile basic module index page: (Output File Strategy "members") (Option Group "1") 1`] = `
"[**typedoc-stubs**](../index.md)

***

[typedoc-stubs](../modules.md) / basic

# basic

A basic module

## Enumerations

| Enumeration | Description |
| :------ | :------ |
| [EnumA](enumerations/EnumA.md) | EnumA function. |
| [EnumB](enumerations/EnumB.md) | - |

## Classes

| Class | Description |
| :------ | :------ |
| [ClassA](classes/ClassA.md) | ClassA function. |
| [ClassB](classes/ClassB.md) | - |

## Interfaces

| Interface | Description |
| :------ | :------ |
| [InterfaceA](interfaces/InterfaceA.md) | Interface A comments line 1 and comments on a soft line. |
| [InterfaceB](interfaces/InterfaceB.md) | InterfaceB function. |

## Type Aliases

| Type Alias | Description |
| :------ | :------ |
| [TypeA](type-aliases/TypeA.md) | TypeA function. |
| [TypeB](type-aliases/TypeB.md) | TypeB function. |

## Variables

| Variable | Description |
| :------ | :------ |
| [variableA](variables/variableA.md) | - |
| [variableB](variables/variableB.md) | - |

## Functions

| Function | Description |
| :------ | :------ |
| [functionA](functions/functionA.md) | Comments for functionA |
"
`;

exports[`Groups should compile basic module index page: (Output File Strategy "members") (Option Group "2") 1`] = `
"[**typedoc-stubs**](../index.md)

***

[typedoc-stubs](../index.md) / basic

# basic

A basic module

## Functions

<table>
<thead>
<tr>
<th align="left">Function</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[functionA](functions/functionA.md)

</td>
<td>

Comments for functionA

</td>
</tr>
</tbody>
</table>

## Interfaces

<table>
<thead>
<tr>
<th align="left">Interface</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[InterfaceA](interfaces/InterfaceA.md)

</td>
<td>

Interface A comments line 1
and comments on a soft line.

Comments on double new line.

\`\`\`typescript
const a = new InterfaceA();
\`\`\`

**Remarks**

Block tag content.

- [InterfaceB.propA](interfaces/InterfaceB.md#propa)

</td>
</tr>
<tr>
<td>

[InterfaceB](interfaces/InterfaceB.md)

</td>
<td>

InterfaceB function.

- [InterfaceA.propA](interfaces/InterfaceA.md#propa)

</td>
</tr>
</tbody>
</table>

## Classes

<table>
<thead>
<tr>
<th align="left">Class</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[ClassA](classes/ClassA.md)

</td>
<td>

ClassA function.

</td>
</tr>
<tr>
<td>

[ClassB](classes/ClassB.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>

## Enumerations

<table>
<thead>
<tr>
<th align="left">Enumeration</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[EnumA](enumerations/EnumA.md)

</td>
<td>

EnumA function.

</td>
</tr>
<tr>
<td>

[EnumB](enumerations/EnumB.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>

## Type Aliases

<table>
<thead>
<tr>
<th align="left">Type Alias</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[TypeA](type-aliases/TypeA.md)

</td>
<td>

TypeA function.

[TypeB#propB](type-aliases/TypeB.md#propb)

</td>
</tr>
<tr>
<td>

[TypeB](type-aliases/TypeB.md)

</td>
<td>

TypeB function.

</td>
</tr>
</tbody>
</table>

## Variables

<table>
<thead>
<tr>
<th align="left">Variable</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[variableA](variables/variableA.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[variableB](variables/variableB.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>
"
`;

exports[`Groups should compile basic module index page: (Output File Strategy "modules") (Option Group "1") 1`] = `
"[**typedoc-stubs**](index.md)

***

[typedoc-stubs](modules.md) / basic

# basic

A basic module

## Enumerations

### EnumA

EnumA function.

***

### EnumB

## Classes

### ClassA

ClassA function.

#### Constructors

##### Constructor

_SIGNATURE_MEMBER_PARTIAL_

***

### ClassB

#### Constructors

##### Constructor

_SIGNATURE_MEMBER_PARTIAL_

## Interfaces

### InterfaceA

Interface A comments line 1
and comments on a soft line.

Comments on double new line.

\`\`\`typescript
const a = new InterfaceA();
\`\`\`

#### Remarks

Block tag content.

- [InterfaceB.propA](#propa-1)

#### Properties

##### propA

> **propA**: \`string\`

##### propB

> **propB**: \`string\`

***

### InterfaceB

InterfaceB function.

- [InterfaceA.propA](#propa)

#### Properties

##### propA

> **propA**: \`string\`

##### propB

> **propB**: \`string\`

## Type Aliases

### TypeA

> **TypeA** = \`string\`

TypeA function.

[TypeB#propB](#propb-2)

***

### TypeB

> **TypeB** = \`object\`

TypeB function.

#### Properties

##### propA

> **propA**: \`string\`

##### propB?

> \`optional\` **propB**: \`number\`

## Variables

### variableA

> \`const\` **variableA**: \`""\` = \`''\`

***

### variableB

> \`const\` **variableB**: \`""\` = \`''\`

## Functions

### functionA()

_SIGNATURE_MEMBER_PARTIAL_
"
`;

exports[`Groups should compile basic module index page: (Output File Strategy "modules") (Option Group "2") 1`] = `
"[**typedoc-stubs**](index.md)

***

[typedoc-stubs](index.md) / basic

# basic

A basic module

## Functions

<a id="functiona"></a>

### functionA()

_SIGNATURE_MEMBER_PARTIAL_

## Interfaces

<a id="interfacea"></a>

### InterfaceA

Interface A comments line 1
and comments on a soft line.

Comments on double new line.

\`\`\`typescript
const a = new InterfaceA();
\`\`\`

#### Remarks

Block tag content.

- [InterfaceB.propA](#propa-1)

#### Properties

<a id="propa"></a>

##### propA

> **propA**: \`string\`

<a id="propb"></a>

##### propB

> **propB**: \`string\`

***

<a id="interfaceb"></a>

### InterfaceB

InterfaceB function.

- [InterfaceA.propA](#propa)

#### Properties

<a id="propa-1"></a>

##### propA

> **propA**: \`string\`

<a id="propb-1"></a>

##### propB

> **propB**: \`string\`

## Classes

<a id="classa"></a>

### ClassA

ClassA function.

#### Constructors

<a id="constructor"></a>

##### Constructor

_SIGNATURE_MEMBER_PARTIAL_

***

<a id="classb"></a>

### ClassB

#### Constructors

<a id="constructor-1"></a>

##### Constructor

_SIGNATURE_MEMBER_PARTIAL_

## Enumerations

<a id="enuma"></a>

### EnumA

EnumA function.

***

<a id="enumb"></a>

### EnumB

## Type Aliases

<a id="typea"></a>

### TypeA

> **TypeA** = \`string\`

TypeA function.

[TypeB#propB](#propb-2)

***

<a id="typeb"></a>

### TypeB

> **TypeB** = \`object\`

TypeB function.

#### Properties

<a id="propa-2"></a>

##### propA

> **propA**: \`string\`

<a id="propb-2"></a>

##### propB?

> \`optional\` **propB**: \`number\`

## Variables

<a id="variablea"></a>

### variableA

> \`const\` **variableA**: \`""\` = \`''\`

***

<a id="variableb"></a>

### variableB

> \`const\` **variableB**: \`""\` = \`''\`
"
`;

exports[`Groups should compile categories group page: (Output File Strategy "modules") (Option Group "1") 1`] = `
"[**typedoc-stubs**](index.md)

***

[typedoc-stubs](modules.md) / has-categories

# has-categories

A module that contains categories

## Enumerations

### ExplicitNoCategoryEnum

### Category A

#### CategoryAEnum1

***

#### CategoryAEnum2

### Category B

#### CategoryBEnum1

***

#### CategoryBEnum2

### Other

#### UnCategorizedEnum

## Interfaces

### ExplicitNoCategoryInterface

### Category A

#### CategoryAInterface1

***

#### CategoryAInterface2

### Category B

#### CategoryBInterface1

***

#### CategoryBInterface2

### Category C

#### CategoryCInterface1

### Other

#### CategoryCInterface2

***

#### UnCategorizedInterace
"
`;

exports[`Groups should compile categories group page: (Output File Strategy "modules") (Option Group "2") 1`] = `
"[**typedoc-stubs**](index.md)

***

[typedoc-stubs](index.md) / has-categories

# has-categories

A module that contains categories

<a id="explicitnocategoryenum"></a>

## ExplicitNoCategoryEnum

***

<a id="explicitnocategoryinterface"></a>

## ExplicitNoCategoryInterface

## Category A

<a id="categoryaenum1"></a>

### CategoryAEnum1

***

<a id="categoryaenum2"></a>

### CategoryAEnum2

***

<a id="categoryainterface1"></a>

### CategoryAInterface1

***

<a id="categoryainterface2"></a>

### CategoryAInterface2

## Category B

<a id="categorybenum1"></a>

### CategoryBEnum1

***

<a id="categorybenum2"></a>

### CategoryBEnum2

***

<a id="categorybinterface1"></a>

### CategoryBInterface1

***

<a id="categorybinterface2"></a>

### CategoryBInterface2

## Category C

<a id="categorycinterface1"></a>

### CategoryCInterface1

## Other

<a id="uncategorizedenum"></a>

### UnCategorizedEnum

***

<a id="categorycinterface2"></a>

### CategoryCInterface2

***

<a id="uncategorizedinterace"></a>

### UnCategorizedInterace
"
`;

exports[`Groups should compile categories index page: (Output File Strategy "members") (Option Group "1") 1`] = `
"[**typedoc-stubs**](../index.md)

***

[typedoc-stubs](../modules.md) / has-categories

# has-categories

A module that contains categories

## Enumerations

| Enumeration | Description |
| :------ | :------ |
| [ExplicitNoCategoryEnum](enumerations/ExplicitNoCategoryEnum.md) | - |

### Category A

| Enumeration | Description |
| :------ | :------ |
| [CategoryAEnum1](enumerations/CategoryAEnum1.md) | - |
| [CategoryAEnum2](enumerations/CategoryAEnum2.md) | - |

### Category B

| Enumeration | Description |
| :------ | :------ |
| [CategoryBEnum1](enumerations/CategoryBEnum1.md) | - |
| [CategoryBEnum2](enumerations/CategoryBEnum2.md) | - |

### Other

| Enumeration | Description |
| :------ | :------ |
| [UnCategorizedEnum](enumerations/UnCategorizedEnum.md) | - |

## Interfaces

| Interface | Description |
| :------ | :------ |
| [ExplicitNoCategoryInterface](interfaces/ExplicitNoCategoryInterface.md) | - |

### Category A

| Interface | Description |
| :------ | :------ |
| [CategoryAInterface1](interfaces/CategoryAInterface1.md) | - |
| [CategoryAInterface2](interfaces/CategoryAInterface2.md) | - |

### Category B

| Interface | Description |
| :------ | :------ |
| [CategoryBInterface1](interfaces/CategoryBInterface1.md) | - |
| [CategoryBInterface2](interfaces/CategoryBInterface2.md) | - |

### Category C

| Interface | Description |
| :------ | :------ |
| [CategoryCInterface1](interfaces/CategoryCInterface1.md) | - |

### Other

| Interface | Description |
| :------ | :------ |
| [CategoryCInterface2](interfaces/CategoryCInterface2.md) | - |
| [UnCategorizedInterace](interfaces/UnCategorizedInterace.md) | - |
"
`;

exports[`Groups should compile categories index page: (Output File Strategy "members") (Option Group "2") 1`] = `
"[**typedoc-stubs**](../index.md)

***

[typedoc-stubs](../index.md) / has-categories

# has-categories

A module that contains categories

<table>
<thead>
<tr>
<th align="left">Name</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[ExplicitNoCategoryEnum](enumerations/ExplicitNoCategoryEnum.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[ExplicitNoCategoryInterface](interfaces/ExplicitNoCategoryInterface.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>

## Category A

<table>
<thead>
<tr>
<th align="left">Name</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[CategoryAEnum1](enumerations/CategoryAEnum1.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[CategoryAEnum2](enumerations/CategoryAEnum2.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[CategoryAInterface1](interfaces/CategoryAInterface1.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[CategoryAInterface2](interfaces/CategoryAInterface2.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>

## Category B

<table>
<thead>
<tr>
<th align="left">Name</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[CategoryBEnum1](enumerations/CategoryBEnum1.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[CategoryBEnum2](enumerations/CategoryBEnum2.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[CategoryBInterface1](interfaces/CategoryBInterface1.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[CategoryBInterface2](interfaces/CategoryBInterface2.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>

## Category C

<table>
<thead>
<tr>
<th align="left">Interface</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[CategoryCInterface1](interfaces/CategoryCInterface1.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>

## Other

<table>
<thead>
<tr>
<th align="left">Name</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[UnCategorizedEnum](enumerations/UnCategorizedEnum.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[CategoryCInterface2](interfaces/CategoryCInterface2.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[UnCategorizedInterace](interfaces/UnCategorizedInterace.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>
"
`;

exports[`Groups should compile custom groups index page: (Output File Strategy "members") (Option Group "1") 1`] = `
"[**typedoc-stubs**](../index.md)

***

[typedoc-stubs](../modules.md) / has-custom-groups

# has-custom-groups

A module that contains custom groupings

| Name | Description |
| :------ | :------ |
| [InterfaceNoGroup1](interfaces/InterfaceNoGroup1.md) | - |
| [InterfaceNoGroup2](interfaces/InterfaceNoGroup2.md) | - |
| [variableNoGroup1](variables/variableNoGroup1.md) | - |
| [variableNoGroup2](variables/variableNoGroup2.md) | - |

## Variables

| Variable | Description |
| :------ | :------ |
| [variableC](variables/variableC.md) | Default grouping |

## CustomGroupA

Group description for CustomGroupA

| Variable | Description |
| :------ | :------ |
| [variabelA](variables/variabelA.md) | - |

## CustomGroupB

| Variable | Description |
| :------ | :------ |
| [variableB1](variables/variableB1.md) | - |
| [variableB2](variables/variableB2.md) | - |
"
`;

exports[`Groups should compile custom groups index page: (Output File Strategy "members") (Option Group "2") 1`] = `
"[**typedoc-stubs**](../index.md)

***

[typedoc-stubs](../index.md) / has-custom-groups

# has-custom-groups

A module that contains custom groupings

<table>
<thead>
<tr>
<th align="left">Name</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[InterfaceNoGroup1](interfaces/InterfaceNoGroup1.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[InterfaceNoGroup2](interfaces/InterfaceNoGroup2.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[variableNoGroup1](variables/variableNoGroup1.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[variableNoGroup2](variables/variableNoGroup2.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>

## CustomGroupA

Group description for CustomGroupA

<table>
<thead>
<tr>
<th align="left">Variable</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[variabelA](variables/variabelA.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>

## CustomGroupB

<table>
<thead>
<tr>
<th align="left">Variable</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[variableB1](variables/variableB1.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[variableB2](variables/variableB2.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>

## Variables

<table>
<thead>
<tr>
<th align="left">Variable</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[variableC](variables/variableC.md)

</td>
<td>

Default grouping

</td>
</tr>
</tbody>
</table>
"
`;

exports[`Groups should compile has disabled group page: (Output File Strategy "modules") (Option Group "1") 1`] = `
"[**typedoc-stubs**](index.md)

***

[typedoc-stubs](modules.md) / has-disabled-groups

# has-disabled-groups

A module with disabled groups

## EnumA

EnumA function.

***

## EnumB

***

## ClassA

ClassA function.

### Constructors

#### Constructor

_SIGNATURE_MEMBER_PARTIAL_

***

## ClassB

### Constructors

#### Constructor

_SIGNATURE_MEMBER_PARTIAL_

***

## InterfaceA

Interface A

### Properties

#### propA

> **propA**: \`string\`

#### propB

> **propB**: \`string\`

***

## InterfaceB

InterfaceB function.

### Properties

#### propA

> **propA**: \`string\`

#### propB

> **propB**: \`string\`

***

## TypeA

> **TypeA** = \`string\`

TypeA function.

***

## TypeB

> **TypeB** = \`object\`

TypeB function.

### Properties

#### propA

> **propA**: \`string\`

#### propB?

> \`optional\` **propB**: \`number\`

***

## variableA

> \`const\` **variableA**: \`""\` = \`''\`

Comments for variableA

***

## variableB

> \`const\` **variableB**: \`""\` = \`''\`

***

## functionA()

_SIGNATURE_MEMBER_PARTIAL_
"
`;

exports[`Groups should compile has disabled group page: (Output File Strategy "modules") (Option Group "2") 1`] = `
"[**typedoc-stubs**](index.md)

***

[typedoc-stubs](index.md) / has-disabled-groups

# has-disabled-groups

A module with disabled groups

<a id="enuma"></a>

## EnumA

EnumA function.

***

<a id="enumb"></a>

## EnumB

***

<a id="classa"></a>

## ClassA

ClassA function.

### Constructors

<a id="constructor"></a>

#### Constructor

_SIGNATURE_MEMBER_PARTIAL_

***

<a id="classb"></a>

## ClassB

### Constructors

<a id="constructor-1"></a>

#### Constructor

_SIGNATURE_MEMBER_PARTIAL_

***

<a id="interfacea"></a>

## InterfaceA

Interface A

### Properties

<a id="propa"></a>

#### propA

> **propA**: \`string\`

<a id="propb"></a>

#### propB

> **propB**: \`string\`

***

<a id="interfaceb"></a>

## InterfaceB

InterfaceB function.

### Properties

<a id="propa-1"></a>

#### propA

> **propA**: \`string\`

<a id="propb-1"></a>

#### propB

> **propB**: \`string\`

***

<a id="typea"></a>

## TypeA

> **TypeA** = \`string\`

TypeA function.

***

<a id="typeb"></a>

## TypeB

> **TypeB** = \`object\`

TypeB function.

### Properties

<a id="propa-2"></a>

#### propA

> **propA**: \`string\`

<a id="propb-2"></a>

#### propB?

> \`optional\` **propB**: \`number\`

***

<a id="variablea"></a>

## variableA

> \`const\` **variableA**: \`""\` = \`''\`

Comments for variableA

***

<a id="variableb"></a>

## variableB

> \`const\` **variableB**: \`""\` = \`''\`

***

<a id="functiona"></a>

## functionA()

_SIGNATURE_MEMBER_PARTIAL_
"
`;

exports[`Groups should compile has disabled groups index page: (Output File Strategy "members") (Option Group "1") 1`] = `
"[**typedoc-stubs**](../index.md)

***

[typedoc-stubs](../modules.md) / has-disabled-groups

# has-disabled-groups

A module with disabled groups

| Name | Description |
| :------ | :------ |
| [EnumA](enumerations/EnumA.md) | EnumA function. |
| [EnumB](enumerations/EnumB.md) | - |
| [ClassA](classes/ClassA.md) | ClassA function. |
| [ClassB](classes/ClassB.md) | - |
| [InterfaceA](interfaces/InterfaceA.md) | Interface A |
| [InterfaceB](interfaces/InterfaceB.md) | InterfaceB function. |
| [TypeA](type-aliases/TypeA.md) | TypeA function. |
| [TypeB](type-aliases/TypeB.md) | TypeB function. |
| [variableA](variables/variableA.md) | Comments for variableA |
| [variableB](variables/variableB.md) | - |
| [functionA](functions/functionA.md) | Comments for functionA |
"
`;

exports[`Groups should compile has disabled groups index page: (Output File Strategy "members") (Option Group "2") 1`] = `
"[**typedoc-stubs**](../index.md)

***

[typedoc-stubs](../index.md) / has-disabled-groups

# has-disabled-groups

A module with disabled groups

<table>
<thead>
<tr>
<th align="left">Name</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[EnumA](enumerations/EnumA.md)

</td>
<td>

EnumA function.

</td>
</tr>
<tr>
<td>

[EnumB](enumerations/EnumB.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[ClassA](classes/ClassA.md)

</td>
<td>

ClassA function.

</td>
</tr>
<tr>
<td>

[ClassB](classes/ClassB.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[InterfaceA](interfaces/InterfaceA.md)

</td>
<td>

Interface A

</td>
</tr>
<tr>
<td>

[InterfaceB](interfaces/InterfaceB.md)

</td>
<td>

InterfaceB function.

</td>
</tr>
<tr>
<td>

[TypeA](type-aliases/TypeA.md)

</td>
<td>

TypeA function.

</td>
</tr>
<tr>
<td>

[TypeB](type-aliases/TypeB.md)

</td>
<td>

TypeB function.

</td>
</tr>
<tr>
<td>

[variableA](variables/variableA.md)

</td>
<td>

Comments for variableA

</td>
</tr>
<tr>
<td>

[variableB](variables/variableB.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[functionA](functions/functionA.md)

</td>
<td>

Comments for functionA

</td>
</tr>
</tbody>
</table>
"
`;

exports[`Groups should compile index page for project: (Output File Strategy "members") (Option Group "1") 1`] = `
"[**typedoc-stubs**](index.md)

***

# typedoc-stubs

## Modules

| Module | Description |
| :------ | :------ |
| [\\<internal\\>](-internal-/index.md) | - |
| [42-module-name](42-module-name/index.md) | - |
| [basic](basic/index.md) | A basic module |
| [has-categories](has-categories/index.md) | A module that contains categories |
| [has-custom-groups](has-custom-groups/index.md) | A module that contains custom groupings |
| [has-disabled-groups](has-disabled-groups/index.md) | A module with disabled groups |
| [has-namespaces](has-namespaces/index.md) | A module that contains namespaces |
| [has-references](has-references/index.md) | A module that contains references |
| [has-same-exports](has-same-exports/index.md) | - |
| [index](index/index.md) | A module named index |
"
`;

exports[`Groups should compile index page for project: (Output File Strategy "members") (Option Group "2") 1`] = `
"**typedoc-stubs**

***

# typedoc-stubs

## Modules

<table>
<thead>
<tr>
<th align="left">Module</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[\\<internal\\>](-internal-/index.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[42-module-name](42-module-name/index.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[basic](basic/index.md)

</td>
<td>

A basic module

</td>
</tr>
<tr>
<td>

[has-categories](has-categories/index.md)

</td>
<td>

A module that contains categories

</td>
</tr>
<tr>
<td>

[has-custom-groups](has-custom-groups/index.md)

</td>
<td>

A module that contains custom groupings

</td>
</tr>
<tr>
<td>

[has-disabled-groups](has-disabled-groups/index.md)

</td>
<td>

A module with disabled groups

</td>
</tr>
<tr>
<td>

[has-namespaces](has-namespaces/index.md)

</td>
<td>

A module that contains namespaces

</td>
</tr>
<tr>
<td>

[has-references](has-references/index.md)

</td>
<td>

A module that contains references

</td>
</tr>
<tr>
<td>

[has-same-exports](has-same-exports/index.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[index](index/index.md)

</td>
<td>

A module named index

</td>
</tr>
</tbody>
</table>
"
`;

exports[`Groups should compile index page for project: (Output File Strategy "modules") (Option Group "1") 1`] = `
"[**typedoc-stubs**](index.md)

***

# typedoc-stubs

## Modules

| Module | Description |
| :------ | :------ |
| [\\<internal\\>](-internal-.md) | - |
| [42-module-name](42-module-name.md) | - |
| [basic](basic.md) | A basic module |
| [has-categories](has-categories.md) | A module that contains categories |
| [has-custom-groups](has-custom-groups.md) | A module that contains custom groupings |
| [has-disabled-groups](has-disabled-groups.md) | A module with disabled groups |
| [has-namespaces](has-namespaces/index.md) | A module that contains namespaces |
| [has-references](has-references.md) | A module that contains references |
| [has-same-exports](has-same-exports.md) | - |
| [index](index-1.md) | A module named index |
"
`;

exports[`Groups should compile index page for project: (Output File Strategy "modules") (Option Group "2") 1`] = `
"**typedoc-stubs**

***

# typedoc-stubs

## Modules

<table>
<thead>
<tr>
<th align="left">Module</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[\\<internal\\>](-internal-.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[42-module-name](42-module-name.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[basic](basic.md)

</td>
<td>

A basic module

</td>
</tr>
<tr>
<td>

[has-categories](has-categories.md)

</td>
<td>

A module that contains categories

</td>
</tr>
<tr>
<td>

[has-custom-groups](has-custom-groups.md)

</td>
<td>

A module that contains custom groupings

</td>
</tr>
<tr>
<td>

[has-disabled-groups](has-disabled-groups.md)

</td>
<td>

A module with disabled groups

</td>
</tr>
<tr>
<td>

[has-namespaces](has-namespaces/index.md)

</td>
<td>

A module that contains namespaces

</td>
</tr>
<tr>
<td>

[has-references](has-references.md)

</td>
<td>

A module that contains references

</td>
</tr>
<tr>
<td>

[has-same-exports](has-same-exports.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[index](index-1.md)

</td>
<td>

A module named index

</td>
</tr>
</tbody>
</table>
"
`;

exports[`Groups should compile module index for a namespace: (Output File Strategy "members") (Option Group "1") 1`] = `
"[**typedoc-stubs**](../../../index.md)

***

[typedoc-stubs](../../../modules.md) / [has-namespaces](../../index.md) / \\_Namespace\\_A\\_

# \\_Namespace\\_A\\_

## Namespaces

| Namespace | Description |
| :------ | :------ |
| [NestedNamespace](namespaces/NestedNamespace/index.md) | - |

## Interfaces

| Interface | Description |
| :------ | :------ |
| [NamespaceInterface](interfaces/NamespaceInterface.md) | - |
"
`;

exports[`Groups should compile module index for a namespace: (Output File Strategy "members") (Option Group "2") 1`] = `
"[**typedoc-stubs**](../../../index.md)

***

[typedoc-stubs](../../../index.md) / [has-namespaces](../../index.md) / \\_Namespace\\_A\\_

# \\_Namespace\\_A\\_

## Interfaces

<table>
<thead>
<tr>
<th align="left">Interface</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[NamespaceInterface](interfaces/NamespaceInterface.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>

## Namespaces

<table>
<thead>
<tr>
<th align="left">Namespace</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[NestedNamespace](namespaces/NestedNamespace/index.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>
"
`;

exports[`Groups should compile module index for a namespace: (Output File Strategy "modules") (Option Group "1") 1`] = `
"[**typedoc-stubs**](../../../index.md)

***

[typedoc-stubs](../../../modules.md) / [has-namespaces](../../index.md) / \\_Namespace\\_A\\_

# \\_Namespace\\_A\\_

## Namespaces

| Namespace | Description |
| :------ | :------ |
| [NestedNamespace](namespaces/NestedNamespace.md) | - |

## Interfaces

### NamespaceInterface
"
`;

exports[`Groups should compile module index for a namespace: (Output File Strategy "modules") (Option Group "2") 1`] = `
"[**typedoc-stubs**](../../../index.md)

***

[typedoc-stubs](../../../index.md) / [has-namespaces](../../index.md) / \\_Namespace\\_A\\_

# \\_Namespace\\_A\\_

## Interfaces

<a id="namespaceinterface"></a>

### NamespaceInterface

## Namespaces

<table>
<thead>
<tr>
<th align="left">Namespace</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[NestedNamespace](namespaces/NestedNamespace.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>
"
`;

exports[`Groups should compile module index with namespaces index page: (Output File Strategy "members") (Option Group "1") 1`] = `
"[**typedoc-stubs**](../index.md)

***

[typedoc-stubs](../modules.md) / has-namespaces

# has-namespaces

A module that contains namespaces

## Namespaces

| Namespace | Description |
| :------ | :------ |
| [\\_Namespace\\_A\\_](namespaces/Namespace_A/index.md) | - |
| [NamespaceB](namespaces/NamespaceB/index.md) | - |

## Enumerations

| Enumeration | Description |
| :------ | :------ |
| [\\_Enum\\_A\\_](enumerations/Enum_A.md) | - |
| [EnumB](enumerations/EnumB.md) | - |

## Classes

| Class | Description |
| :------ | :------ |
| [\\_\\_Class\\_A\\_](classes/Class_A.md) | - |
| [ClassB](classes/ClassB.md) | - |

## Interfaces

| Interface | Description |
| :------ | :------ |
| [\\_Interface\\_A\\_](interfaces/Interface_A.md) | - |
| [InterfaceB](interfaces/InterfaceB.md) | - |

## Type Aliases

| Type Alias | Description |
| :------ | :------ |
| [\\_Type\\_A\\_](type-aliases/Type_A.md) | - |
| [TypeB](type-aliases/TypeB.md) | - |

## Variables

| Variable | Description |
| :------ | :------ |
| [\\_variable\\_A\\_](variables/variable_A.md) | - |
| [variableB](variables/variableB.md) | - |

## Functions

| Function | Description |
| :------ | :------ |
| [\\_function\\_A\\_](functions/function_A.md) | - |
| [functionB](functions/functionB.md) | - |
"
`;

exports[`Groups should compile module index with namespaces index page: (Output File Strategy "members") (Option Group "2") 1`] = `
"[**typedoc-stubs**](../index.md)

***

[typedoc-stubs](../index.md) / has-namespaces

# has-namespaces

A module that contains namespaces

## Functions

<table>
<thead>
<tr>
<th align="left">Function</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[\\_function\\_A\\_](functions/function_A.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[functionB](functions/functionB.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>

## Interfaces

<table>
<thead>
<tr>
<th align="left">Interface</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[\\_Interface\\_A\\_](interfaces/Interface_A.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[InterfaceB](interfaces/InterfaceB.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>

## Classes

<table>
<thead>
<tr>
<th align="left">Class</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[\\_\\_Class\\_A\\_](classes/Class_A.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[ClassB](classes/ClassB.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>

## Enumerations

<table>
<thead>
<tr>
<th align="left">Enumeration</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[\\_Enum\\_A\\_](enumerations/Enum_A.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[EnumB](enumerations/EnumB.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>

## Namespaces

<table>
<thead>
<tr>
<th align="left">Namespace</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[\\_Namespace\\_A\\_](namespaces/Namespace_A/index.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[NamespaceB](namespaces/NamespaceB/index.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>

## Type Aliases

<table>
<thead>
<tr>
<th align="left">Type Alias</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[\\_Type\\_A\\_](type-aliases/Type_A.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[TypeB](type-aliases/TypeB.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>

## Variables

<table>
<thead>
<tr>
<th align="left">Variable</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[\\_variable\\_A\\_](variables/variable_A.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[variableB](variables/variableB.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>
"
`;

exports[`Groups should compile module index with namespaces index page: (Output File Strategy "modules") (Option Group "1") 1`] = `
"[**typedoc-stubs**](../index.md)

***

[typedoc-stubs](../modules.md) / has-namespaces

# has-namespaces

A module that contains namespaces

## Namespaces

| Namespace | Description |
| :------ | :------ |
| [\\_Namespace\\_A\\_](namespaces/Namespace_A/index.md) | - |
| [NamespaceB](namespaces/NamespaceB.md) | - |

## Enumerations

### \\_Enum\\_A\\_

***

### EnumB

## Classes

### \\_\\_Class\\_A\\_

#### Constructors

##### Constructor

_SIGNATURE_MEMBER_PARTIAL_

***

### ClassB

#### Constructors

##### Constructor

_SIGNATURE_MEMBER_PARTIAL_

## Interfaces

### \\_Interface\\_A\\_

***

### InterfaceB

## Type Aliases

### \\_Type\\_A\\_

> **\\_Type\\_A\\_** = \`string\`

***

### TypeB

> **TypeB** = \`string\`

## Variables

### \\_variable\\_A\\_

> \`const\` **\\_variable\\_A\\_**: \`true\` = \`true\`

***

### variableB

> \`const\` **variableB**: \`true\` = \`true\`

## Functions

### \\_function\\_A\\_()

_SIGNATURE_MEMBER_PARTIAL_

***

### functionB()

_SIGNATURE_MEMBER_PARTIAL_
"
`;

exports[`Groups should compile module index with namespaces index page: (Output File Strategy "modules") (Option Group "2") 1`] = `
"[**typedoc-stubs**](../index.md)

***

[typedoc-stubs](../index.md) / has-namespaces

# has-namespaces

A module that contains namespaces

## Functions

<a id="_function_a_"></a>

### \\_function\\_A\\_()

_SIGNATURE_MEMBER_PARTIAL_

***

<a id="functionb"></a>

### functionB()

_SIGNATURE_MEMBER_PARTIAL_

## Interfaces

<a id="_interface_a_"></a>

### \\_Interface\\_A\\_

***

<a id="interfaceb"></a>

### InterfaceB

## Classes

<a id="__class_a_"></a>

### \\_\\_Class\\_A\\_

#### Constructors

<a id="constructor"></a>

##### Constructor

_SIGNATURE_MEMBER_PARTIAL_

***

<a id="classb"></a>

### ClassB

#### Constructors

<a id="constructor-1"></a>

##### Constructor

_SIGNATURE_MEMBER_PARTIAL_

## Enumerations

<a id="_enum_a_"></a>

### \\_Enum\\_A\\_

***

<a id="enumb"></a>

### EnumB

## Namespaces

<table>
<thead>
<tr>
<th align="left">Namespace</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[\\_Namespace\\_A\\_](namespaces/Namespace_A/index.md)

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

[NamespaceB](namespaces/NamespaceB.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>

## Type Aliases

<a id="_type_a_"></a>

### \\_Type\\_A\\_

> **\\_Type\\_A\\_** = \`string\`

***

<a id="typeb"></a>

### TypeB

> **TypeB** = \`string\`

## Variables

<a id="_variable_a_"></a>

### \\_variable\\_A\\_

> \`const\` **\\_variable\\_A\\_**: \`true\` = \`true\`

***

<a id="variableb"></a>

### variableB

> \`const\` **variableB**: \`true\` = \`true\`
"
`;

exports[`Groups should compile readme for a project: (Output File Strategy "modules") (Option Group "1") 1`] = `
"**typedoc-stubs**

***

# MY README

> Some block quote

Some text.

## Readme heading

Some text.
"
`;

exports[`Groups should compile references group page: (Output File Strategy "modules") (Option Group "1") 1`] = `
"[**typedoc-stubs**](index.md)

***

[typedoc-stubs](modules.md) / has-references

# has-references

A module that contains references

## Functions

### defaultFunction()

_SIGNATURE_MEMBER_PARTIAL_

## References

### default

Renames and re-exports [defaultFunction](#defaultfunction)

***

### InterfaceA

Re-exports [InterfaceA](basic.md#interfacea)

***

### RenamedInterfaceB

Renames and re-exports [InterfaceB](basic.md#interfaceb)
"
`;

exports[`Groups should compile references group page: (Output File Strategy "modules") (Option Group "2") 1`] = `
"[**typedoc-stubs**](index.md)

***

[typedoc-stubs](index.md) / has-references

# has-references

A module that contains references

## Functions

<a id="defaultfunction"></a>

### defaultFunction()

_SIGNATURE_MEMBER_PARTIAL_

## References

<a id="default"></a>

### default

Renames and re-exports [defaultFunction](#defaultfunction)

***

<a id="interfacea"></a>

### InterfaceA

Re-exports [InterfaceA](basic.md#interfacea)

***

<a id="renamedinterfaceb"></a>

### RenamedInterfaceB

Renames and re-exports [InterfaceB](basic.md#interfaceb)
"
`;

exports[`Groups should compile references index page: (Output File Strategy "members") (Option Group "1") 1`] = `
"[**typedoc-stubs**](../index.md)

***

[typedoc-stubs](../modules.md) / has-references

# has-references

A module that contains references

## Functions

| Function | Description |
| :------ | :------ |
| [defaultFunction](functions/defaultFunction.md) | - |

## References

### default

Renames and re-exports [defaultFunction](functions/defaultFunction.md)

***

### InterfaceA

Re-exports [InterfaceA](../basic/interfaces/InterfaceA.md)

***

### RenamedInterfaceB

Renames and re-exports [InterfaceB](../basic/interfaces/InterfaceB.md)
"
`;

exports[`Groups should compile references index page: (Output File Strategy "members") (Option Group "2") 1`] = `
"[**typedoc-stubs**](../index.md)

***

[typedoc-stubs](../index.md) / has-references

# has-references

A module that contains references

## Functions

<table>
<thead>
<tr>
<th align="left">Function</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

[defaultFunction](functions/defaultFunction.md)

</td>
<td>

&hyphen;

</td>
</tr>
</tbody>
</table>

## References

<a id="default"></a>

### default

Renames and re-exports [defaultFunction](functions/defaultFunction.md)

***

<a id="interfacea"></a>

### InterfaceA

Re-exports [InterfaceA](../basic/interfaces/InterfaceA.md)

***

<a id="renamedinterfaceb"></a>

### RenamedInterfaceB

Renames and re-exports [InterfaceB](../basic/interfaces/InterfaceB.md)
"
`;
