// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Class Reflection should compile abstract class: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: \`abstract\` AbstractClass

Defined in: [classes.ts:1](http://source-url)

## Hierarchy

[View Summary](../hierarchy.md)

### Extended by

- [\`DerivedClassA\`](DerivedClassA.md)
- [\`DerivedClassB\`](DerivedClassB.md)

## Constructors

### Constructor

> **new AbstractClass**(): \`AbstractClass\`

#### Returns

\`AbstractClass\`

## Properties

### abstractProp

> \`abstract\` **abstractProp**: \`string\`

Defined in: [classes.ts:1](http://source-url)

Comments for abstractProp

## Methods

### abstractMethod()

> \`abstract\` **abstractMethod**(): \`string\`

Defined in: [classes.ts:1](http://source-url)

Comments for abstractMethod

#### Returns

\`string\`
"
`;

exports[`Class Reflection should compile abstract class: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Class: \`abstract\` AbstractClass

Defined in: [classes.ts:1](http://source-url)

## Extended by

- [\`DerivedClassA\`](DerivedClassA.md)
- [\`DerivedClassB\`](DerivedClassB.md)

## Constructors

### Constructor

\`\`\`ts
new AbstractClass(): AbstractClass;
\`\`\`

#### Returns

\`AbstractClass\`

## Properties

| Property | Modifier | Type | Description |
| :------ | :------ | :------ | :------ |
| <a id="abstractprop"></a> \`abstractProp\` | \`abstract\` | \`string\` | Comments for abstractProp |

## Methods

### abstractMethod()

\`\`\`ts
abstract abstractMethod(): string;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

Comments for abstractMethod

#### Returns

\`string\`
"
`;

exports[`Class Reflection should compile basic class: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: BasicClass

Defined in: [classes.ts:1](http://source-url)

Comments for BasicClass

## Constructors

### Constructor

> **new BasicClass**(): \`BasicClass\`

#### Returns

\`BasicClass\`

## Properties

### prop

> **prop**: \`string\`

Defined in: [classes.ts:1](http://source-url)

Comments for prop

***

### Prop

> **Prop**: \`string\`

Defined in: [classes.ts:1](http://source-url)

Comments for Prop

## Methods

### method()

> **method**(): \`string\`

Defined in: [classes.ts:1](http://source-url)

Comments for method

#### Returns

\`string\`
"
`;

exports[`Class Reflection should compile basic class: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Class: BasicClass

Defined in: [classes.ts:1](http://source-url)

Comments for BasicClass

## Constructors

### Constructor

\`\`\`ts
new BasicClass(): BasicClass;
\`\`\`

#### Returns

\`BasicClass\`

## Properties

| Property | Type | Description |
| :------ | :------ | :------ |
| <a id="prop"></a> \`prop\` | \`string\` | Comments for prop |
| <a id="prop-1"></a> \`Prop\` | \`string\` | Comments for Prop |

## Methods

### method()

\`\`\`ts
method(): string;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

Comments for method

#### Returns

\`string\`
"
`;

exports[`Class Reflection should compile class with accessor keywords: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: ClassWithAccessorKeywords

Defined in: [classes.ts:1](http://source-url)

## Constructors

### Constructor

> **new ClassWithAccessorKeywords**(): \`ClassWithAccessorKeywords\`

#### Returns

\`ClassWithAccessorKeywords\`

## Accessors

### accessor1

Defined in: [classes.ts:1](http://source-url)

Accessor comments

#### Example

\`\`\`ts
const x = 1;
\`\`\`

***

### accessor2

Defined in: [classes.ts:1](http://source-url)

Accessor comments

#### Remarks

Remark comments

***

### accessor3

Defined in: [classes.ts:1](http://source-url)

Accessor comments
"
`;

exports[`Class Reflection should compile class with accessor keywords: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Class: ClassWithAccessorKeywords

Defined in: [classes.ts:1](http://source-url)

## Constructors

### Constructor

\`\`\`ts
new ClassWithAccessorKeywords(): ClassWithAccessorKeywords;
\`\`\`

#### Returns

\`ClassWithAccessorKeywords\`

## Accessors

### accessor1

Defined in: [classes.ts:1](http://source-url)

Accessor comments

#### Example

\`\`\`ts
const x = 1;
\`\`\`

***

### accessor2

Defined in: [classes.ts:1](http://source-url)

Accessor comments

#### Remarks

Remark comments

***

### accessor3

Defined in: [classes.ts:1](http://source-url)

Accessor comments
"
`;

exports[`Class Reflection should compile class with accessors: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: ClassWithAccessors

Defined in: [classes.ts:1](http://source-url)

Comments for ClassWithAccessors

## Constructors

### Constructor

> **new ClassWithAccessors**(): \`ClassWithAccessors\`

#### Returns

\`ClassWithAccessors\`

## Properties

### privateProp

> \`private\` **privateProp**: \`string\`

Defined in: [classes.ts:1](http://source-url)

## Accessors

### accessor

#### Get Signature

> **get** **accessor**(): \`string\`

Defined in: [classes.ts:1](http://source-url)

Comments for getter

##### Returns

\`string\`

#### Set Signature

> **set** **accessor**(\`value\`): \`void\`

Defined in: [classes.ts:1](http://source-url)

Comments for setter

##### Parameters

###### value

\`string\`

Param comments

##### Returns

\`void\`

***

### noGetter

#### Set Signature

> **set** **noGetter**(\`x\`): \`void\`

Defined in: [classes.ts:1](http://source-url)

##### Parameters

###### x

\`string\`

##### Returns

\`void\`

***

### noSetter

#### Get Signature

> **get** **noSetter**(): \`string\`

Defined in: [classes.ts:1](http://source-url)

##### Returns

\`string\`
"
`;

exports[`Class Reflection should compile class with accessors: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Class: ClassWithAccessors

Defined in: [classes.ts:1](http://source-url)

Comments for ClassWithAccessors

## Constructors

### Constructor

\`\`\`ts
new ClassWithAccessors(): ClassWithAccessors;
\`\`\`

#### Returns

\`ClassWithAccessors\`

## Properties

| Property | Modifier | Type |
| :------ | :------ | :------ |
| <a id="privateprop"></a> \`privateProp\` | \`private\` | \`string\` |

## Accessors

### accessor

#### Get Signature

\`\`\`ts
get accessor(): string;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

Comments for getter

##### Returns

\`string\`

#### Set Signature

\`\`\`ts
set accessor(value: string): void;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

Comments for setter

##### Parameters

| Parameter | Type | Description |
| :------ | :------ | :------ |
| \`value\` | \`string\` | Param comments |

##### Returns

\`void\`

***

### noGetter

#### Set Signature

\`\`\`ts
set noGetter(x: string): void;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

##### Parameters

| Parameter | Type |
| :------ | :------ |
| \`x\` | \`string\` |

##### Returns

\`void\`

***

### noSetter

#### Get Signature

\`\`\`ts
get noSetter(): string;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

##### Returns

\`string\`
"
`;

exports[`Class Reflection should compile class with complex props: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: ClassWithComplexProps

Defined in: [classes.ts:1](http://source-url)

Comments for ClassWithComplexProps

## Constructors

### Constructor

> **new ClassWithComplexProps**(): \`ClassWithComplexProps\`

#### Returns

\`ClassWithComplexProps\`

## Properties

### objecLiteralProp

> **objecLiteralProp**: \`object\`

Defined in: [classes.ts:1](http://source-url)

#### someFunction()

> **someFunction**: (\`a\`) => \`string\`

Comments for someFunction

##### Parameters

###### a

\`string\`

##### Returns

\`string\`

#### someProp

> **someProp**: \`string\` = \`'someProp'\`

Comments for someProp
"
`;

exports[`Class Reflection should compile class with complex props: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Class: ClassWithComplexProps

Defined in: [classes.ts:1](http://source-url)

Comments for ClassWithComplexProps

## Constructors

### Constructor

\`\`\`ts
new ClassWithComplexProps(): ClassWithComplexProps;
\`\`\`

#### Returns

\`ClassWithComplexProps\`

## Properties

| Property | Type | Description |
| :------ | :------ | :------ |
| <a id="objecliteralprop"></a> \`objecLiteralProp\` | \`object\` | - |
| \`objecLiteralProp.someFunction\` | (\`a\`: \`string\`) => \`string\` | Comments for someFunction |
| \`objecLiteralProp.someProp\` | \`string\` | Comments for someProp |
"
`;

exports[`Class Reflection should compile class with constructor overloads: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: ClassWithConstructorOverloads

Defined in: [classes.ts:1](http://source-url)

Comments for ClassWithConstructorOverloads

## Constructors

### Constructor

> **new ClassWithConstructorOverloads**(\`x\`, \`y\`): \`ClassWithConstructorOverloads\`

Defined in: [classes.ts:1](http://source-url)

#### Parameters

##### x

\`number\`

Comments for x number

##### y

\`string\`

#### Returns

\`ClassWithConstructorOverloads\`

### Constructor

> **new ClassWithConstructorOverloads**(\`x\`): \`ClassWithConstructorOverloads\`

Defined in: [classes.ts:1](http://source-url)

#### Parameters

##### x

\`string\`

Comments for x string

#### Returns

\`ClassWithConstructorOverloads\`

### Constructor

> **new ClassWithConstructorOverloads**(\`s\`): \`ClassWithConstructorOverloads\`

Defined in: [classes.ts:1](http://source-url)

#### Parameters

##### s

\`string\`

#### Returns

\`ClassWithConstructorOverloads\`
"
`;

exports[`Class Reflection should compile class with constructor overloads: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Class: ClassWithConstructorOverloads

Defined in: [classes.ts:1](http://source-url)

Comments for ClassWithConstructorOverloads

## Constructors

### Constructor

\`\`\`ts
new ClassWithConstructorOverloads(x: number, y: string): ClassWithConstructorOverloads;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

#### Parameters

| Parameter | Type | Description |
| :------ | :------ | :------ |
| \`x\` | \`number\` | Comments for x number |
| \`y\` | \`string\` |  |

#### Returns

\`ClassWithConstructorOverloads\`

### Constructor

\`\`\`ts
new ClassWithConstructorOverloads(x: string): ClassWithConstructorOverloads;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

#### Parameters

| Parameter | Type | Description |
| :------ | :------ | :------ |
| \`x\` | \`string\` | Comments for x string |

#### Returns

\`ClassWithConstructorOverloads\`

### Constructor

\`\`\`ts
new ClassWithConstructorOverloads(s: string): ClassWithConstructorOverloads;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

#### Parameters

| Parameter | Type |
| :------ | :------ |
| \`s\` | \`string\` |

#### Returns

\`ClassWithConstructorOverloads\`
"
`;

exports[`Class Reflection should compile class with flags: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: ClassWithFlags

Defined in: [classes.ts:1](http://source-url)

Comment for ClassWithFlags

## Constructors

### Constructor

> **new ClassWithFlags**(): \`ClassWithFlags\`

#### Returns

\`ClassWithFlags\`

## Properties

### expermintalProp

> **expermintalProp**: \`string\`

Defined in: [classes.ts:1](http://source-url)

**\`Experimental\`**

***

### internalProp

> \`private\` **internalProp**: \`string\`

Defined in: [classes.ts:1](http://source-url)

**\`Internal\`**

## Methods

### expermintalMethod()

> **expermintalMethod**(): \`void\`

Defined in: [classes.ts:1](http://source-url)

**\`Experimental\`**

#### Returns

\`void\`

***

### internalMethod()

> \`protected\` **internalMethod**(): \`void\`

Defined in: [classes.ts:1](http://source-url)

**\`Internal\`**

#### Returns

\`void\`
"
`;

exports[`Class Reflection should compile class with flags: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Class: ClassWithFlags

Defined in: [classes.ts:1](http://source-url)

Comment for ClassWithFlags

## Constructors

### Constructor

\`\`\`ts
new ClassWithFlags(): ClassWithFlags;
\`\`\`

#### Returns

\`ClassWithFlags\`

## Properties

| Property | Modifier | Type | Description |
| :------ | :------ | :------ | :------ |
| <a id="expermintalprop"></a> \`expermintalProp\` | \`public\` | \`string\` | **\`Experimental\`** |
| <a id="internalprop"></a> \`internalProp\` | \`private\` | \`string\` | **\`Internal\`** |

## Methods

### expermintalMethod()

\`\`\`ts
expermintalMethod(): void;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

**\`Experimental\`**

#### Returns

\`void\`

***

### internalMethod()

\`\`\`ts
protected internalMethod(): void;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

**\`Internal\`**

#### Returns

\`void\`
"
`;

exports[`Class Reflection should compile class with modifiers: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: \`abstract\` ClassWithModifiers

Defined in: [classes.ts:1](http://source-url)

Comments for ClassWithModifiers

## Constructors

### Constructor

> **new ClassWithModifiers**(): \`ClassWithModifiers\`

#### Returns

\`ClassWithModifiers\`

## Properties

### privateProp

> \`private\` **privateProp**: \`string\`

Defined in: [classes.ts:1](http://source-url)

Comments for privateProp

***

### protectedProp

> \`protected\` **protectedProp**: \`string\`

Defined in: [classes.ts:1](http://source-url)

Comments for protectedProp

***

### publicPropWithDefault

> **publicPropWithDefault**: \`string\` = \`'propWithDefault'\`

Defined in: [classes.ts:1](http://source-url)

Comments for propWithDefault

***

### readonlyProp

> \`readonly\` **readonlyProp**: \`string\`

Defined in: [classes.ts:1](http://source-url)

Comments for abstractProperty

***

### staticProp

> \`static\` **staticProp**: \`string\`

Defined in: [classes.ts:1](http://source-url)

Comments for staticProp

## Methods

### privateMethod()

> \`private\` **privateMethod**(): \`void\`

Defined in: [classes.ts:1](http://source-url)

Comment for privateMethod

#### Returns

\`void\`

***

### publicMethod()

> **publicMethod**(): \`void\`

Defined in: [classes.ts:1](http://source-url)

Comment for publicMethod

#### Returns

\`void\`

***

### staticMethod()

> \`static\` **staticMethod**(): \`void\`

Defined in: [classes.ts:1](http://source-url)

Comment for staticMethod

#### Returns

\`void\`
"
`;

exports[`Class Reflection should compile class with modifiers: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Class: \`abstract\` ClassWithModifiers

Defined in: [classes.ts:1](http://source-url)

Comments for ClassWithModifiers

## Constructors

### Constructor

\`\`\`ts
new ClassWithModifiers(): ClassWithModifiers;
\`\`\`

#### Returns

\`ClassWithModifiers\`

## Properties

| Property | Modifier | Type | Default value | Description |
| :------ | :------ | :------ | :------ | :------ |
| <a id="privateprop"></a> \`privateProp\` | \`private\` | \`string\` | \`undefined\` | Comments for privateProp |
| <a id="protectedprop"></a> \`protectedProp\` | \`protected\` | \`string\` | \`undefined\` | Comments for protectedProp |
| <a id="publicpropwithdefault"></a> \`publicPropWithDefault\` | \`public\` | \`string\` | \`'propWithDefault'\` | Comments for propWithDefault |
| <a id="readonlyprop"></a> \`readonlyProp\` | \`readonly\` | \`string\` | \`undefined\` | Comments for abstractProperty |
| <a id="staticprop"></a> \`staticProp\` | \`static\` | \`string\` | \`undefined\` | Comments for staticProp |

## Methods

### privateMethod()

\`\`\`ts
private privateMethod(): void;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

Comment for privateMethod

#### Returns

\`void\`

***

### publicMethod()

\`\`\`ts
publicMethod(): void;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

Comment for publicMethod

#### Returns

\`void\`

***

### staticMethod()

\`\`\`ts
static staticMethod(): void;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

Comment for staticMethod

#### Returns

\`void\`
"
`;

exports[`Class Reflection should compile class with prop categories: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: ClassWithPropCategories

Defined in: [classes.ts:1](http://source-url)

## Constructors

### Constructor

> **new ClassWithPropCategories**(\`opts\`): \`ClassWithPropCategories\`

Defined in: [classes.ts:1](http://source-url)

#### Parameters

##### opts

###### a

\`string\`

###### b

\`string\`

#### Returns

\`ClassWithPropCategories\`

## CatA

### prop1

> **prop1**: \`string\`

Defined in: [classes.ts:1](http://source-url)

## CatB

### prop2

> **prop2**: \`string\`

Defined in: [classes.ts:1](http://source-url)

## Other

### method1()

> **method1**(): \`void\`

Defined in: [classes.ts:1](http://source-url)

#### Returns

\`void\`

***

### method2()

> **method2**(): \`void\`

Defined in: [classes.ts:1](http://source-url)

#### Returns

\`void\`
"
`;

exports[`Class Reflection should compile class with prop categories: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Class: ClassWithPropCategories

Defined in: [classes.ts:1](http://source-url)

## Constructors

### Constructor

\`\`\`ts
new ClassWithPropCategories(opts: object): ClassWithPropCategories;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

#### Parameters

| Parameter | Type |
| :------ | :------ |
| \`opts\` | \\{ \`a\`: \`string\`; \`b\`: \`string\`; \\} |
| \`opts.a\` | \`string\` |
| \`opts.b\` | \`string\` |

#### Returns

\`ClassWithPropCategories\`

## CatA

### prop1

\`\`\`ts
prop1: string;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

## CatB

### prop2

\`\`\`ts
prop2: string;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

## Other

### method1()

\`\`\`ts
method1(): void;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

#### Returns

\`void\`

***

### method2()

\`\`\`ts
method2(): void;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

#### Returns

\`void\`
"
`;

exports[`Class Reflection should compile class with simple props: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: ClassWithSimpleProps

Defined in: [classes.ts:1](http://source-url)

Comments for ClassWithSimpleProps

## Constructors

### Constructor

> **new ClassWithSimpleProps**(): \`ClassWithSimpleProps\`

#### Returns

\`ClassWithSimpleProps\`

## Properties

### propA

> **propA**: \`string\` = \`'propAValue'\`

Defined in: [classes.ts:1](http://source-url)

Comments for propA

***

### propB

> **propB**: \`string\` = \`'propBValue'\`

Defined in: [classes.ts:1](http://source-url)

Comments for propB

#### Default Value

\`\`\`ts
'propBDefaultValue'
\`\`\`

***

### propC

> **propC**: \`string\`

Defined in: [classes.ts:1](http://source-url)

Comments for propB
on two lines

#### Default Value

\`\`\`ts
'propCDefaultValue'
\`\`\`

***

### propD

> **propD**: \`string\`

Defined in: [classes.ts:1](http://source-url)

Comments for propE
"
`;

exports[`Class Reflection should compile class with simple props: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Class: ClassWithSimpleProps

Defined in: [classes.ts:1](http://source-url)

Comments for ClassWithSimpleProps

## Constructors

### Constructor

\`\`\`ts
new ClassWithSimpleProps(): ClassWithSimpleProps;
\`\`\`

#### Returns

\`ClassWithSimpleProps\`

## Properties

| Property | Type | Default value | Description |
| :------ | :------ | :------ | :------ |
| <a id="propa"></a> \`propA\` | \`string\` | \`'propAValue'\` | Comments for propA |
| <a id="propb"></a> \`propB\` | \`string\` | \`'propBDefaultValue'\` | Comments for propB |
| <a id="propc"></a> \`propC\` | \`string\` | \`'propCDefaultValue'\` | Comments for propB on two lines |
| <a id="propd"></a> \`propD\` | \`string\` | \`undefined\` | Comments for propE |
"
`;

exports[`Class Reflection should compile class with symbols: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: ClassWithSymbols

Defined in: [classes.ts:1](http://source-url)

## Constructors

### Constructor

> **new ClassWithSymbols**(): \`ClassWithSymbols\`

#### Returns

\`ClassWithSymbols\`

## Properties

### \\[symbolConst\\]()?

> \`static\` \`optional\` **\\[symbolConst\\]**: () => \`void\`

Defined in: [classes.ts:1](http://source-url)

#### Returns

\`void\`

## Methods

### \\[dispose\\]()

> **\\[dispose\\]**(): \`void\`

Defined in: [classes.ts:1](http://source-url)

#### Returns

\`void\`
"
`;

exports[`Class Reflection should compile class with type parameters: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: ClassWithTypeParameters\\<A, B, C\\>

Defined in: [classes.ts:1](http://source-url)

Comments for ClassWithTypeParameters

## Type Parameters

### A

\`A\`

### B

\`B\` *extends* \`string\`

Comments for param B

### C

\`C\` = \`boolean\`

Comments for param C

## Constructors

### Constructor

> **new ClassWithTypeParameters**\\<\`A\`, \`B\`, \`C\`\\>(): \`ClassWithTypeParameters\`\\<\`A\`, \`B\`, \`C\`\\>

#### Returns

\`ClassWithTypeParameters\`\\<\`A\`, \`B\`, \`C\`\\>
"
`;

exports[`Class Reflection should compile class with type parameters: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Class: ClassWithTypeParameters\\<A, B, C\\>

Defined in: [classes.ts:1](http://source-url)

Comments for ClassWithTypeParameters

## Type Parameters

| Type Parameter | Default type | Description |
| :------ | :------ | :------ |
| \`A\` | - | - |
| \`B\` *extends* \`string\` | - | Comments for param B |
| \`C\` | \`boolean\` | Comments for param C |

## Constructors

### Constructor

\`\`\`ts
new ClassWithTypeParameters<A, B, C>(): ClassWithTypeParameters<A, B, C>;
\`\`\`

#### Returns

\`ClassWithTypeParameters\`\\<\`A\`, \`B\`, \`C\`\\>
"
`;

exports[`Class Reflection should compile class without prop categories: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: ClassWithoutPropCategories

Defined in: [classes.ts:1](http://source-url)

## Constructors

### Constructor

> **new ClassWithoutPropCategories**(\`opts\`): \`ClassWithoutPropCategories\`

Defined in: [classes.ts:1](http://source-url)

#### Parameters

##### opts

###### a

\`string\`

###### b

\`string\`

#### Returns

\`ClassWithoutPropCategories\`

## Properties

### prop1

> **prop1**: \`string\`

Defined in: [classes.ts:1](http://source-url)

***

### prop2

> **prop2**: \`string\`

Defined in: [classes.ts:1](http://source-url)

## Methods

### method1()

> **method1**(): \`void\`

Defined in: [classes.ts:1](http://source-url)

#### Returns

\`void\`

***

### method2()

> **method2**(): \`void\`

Defined in: [classes.ts:1](http://source-url)

#### Returns

\`void\`
"
`;

exports[`Class Reflection should compile class without prop categories: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Class: ClassWithoutPropCategories

Defined in: [classes.ts:1](http://source-url)

## Constructors

### Constructor

\`\`\`ts
new ClassWithoutPropCategories(opts: object): ClassWithoutPropCategories;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

#### Parameters

| Parameter | Type |
| :------ | :------ |
| \`opts\` | \\{ \`a\`: \`string\`; \`b\`: \`string\`; \\} |
| \`opts.a\` | \`string\` |
| \`opts.b\` | \`string\` |

#### Returns

\`ClassWithoutPropCategories\`

## Properties

| Property | Type |
| :------ | :------ |
| <a id="prop1"></a> \`prop1\` | \`string\` |
| <a id="prop2"></a> \`prop2\` | \`string\` |

## Methods

### method1()

\`\`\`ts
method1(): void;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

#### Returns

\`void\`

***

### method2()

\`\`\`ts
method2(): void;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

#### Returns

\`void\`
"
`;

exports[`Class Reflection should compile derived class: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: DerivedClassA

Defined in: [classes.ts:1](http://source-url)

Comments for DerivedClassA

## Hierarchy

[View Summary](../hierarchy.md)

### Extends

- [\`AbstractClass\`](AbstractClass.md)

## Constructors

### Constructor

> **new DerivedClassA**(): \`DerivedClassA\`

#### Returns

\`DerivedClassA\`

#### Inherited from

[\`AbstractClass\`](AbstractClass.md).[\`constructor\`](AbstractClass.md#constructor)

## Properties

### abstractProp

> **abstractProp**: \`string\` = \`'abstractProp'\`

Defined in: [classes.ts:1](http://source-url)

Comments for abstractProp

#### Overrides

[\`AbstractClass\`](AbstractClass.md).[\`abstractProp\`](AbstractClass.md#abstractprop)

***

### derivedProp

> **derivedProp**: \`string\`

Defined in: [classes.ts:1](http://source-url)

## Methods

### abstractMethod()

> **abstractMethod**(): \`string\`

Defined in: [classes.ts:1](http://source-url)

Comments for abstractMethod

#### Returns

\`string\`

#### Overrides

[\`AbstractClass\`](AbstractClass.md).[\`abstractMethod\`](AbstractClass.md#abstractmethod)

***

### derivedMethod()

> **derivedMethod**(): \`string\`

Defined in: [classes.ts:1](http://source-url)

#### Returns

\`string\`
"
`;

exports[`Class Reflection should compile derived class: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Class: DerivedClassA

Defined in: [classes.ts:1](http://source-url)

Comments for DerivedClassA

## Extends

- [\`AbstractClass\`](AbstractClass.md)

## Constructors

### Constructor

\`\`\`ts
new DerivedClassA(): DerivedClassA;
\`\`\`

#### Returns

\`DerivedClassA\`

#### Inherited from

[\`AbstractClass\`](AbstractClass.md).[\`constructor\`](AbstractClass.md#constructor)

## Properties

| Property | Type | Default value | Description | Overrides |
| :------ | :------ | :------ | :------ | :------ |
| <a id="abstractprop"></a> \`abstractProp\` | \`string\` | \`'abstractProp'\` | Comments for abstractProp | [\`AbstractClass\`](AbstractClass.md).[\`abstractProp\`](AbstractClass.md#abstractprop) |
| <a id="derivedprop"></a> \`derivedProp\` | \`string\` | \`undefined\` | - | - |

## Methods

### abstractMethod()

\`\`\`ts
abstractMethod(): string;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

Comments for abstractMethod

#### Returns

\`string\`

#### Overrides

[\`AbstractClass\`](AbstractClass.md).[\`abstractMethod\`](AbstractClass.md#abstractmethod)

***

### derivedMethod()

\`\`\`ts
derivedMethod(): string;
\`\`\`

Defined in: [classes.ts:1](http://source-url)

#### Returns

\`string\`
"
`;

exports[`Class Reflection should compile disposable class: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: DisposableClass

Defined in: [classes.ts:1](http://source-url)

## Implements

- \`Disposable\`

## Constructors

### Constructor

> **new DisposableClass**(): \`DisposableClass\`

#### Returns

\`DisposableClass\`

## Methods

### \\[dispose\\]()

> **\\[dispose\\]**(): \`void\`

Defined in: [classes.ts:1](http://source-url)

#### Returns

\`void\`

#### Implementation of

\`Disposable.[dispose]\`
"
`;

exports[`Class Reflection should compile hierarchy for BaseClass: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: BaseClass

Defined in: [classes.ts:1](http://source-url)

## Hierarchy

[View Summary](../hierarchy.md)

### Extended by

- [\`ChildClassA\`](ChildClassA.md)
- [\`ChildClassB\`](ChildClassB.md)

## Constructors

### Constructor

> **new BaseClass**(): \`BaseClass\`

#### Returns

\`BaseClass\`
"
`;

exports[`Class Reflection should compile hierarchy for ChildClassA: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: ChildClassA

Defined in: [classes.ts:1](http://source-url)

## Hierarchy

[View Summary](../hierarchy.md)

### Extends

- [\`BaseClass\`](BaseClass.md)

### Extended by

- [\`GrandChildClassA\`](GrandChildClassA.md)
- [\`GrandChildClassB\`](GrandChildClassB.md)

## Constructors

### Constructor

> **new ChildClassA**(): \`ChildClassA\`

#### Returns

\`ChildClassA\`

#### Inherited from

[\`BaseClass\`](BaseClass.md).[\`constructor\`](BaseClass.md#constructor)
"
`;

exports[`Class Reflection should compile hierarchy for GrandChildClassA: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: GrandChildClassA

Defined in: [classes.ts:1](http://source-url)

## Hierarchy

[View Summary](../hierarchy.md)

### Extends

- [\`ChildClassA\`](ChildClassA.md)

## Constructors

### Constructor

> **new GrandChildClassA**(): \`GrandChildClassA\`

#### Returns

\`GrandChildClassA\`

#### Inherited from

[\`ChildClassA\`](ChildClassA.md).[\`constructor\`](ChildClassA.md#constructor)
"
`;

exports[`Class Reflection should compile hierarchy for GrandChildClassA: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Class: GrandChildClassA

Defined in: [classes.ts:1](http://source-url)

## Extends

- [\`ChildClassA\`](ChildClassA.md)

## Constructors

### Constructor

\`\`\`ts
new GrandChildClassA(): GrandChildClassA;
\`\`\`

#### Returns

\`GrandChildClassA\`

#### Inherited from

[\`ChildClassA\`](ChildClassA.md).[\`constructor\`](ChildClassA.md#constructor)
"
`;
