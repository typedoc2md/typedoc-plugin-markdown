// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Function Reflection should compile curried function: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: curriedFunction()

Comments for main curriedFunction

## Call Signature

> **curriedFunction**(\`searchElement\`): \\<\`Value\`\\>(\`iterable\`) => \`boolean\`

Defined in: [functions.ts:1](http://source-url)

Comments for current function 1

### Parameters

#### searchElement

\`unknown\`

### Returns

\`Function\`

#### Type Parameters

• **Value**

#### Parameters

##### iterable

\`Iterable\`\\<\`Value\`\\>

Comments for iterable arg

#### Returns

\`boolean\`

## Call Signature

> **curriedFunction**\\<\`Value\`\\>(\`searchElement\`, \`iterable\`): \`string\`

Defined in: [functions.ts:1](http://source-url)

### Type Parameters

• **Value**

### Parameters

#### searchElement

\`unknown\`

#### iterable

\`Iterable\`\\<\`Value\`\\>

### Returns

\`string\`
"
`;

exports[`Function Reflection should compile curried function: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: curriedFunction()

Comments for main curriedFunction

## Call Signature

\`\`\`ts
function curriedFunction(searchElement: unknown): <Value>(iterable: Iterable<Value>) => boolean
\`\`\`

Defined in: [functions.ts:1](http://source-url)

Comments for current function 1

### Parameters

| Parameter | Type |
| :------ | :------ |
| \`searchElement\` | \`unknown\` |

### Returns

\`Function\`

#### Type Parameters

| Type Parameter |
| :------ |
| \`Value\` |

#### Parameters

| Parameter | Type | Description |
| :------ | :------ | :------ |
| \`iterable\` | \`Iterable\`\\<\`Value\`\\> | Comments for iterable arg |

#### Returns

\`boolean\`

## Call Signature

\`\`\`ts
function curriedFunction<Value>(searchElement: unknown, iterable: Iterable<Value>): string
\`\`\`

Defined in: [functions.ts:1](http://source-url)

### Type Parameters

| Type Parameter |
| :------ |
| \`Value\` |

### Parameters

| Parameter | Type |
| :------ | :------ |
| \`searchElement\` | \`unknown\` |
| \`iterable\` | \`Iterable\`\\<\`Value\`\\> |

### Returns

\`string\`
"
`;

exports[`Function Reflection should compile function returning a function: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: functionReturningAFunction()

> **functionReturningAFunction**(): \\<\`T\`\\>(\`x\`) => \`boolean\`

Defined in: [functions.ts:1](http://source-url)

Comments for function

## Returns

\`Function\`

### Type Parameters

• **T**

### Parameters

#### x

\`string\`

### Returns

\`boolean\`
"
`;

exports[`Function Reflection should compile function returning a function: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: functionReturningAFunction()

\`\`\`ts
function functionReturningAFunction(): <T>(x: string) => boolean
\`\`\`

Defined in: [functions.ts:1](http://source-url)

Comments for function

## Returns

\`Function\`

### Type Parameters

| Type Parameter |
| :------ |
| \`T\` |

### Parameters

| Parameter | Type |
| :------ | :------ |
| \`x\` | \`string\` |

### Returns

\`boolean\`
"
`;

exports[`Function Reflection should compile function returning a promise: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: functionReturningAPromise()

> **functionReturningAPromise**(): [\`Promise\`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\<\\{ \`prop\`: \`string\`; \\}\\>

Defined in: [functions.ts:1](http://source-url)

Comments for function

## Returns

[\`Promise\`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\<\\{ \`prop\`: \`string\`; \\}\\>

Return comments
"
`;

exports[`Function Reflection should compile function returning a promise: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: functionReturningAPromise()

\`\`\`ts
function functionReturningAPromise(): Promise<{
  prop: string;
}>
\`\`\`

Defined in: [functions.ts:1](http://source-url)

Comments for function

## Returns

[\`Promise\`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)\\<\\{
  \`prop\`: \`string\`;
 \\}\\>

Return comments
"
`;

exports[`Function Reflection should compile function returning a string: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: functionReturningAString()

> **functionReturningAString**(): \`string\`

Defined in: [functions.ts:1](http://source-url)

Comments for function

## Returns

\`string\`

Return comments
"
`;

exports[`Function Reflection should compile function returning a string: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: functionReturningAString()

\`\`\`ts
function functionReturningAString(): string
\`\`\`

Defined in: [functions.ts:1](http://source-url)

Comments for function

## Returns

\`string\`

Return comments
"
`;

exports[`Function Reflection should compile function returning a union: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: functionReturningAUnionType()

> **functionReturningAUnionType**(): \`string\` \\| \`boolean\` \\| \`"string1"\` \\| \`"string2"\`

Defined in: [functions.ts:1](http://source-url)

Comments for function

## Returns

\`string\` \\| \`boolean\` \\| \`"string1"\` \\| \`"string2"\`

Return comments
"
`;

exports[`Function Reflection should compile function returning a union: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: functionReturningAUnionType()

\`\`\`ts
function functionReturningAUnionType(): string | boolean | "string1" | "string2"
\`\`\`

Defined in: [functions.ts:1](http://source-url)

Comments for function

## Returns

\`string\` \\| \`boolean\` \\| \`"string1"\` \\| \`"string2"\`

Return comments
"
`;

exports[`Function Reflection should compile function returning an object: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: functionReturningAnObject()

> **functionReturningAnObject**(): \`object\`

Defined in: [functions.ts:1](http://source-url)

Comments for function

## Returns

\`object\`

Return comments

### x

> **x**: \`number\` = \`1\`

### y

> **y**: \`number\` = \`2\`
"
`;

exports[`Function Reflection should compile function returning an object: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: functionReturningAnObject()

\`\`\`ts
function functionReturningAnObject(): object
\`\`\`

Defined in: [functions.ts:1](http://source-url)

Comments for function

## Returns

\`object\`

Return comments

| Name | Type | Default value |
| :------ | :------ | :------ |
| <a id="x"></a> \`x\` | \`number\` | 1 |
| <a id="y"></a> \`y\` | \`number\` | 2 |
"
`;

exports[`Function Reflection should compile function with a parameter: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: basicFunction()

> **basicFunction**(\`someParam\`): \`number\`

Defined in: [functions.ts:1](http://source-url)

This is a function that is assigned to a variable.

## See

http://abc.com

## Parameters

### someParam

\`number\`

This is some numeric parameter.

## Returns

\`number\`
"
`;

exports[`Function Reflection should compile function with a parameter: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: basicFunction()

\`\`\`ts
function basicFunction(someParam: number): number
\`\`\`

Defined in: [functions.ts:1](http://source-url)

This is a function that is assigned to a variable.

## See

http://abc.com

## Parameters

| Parameter | Type | Description |
| :------ | :------ | :------ |
| \`someParam\` | \`number\` | This is some numeric parameter. |

## Returns

\`number\`
"
`;

exports[`Function Reflection should compile function with array of optional stuff: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: functionWithArrayOfOptionalStuff()

> **functionWithArrayOfOptionalStuff**(\`a\`): \`void\`

Defined in: [functions.ts:1](http://source-url)

Comments for array of stuff?

## Parameters

### a

\\[[\`Stuff\`](../type-aliases/Stuff.md)?\\]

## Returns

\`void\`
"
`;

exports[`Function Reflection should compile function with array of optional stuff: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: functionWithArrayOfOptionalStuff()

\`\`\`ts
function functionWithArrayOfOptionalStuff(a: [Stuff?]): void
\`\`\`

Defined in: [functions.ts:1](http://source-url)

Comments for array of stuff?

## Parameters

| Parameter | Type |
| :------ | :------ |
| \`a\` | \\[[\`Stuff\`](../type-aliases/Stuff.md)?\\] |

## Returns

\`void\`
"
`;

exports[`Function Reflection should compile function with array of stuff: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: functionWithArrayOfStuff()

> **functionWithArrayOfStuff**(\`a\`): \`void\`

Defined in: [functions.ts:1](http://source-url)

Comments for array of stuff

## Parameters

### a

\\[[\`Stuff\`](../type-aliases/Stuff.md)\\]

## Returns

\`void\`
"
`;

exports[`Function Reflection should compile function with array of stuff: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: functionWithArrayOfStuff()

\`\`\`ts
function functionWithArrayOfStuff(a: [Stuff]): void
\`\`\`

Defined in: [functions.ts:1](http://source-url)

Comments for array of stuff

## Parameters

| Parameter | Type |
| :------ | :------ |
| \`a\` | \\[[\`Stuff\`](../type-aliases/Stuff.md)\\] |

## Returns

\`void\`
"
`;

exports[`Function Reflection should compile function with array of union stuff: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: functionWithArrayOfUnionStuff()

> **functionWithArrayOfUnionStuff**(\`a\`): \`void\`

Defined in: [functions.ts:1](http://source-url)

Comments for array of union stuff

## Parameters

### a

\\[[\`Stuff\`](../type-aliases/Stuff.md)?\\]

## Returns

\`void\`
"
`;

exports[`Function Reflection should compile function with array of union stuff: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: functionWithArrayOfUnionStuff()

\`\`\`ts
function functionWithArrayOfUnionStuff(a: [Stuff?]): void
\`\`\`

Defined in: [functions.ts:1](http://source-url)

Comments for array of union stuff

## Parameters

| Parameter | Type |
| :------ | :------ |
| \`a\` | \\[[\`Stuff\`](../type-aliases/Stuff.md)?\\] |

## Returns

\`void\`
"
`;

exports[`Function Reflection should compile function with complex params: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: functionWithComplexParams()

> **functionWithComplexParams**(\`paramA\`, \`paramB\`): \`boolean\`

Defined in: [functions.ts:1](http://source-url)

Function with function parmas

## Parameters

### paramA

(\`a\`) => \`true\`

### paramB

#### x

\`1\`

## Returns

\`boolean\`
"
`;

exports[`Function Reflection should compile function with complex params: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: functionWithComplexParams()

\`\`\`ts
function functionWithComplexParams(paramA: (a: string) => true, paramB: object): boolean
\`\`\`

Defined in: [functions.ts:1](http://source-url)

Function with function parmas

## Parameters

| Parameter | Type |
| :------ | :------ |
| \`paramA\` | (\`a\`: \`string\`) => \`true\` |
| \`paramB\` | \\{ \`x\`: \`1\`; \\} |
| \`paramB.x\` | \`1\` |

## Returns

\`boolean\`
"
`;

exports[`Function Reflection should compile function with default parameters: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: functionWithDefaultParameters()

> **functionWithDefaultParameters**(\`valueA\`, \`valueB\`, \`valueC\`, \`valueD\`, \`valueE\`, \`valueF\`): \`string\`

Defined in: [functions.ts:1](http://source-url)

This is a function with a parameter that has a default value.

## Parameters

### valueA

\`string\` = \`'defaultValue'\`

A parameter with a default string value.

### valueB

\`number\` = \`100\`

A parameter with a default numeric value.

### valueC

\`number\` = \`Number.NaN\`

A parameter with a default NaN value.

### valueD

\`boolean\` = \`true\`

A parameter with a default boolean value.

### valueE

\`boolean\` = \`true\`

A parameter with a default null value.

### valueF

\`string\` = \`'<foo>'\`

## Returns

\`string\`
"
`;

exports[`Function Reflection should compile function with default parameters: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: functionWithDefaultParameters()

\`\`\`ts
function functionWithDefaultParameters(
   valueA: string, 
   valueB: number, 
   valueC: number, 
   valueD: boolean, 
   valueE: boolean, 
   valueF: string): string
\`\`\`

Defined in: [functions.ts:1](http://source-url)

This is a function with a parameter that has a default value.

## Parameters

| Parameter | Type | Default value | Description |
| :------ | :------ | :------ | :------ |
| \`valueA\` | \`string\` | \`'defaultValue'\` | A parameter with a default string value. |
| \`valueB\` | \`number\` | \`100\` | A parameter with a default numeric value. |
| \`valueC\` | \`number\` | \`Number.NaN\` | A parameter with a default NaN value. |
| \`valueD\` | \`boolean\` | \`true\` | A parameter with a default boolean value. |
| \`valueE\` | \`boolean\` | \`true\` | A parameter with a default null value. |
| \`valueF\` | \`string\` | \`'<foo>'\` | - |

## Returns

\`string\`
"
`;

exports[`Function Reflection should compile function with explicit inline tuple type optional params: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: tupleTypeFunctionInlineExplicit()

> **tupleTypeFunctionInlineExplicit**(\`opts\`): \`void\`

Defined in: [functions.ts:1](http://source-url)

## Parameters

### opts

\\[\\{ \`a\`: \`string\`; \`b\`: \`string\`; \\}\\]

## Returns

\`void\`
"
`;

exports[`Function Reflection should compile function with explicit inline tuple type optional params: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: tupleTypeFunctionInlineExplicit()

\`\`\`ts
function tupleTypeFunctionInlineExplicit(opts: [{
  a: string;
  b: string;
 }]): void
\`\`\`

Defined in: [functions.ts:1](http://source-url)

## Parameters

| Parameter | Type |
| :------ | :------ |
| \`opts\` | \\[\\{ \`a\`: \`string\`; \`b\`: \`string\`; \\}\\] |

## Returns

\`void\`
"
`;

exports[`Function Reflection should compile function with multiple signatures: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: functionWithMultipleSignatures()

Main function comment.

## Call Signature

> **functionWithMultipleSignatures**(\`value\`): \`string\`

Defined in: [functions.ts:1](http://source-url)

This is the first signature of a function with multiple signatures.

### Parameters

#### value

\`string\`

The name value.

### Returns

\`string\`

## Call Signature

> **functionWithMultipleSignatures**(\`value\`): \`string\`

Defined in: [functions.ts:1](http://source-url)

This is the second signature of a function with multiple signatures.

### Parameters

#### value

An object containing the name value.

##### name

\`string\`

A value of the object.

### Returns

\`string\`
"
`;

exports[`Function Reflection should compile function with multiple signatures: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: functionWithMultipleSignatures()

Main function comment.

## Call Signature

\`\`\`ts
function functionWithMultipleSignatures(value: string): string
\`\`\`

Defined in: [functions.ts:1](http://source-url)

This is the first signature of a function with multiple signatures.

### Parameters

| Parameter | Type | Description |
| :------ | :------ | :------ |
| \`value\` | \`string\` | The name value. |

### Returns

\`string\`

## Call Signature

\`\`\`ts
function functionWithMultipleSignatures(value: object): string
\`\`\`

Defined in: [functions.ts:1](http://source-url)

This is the second signature of a function with multiple signatures.

### Parameters

| Parameter | Type | Description |
| :------ | :------ | :------ |
| \`value\` | \\{ \`name\`: \`string\`; \\} | An object containing the name value. |
| \`value.name\` | \`string\` | A value of the object. |

### Returns

\`string\`
"
`;

exports[`Function Reflection should compile function with named params: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: functionWithNamedParams()

> **functionWithNamedParams**(\`__namedParameters\`, \`anotherParam\`): \`void\`

Defined in: [functions.ts:1](http://source-url)

## Parameters

### \\_\\_namedParameters

various options

#### bar?

\`number\` = \`43\`

#### foo?

\`number\` = \`42\`

### anotherParam

\`string\`

Another param comment

## Returns

\`void\`
"
`;

exports[`Function Reflection should compile function with named params: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: functionWithNamedParams()

\`\`\`ts
function functionWithNamedParams(__namedParameters: object, anotherParam: string): void
\`\`\`

Defined in: [functions.ts:1](http://source-url)

## Parameters

| Parameter | Type | Description |
| :------ | :------ | :------ |
| \`__namedParameters\` | \\{ \`bar\`: \`number\`; \`foo\`: \`number\`; \\} | various options |
| \`__namedParameters.bar\`? | \`number\` | - |
| \`__namedParameters.foo\`? | \`number\` | - |
| \`anotherParam\` | \`string\` | Another param comment |

## Returns

\`void\`
"
`;

exports[`Function Reflection should compile function with nested parameters: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: functionWithNestedParameters()

> **functionWithNestedParameters**(\`params\`, \`context\`, \`somethingElse\`?): \`boolean\`

Defined in: [functions.ts:1](http://source-url)

Some nested params.

## Parameters

### params

The parameters passed to the method.

#### name

\`string\`

The name of the new group.

#### nestedObj

\\{ \`name\`: \`string\`; \`obj\`: \\{ \`name\`: () => \`void\`; \\}; \`value\`: \`number\`; \\}

A nested object.

#### nestedObj.name

\`string\`

#### nestedObj.obj

\\{ \`name\`: () => \`void\`; \\}

#### nestedObj.obj.name

() => \`void\`

#### nestedObj.value

\`number\`

#### parent?

\`number\`

### context

\`any\`

The context of the method call.

### somethingElse?

\`string\`

## Returns

\`boolean\`
"
`;

exports[`Function Reflection should compile function with nested parameters: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: functionWithNestedParameters()

\`\`\`ts
function functionWithNestedParameters(
   params: object, 
   context: any, 
   somethingElse?: string): boolean
\`\`\`

Defined in: [functions.ts:1](http://source-url)

Some nested params.

## Parameters

| Parameter | Type | Description |
| :------ | :------ | :------ |
| \`params\` | \\{ \`name\`: \`string\`; \`nestedObj\`: \\{ \`name\`: \`string\`; \`obj\`: \\{ \`name\`: () => \`void\`; \\}; \`value\`: \`number\`; \\}; \`parent\`: \`number\`; \\} | The parameters passed to the method. |
| \`params.name\` | \`string\` | The name of the new group. |
| \`params.nestedObj\` | \\{ \`name\`: \`string\`; \`obj\`: \\{ \`name\`: () => \`void\`; \\}; \`value\`: \`number\`; \\} | A nested object. |
| \`params.nestedObj.name\`? | \`string\` | - |
| \`params.nestedObj.obj\`? | \\{ \`name\`: () => \`void\`; \\} | - |
| \`params.nestedObj.obj.name\`? | () => \`void\` | - |
| \`params.nestedObj.value\`? | \`number\` | - |
| \`params.parent\`? | \`number\` | - |
| \`context\`? | \`any\` | The context of the method call. |
| \`somethingElse\`? | \`string\` | - |

## Returns

\`boolean\`
"
`;

exports[`Function Reflection should compile function with optional parameters: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: functionWithOptionalParameters()

> **functionWithOptionalParameters**(\`firstParamWithDefault\`, \`requiredParam\`, \`optionalParam\`?, \`paramWithDefault\`?): \`void\`

Defined in: [functions.ts:1](http://source-url)

This is a function with a parameters.

## Parameters

### firstParamWithDefault

\`boolean\` = \`true\`

### requiredParam

\`string\`

A normal parameter.

### optionalParam?

\`string\`

An optional parameter.

### paramWithDefault?

\`number\` = \`0\`

## Returns

\`void\`
"
`;

exports[`Function Reflection should compile function with optional parameters: (Output File Strategy "members") (Option Group "1") 2`] = `
"# Function: functionWithOptionalParameters()

> **functionWithOptionalParameters**(\`firstParamWithDefault\`, \`requiredParam\`, \`optionalParam\`?, \`paramWithDefault\`?): \`void\`

Defined in: [functions.ts:1](http://source-url)

This is a function with a parameters.

## Parameters

### firstParamWithDefault

\`boolean\` = \`true\`

### requiredParam

\`string\`

A normal parameter.

### optionalParam?

\`string\`

An optional parameter.

### paramWithDefault?

\`number\` = \`0\`

## Returns

\`void\`
"
`;

exports[`Function Reflection should compile function with optional parameters: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: functionWithOptionalParameters()

\`\`\`ts
function functionWithOptionalParameters(
   firstParamWithDefault: boolean, 
   requiredParam: string, 
   optionalParam?: string, 
   paramWithDefault?: number): void
\`\`\`

Defined in: [functions.ts:1](http://source-url)

This is a function with a parameters.

## Parameters

| Parameter | Type | Default value | Description |
| :------ | :------ | :------ | :------ |
| \`firstParamWithDefault\` | \`boolean\` | \`true\` | - |
| \`requiredParam\` | \`string\` | \`undefined\` | A normal parameter. |
| \`optionalParam\`? | \`string\` | \`undefined\` | An optional parameter. |
| \`paramWithDefault\`? | \`number\` | \`0\` | - |

## Returns

\`void\`
"
`;

exports[`Function Reflection should compile function with optional parameters: (Output File Strategy "members") (Option Group "2") 2`] = `
"# Function: functionWithOptionalParameters()

\`\`\`ts
function functionWithOptionalParameters(
   firstParamWithDefault: boolean, 
   requiredParam: string, 
   optionalParam?: string, 
   paramWithDefault?: number): void
\`\`\`

Defined in: [functions.ts:1](http://source-url)

This is a function with a parameters.

## Parameters

| Parameter | Type | Default value | Description |
| :------ | :------ | :------ | :------ |
| \`firstParamWithDefault\` | \`boolean\` | \`true\` | - |
| \`requiredParam\` | \`string\` | \`undefined\` | A normal parameter. |
| \`optionalParam\`? | \`string\` | \`undefined\` | An optional parameter. |
| \`paramWithDefault\`? | \`number\` | \`0\` | - |

## Returns

\`void\`
"
`;

exports[`Function Reflection should compile function with rest params: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: functionWithRestParams()

> **functionWithRestParams**(\`param\`, ...\`restParams\`): \`boolean\`

Defined in: [functions.ts:1](http://source-url)

Function with reset parmas

## Parameters

### param

\`string\`

### restParams

...\`string\`[]

## Returns

\`boolean\`
"
`;

exports[`Function Reflection should compile function with rest params: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: functionWithRestParams()

\`\`\`ts
function functionWithRestParams(param: string, ...restParams: string[]): boolean
\`\`\`

Defined in: [functions.ts:1](http://source-url)

Function with reset parmas

## Parameters

| Parameter | Type |
| :------ | :------ |
| \`param\` | \`string\` |
| ...\`restParams\` | \`string\`[] |

## Returns

\`boolean\`
"
`;

exports[`Function Reflection should compile function with tuple type optional params: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: tupleTypeFunctionOptional()

> **tupleTypeFunctionOptional**(\`opts\`): \`void\`

Defined in: [functions.ts:1](http://source-url)

## Parameters

### opts

\\[\\{ \`a\`: \`string\`; \`b\`: \`string\`; \\}?\\]

## Returns

\`void\`
"
`;

exports[`Function Reflection should compile function with tuple type optional params: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: tupleTypeFunctionOptional()

\`\`\`ts
function tupleTypeFunctionOptional(opts: [{
  a: string;
  b: string;
 }?]): void
\`\`\`

Defined in: [functions.ts:1](http://source-url)

## Parameters

| Parameter | Type |
| :------ | :------ |
| \`opts\` | \\[\\{ \`a\`: \`string\`; \`b\`: \`string\`; \\}?\\] |

## Returns

\`void\`
"
`;

exports[`Function Reflection should compile function with tuple type params: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: tupleTypeFunction()

> **tupleTypeFunction**(\`opts\`): \`void\`

Defined in: [functions.ts:1](http://source-url)

## Parameters

### opts

\\[\\{ \`a\`: \`string\`; \`b\`: \`string\`; \\}\\]

opts comments

## Returns

\`void\`
"
`;

exports[`Function Reflection should compile function with tuple type params: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: tupleTypeFunction()

\`\`\`ts
function tupleTypeFunction(opts: [{
  a: string;
  b: string;
 }]): void
\`\`\`

Defined in: [functions.ts:1](http://source-url)

## Parameters

| Parameter | Type | Description |
| :------ | :------ | :------ |
| \`opts\` | \\[\\{ \`a\`: \`string\`; \`b\`: \`string\`; \\}\\] | opts comments |

## Returns

\`void\`
"
`;

exports[`Function Reflection should compile function with type parameters: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: functionWithTypeParameters()

> **functionWithTypeParameters**\\<\`T\`, \`Item\`\\>(): \`boolean\`

Defined in: [functions.ts:1](http://source-url)

Function with type parameters

## Type Parameters

• **T**

Comments for T

• **Item** = \`string\` \\| \`boolean\`

## Returns

\`boolean\`
"
`;

exports[`Function Reflection should compile function with type parameters: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: functionWithTypeParameters()

\`\`\`ts
function functionWithTypeParameters<T, Item>(): boolean
\`\`\`

Defined in: [functions.ts:1](http://source-url)

Function with type parameters

## Type Parameters

| Type Parameter | Default type | Description |
| :------ | :------ | :------ |
| \`T\` | - | Comments for T |
| \`Item\` | \`string\` \\| \`boolean\` | - |

## Returns

\`boolean\`
"
`;

exports[`Function Reflection should compile function with union params: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Function: functionWithUnionParams()

> **functionWithUnionParams**(\`primitiveUnions\`, \`objectUnions\`, \`mixedUnions\`, \`noUnions\`): \`any\`

Defined in: [functions.ts:1](http://source-url)

## Parameters

### primitiveUnions

Comments for primitiveUnions

\`string\` | \`number\`

### objectUnions

Comments for objectUnionsUseful

\\{ \`a\`: \`string\`; \`b\`: \`1\`; \\} | \\{ \`a\`: \`number\`; \`b\`: \`1\`; \`c\`: \\{ \`x\`: \`string\`; \\}; \\}

### mixedUnions

Comments for mixedUnions

\`string\` | \`number\` |

\\{ \`a\`: \`string\`; \`b\`: \`string\`; \\}

Comments for mixedUnions

#### a

\`string\` = \`''\`

a comments

#### b

\`string\` = \`''\`

b comments

|

\\{ \`a\`: \\{ \`y\`: \`string\`; \`z\`: \`string\`; \\}; \\}

Comments for mixedUnions

#### a

\\{ \`y\`: \`string\`; \`z\`: \`string\`; \\}

Comments for a

#### a.y

\`string\`

#### a.z

\`string\`

### noUnions

\`string\`

Comments for noUnions

## Returns

\`any\`
"
`;

exports[`Function Reflection should compile function with union params: (Output File Strategy "members") (Option Group "2") 1`] = `
"# Function: functionWithUnionParams()

\`\`\`ts
function functionWithUnionParams(
   primitiveUnions: string | number, 
   objectUnions: 
  | {
  a: string;
  b: 1;
 }
  | {
  a: number;
  b: 1;
  c: {
     x: string;
    };
 }, 
   mixedUnions: 
  | string
  | number
  | {
  a: string;
  b: string;
 }
  | {
  a: {
     y: string;
     z: string;
    };
 }, 
   noUnions: string): any
\`\`\`

Defined in: [functions.ts:1](http://source-url)

## Parameters

| Parameter | Type | Description |
| :------ | :------ | :------ |
| \`primitiveUnions\` | \`string\` \\| \`number\` | Comments for primitiveUnions |
| \`objectUnions\` | \\| \\{ \`a\`: \`string\`; \`b\`: \`1\`; \\} \\| \\{ \`a\`: \`number\`; \`b\`: \`1\`; \`c\`: \\{ \`x\`: \`string\`; \\}; \\} | Comments for objectUnionsUseful |
| \`mixedUnions\` | \\| \`string\` \\| \`number\` \\| \\{ \`a\`: \`string\`; \`b\`: \`string\`; \\} \\| \\{ \`a\`: \\{ \`y\`: \`string\`; \`z\`: \`string\`; \\}; \\} | Comments for mixedUnions |
| \`noUnions\` | \`string\` | Comments for noUnions |

## Returns

\`any\`
"
`;
