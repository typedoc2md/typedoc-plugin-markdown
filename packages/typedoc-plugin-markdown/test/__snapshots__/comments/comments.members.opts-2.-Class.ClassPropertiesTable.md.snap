# Class: ClassPropertiesTable

Defined in: [index.ts:1](http://source-url)

## Extends

- [`BaseClassProperties`](https://example.com/Class.BaseClassProperties.md)

## Constructors

<a id="api-constructor"></a>

### Constructor

> **new ClassPropertiesTable**(): `ClassPropertiesTable`

#### Returns

`ClassPropertiesTable`

#### Inherited from

[`BaseClassProperties`](https://example.com/Class.BaseClassProperties.md).[`constructor`](https://example.com/Class.BaseClassProperties.md#constructor)

## Properties

<table>
<thead>
<tr>
<th align="left">Property</th>
<th align="left">Type</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>

<a id="api-prop1"></a> `prop1`

</td>
<td>

`boolean`

</td>
<td>

The subroutine recursively parsed the hexadecimal data.
to generate the binary output for input validation.

</td>
</tr>
<tr>
<td>

<a id="api-prop2"></a> `prop2`

</td>
<td>

`RegExp`

</td>
<td>

Below is a breakdown of the notable performances:

- The CPU executed the instruction set in parallel with the GPU computations.
- The RAM efficiently cached the frequently accessed data for faster retrieval.
- The SSD accessed the stored files with lightning speed due to its high read/write capabilities.

</td>
</tr>
<tr>
<td>

<a id="api-prop3"></a> `prop3?`

</td>
<td>

`string`

</td>
<td>

> Example of Triple Code Block

```ts
def greet(name):
print("Hello, " + name + "!")
```

</td>
</tr>
<tr>
<td>

<a id="api-propa"></a> ~~`propA`~~

</td>
<td>

`string`

</td>
<td>

**Deprecated**

</td>
</tr>
<tr>
<td>

<a id="api-propb"></a> `propB`

</td>
<td>

`string`

</td>
<td>

&hyphen;

</td>
</tr>
<tr>
<td>

<a id="api-propwithflag"></a> `propWithFlag`

</td>
<td>

`string`

</td>
<td>

**`Experimental`**

Experimental flag comments

</td>
</tr>
</tbody>
</table>
